{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\nvar constants = require('./constants');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\nvar MAIN_TITLE = 1;\nmodule.exports = function draw(gd, opts) {\n  if (!opts) opts = gd._fullLayout.legend || {};\n  return _draw(gd, opts);\n};\nfunction _draw(gd, legendObj) {\n  var fullLayout = gd._fullLayout;\n  var clipId = 'legend' + fullLayout._uid;\n  var layer;\n  var inHover = legendObj._inHover;\n  if (inHover) {\n    layer = legendObj.layer;\n    clipId += '-hover';\n  } else {\n    layer = fullLayout._infolayer;\n  }\n  if (!layer) return;\n  if (!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n  var legendData;\n  if (!inHover) {\n    if (!gd.calcdata) return;\n    legendData = fullLayout.showlegend && getLegendData(gd.calcdata, legendObj);\n  } else {\n    if (!legendObj.entries) return;\n    legendData = getLegendData(legendObj.entries, legendObj);\n  }\n  var hiddenSlices = fullLayout.hiddenlabels || [];\n  if (!inHover && (!fullLayout.showlegend || !legendData.length)) {\n    layer.selectAll('.legend').remove();\n    fullLayout._topdefs.select('#' + clipId).remove();\n    return Plots.autoMargin(gd, 'legend');\n  }\n  var legend = Lib.ensureSingle(layer, 'g', 'legend', function (s) {\n    if (!inHover) s.attr('pointer-events', 'all');\n  });\n  var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function (s) {\n    s.append('rect');\n  });\n  var bg = Lib.ensureSingle(legend, 'rect', 'bg', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  bg.call(Color.stroke, legendObj.bordercolor).call(Color.fill, legendObj.bgcolor).style('stroke-width', legendObj.borderwidth + 'px');\n  var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n  var title = legendObj.title;\n  legendObj._titleWidth = 0;\n  legendObj._titleHeight = 0;\n  if (title.text) {\n    var titleEl = Lib.ensureSingle(scrollBox, 'text', 'legendtitletext');\n    titleEl.attr('text-anchor', 'start').call(Drawing.font, title.font).text(title.text);\n    textLayout(titleEl, scrollBox, gd, legendObj, MAIN_TITLE); // handle mathjax or multi-line text and compute title height\n  } else {\n    scrollBox.selectAll('.legendtitletext').remove();\n  }\n  var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function (s) {\n    s.attr(constants.scrollBarEnterAttrs).call(Color.fill, constants.scrollBarColor);\n  });\n  var groups = scrollBox.selectAll('g.groups').data(legendData);\n  groups.enter().append('g').attr('class', 'groups');\n  groups.exit().remove();\n  var traces = groups.selectAll('g.traces').data(Lib.identity);\n  traces.enter().append('g').attr('class', 'traces');\n  traces.exit().remove();\n  traces.style('opacity', function (d) {\n    var trace = d[0].trace;\n    if (Registry.traceIs(trace, 'pie-like')) {\n      return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n    } else {\n      return trace.visible === 'legendonly' ? 0.5 : 1;\n    }\n  }).each(function () {\n    d3.select(this).call(drawTexts, gd, legendObj);\n  }).call(style, gd, legendObj).each(function () {\n    if (!inHover) d3.select(this).call(setupTraceToggle, gd);\n  });\n  Lib.syncOrAsync([Plots.previousPromises, function () {\n    return computeLegendDimensions(gd, groups, traces, legendObj);\n  }, function () {\n    var gs = fullLayout._size;\n    var bw = legendObj.borderwidth;\n    if (!inHover) {\n      var expMargin = expandMargin(gd);\n\n      // IF expandMargin return a Promise (which is truthy),\n      // we're under a doAutoMargin redraw, so we don't have to\n      // draw the remaining pieces below\n      if (expMargin) return;\n      var lx = gs.l + gs.w * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n      var ly = gs.t + gs.h * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n      if (fullLayout.margin.autoexpand) {\n        var lx0 = lx;\n        var ly0 = ly;\n        lx = Lib.constrain(lx, 0, fullLayout.width - legendObj._width);\n        ly = Lib.constrain(ly, 0, fullLayout.height - legendObj._effHeight);\n        if (lx !== lx0) {\n          Lib.log('Constrain legend.x to make legend fit inside graph');\n        }\n        if (ly !== ly0) {\n          Lib.log('Constrain legend.y to make legend fit inside graph');\n        }\n      }\n\n      // Set size and position of all the elements that make up a legend:\n      // legend, background and border, scroll box and scroll bar as well as title\n      Drawing.setTranslate(legend, lx, ly);\n    }\n\n    // to be safe, remove previous listeners\n    scrollBar.on('.drag', null);\n    legend.on('wheel', null);\n    if (inHover || legendObj._height <= legendObj._maxHeight || gd._context.staticPlot) {\n      // if scrollbar should not be shown.\n      var height = legendObj._effHeight;\n\n      // if unified hover, let it be its full size\n      if (inHover) height = legendObj._height;\n      bg.attr({\n        width: legendObj._width - bw,\n        height: height - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      Drawing.setTranslate(scrollBox, 0, 0);\n      clipPath.select('rect').attr({\n        width: legendObj._width - 2 * bw,\n        height: height - 2 * bw,\n        x: bw,\n        y: bw\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      Drawing.setRect(scrollBar, 0, 0, 0, 0);\n      delete legendObj._scrollY;\n    } else {\n      var scrollBarHeight = Math.max(constants.scrollBarMinHeight, legendObj._effHeight * legendObj._effHeight / legendObj._height);\n      var scrollBarYMax = legendObj._effHeight - scrollBarHeight - 2 * constants.scrollBarMargin;\n      var scrollBoxYMax = legendObj._height - legendObj._effHeight;\n      var scrollRatio = scrollBarYMax / scrollBoxYMax;\n      var scrollBoxY = Math.min(legendObj._scrollY || 0, scrollBoxYMax);\n\n      // increase the background and clip-path width\n      // by the scrollbar width and margin\n      bg.attr({\n        width: legendObj._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendObj._effHeight - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      clipPath.select('rect').attr({\n        width: legendObj._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendObj._effHeight - 2 * bw,\n        x: bw,\n        y: bw + scrollBoxY\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n      // scroll legend by mousewheel or touchpad swipe up/down\n      legend.on('wheel', function () {\n        scrollBoxY = Lib.constrain(legendObj._scrollY + d3.event.deltaY / scrollBarYMax * scrollBoxYMax, 0, scrollBoxYMax);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        if (scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n          d3.event.preventDefault();\n        }\n      });\n      var eventY0, eventY1, scrollBoxY0;\n      var getScrollBarDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY1 - eventY0) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      };\n      var getNaturalDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY0 - eventY1) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      };\n\n      // scroll legend by dragging scrollBAR\n      var scrollBarDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n        } else {\n          eventY0 = e.clientY;\n        }\n        scrollBoxY0 = scrollBoxY;\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.buttons === 2 || e.ctrlKey) return;\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n        } else {\n          eventY1 = e.clientY;\n        }\n        scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n      });\n      scrollBar.call(scrollBarDrag);\n\n      // scroll legend by touch-dragging scrollBOX\n      var scrollBoxTouchDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n          scrollBoxY0 = scrollBoxY;\n        }\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n          scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n          scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        }\n      });\n      scrollBox.call(scrollBoxTouchDrag);\n    }\n    function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n      legendObj._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n      Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n      Drawing.setRect(scrollBar, legendObj._width, constants.scrollBarMargin + scrollBoxY * scrollRatio, constants.scrollBarWidth, scrollBarHeight);\n      clipPath.select('rect').attr('y', bw + scrollBoxY);\n    }\n    if (gd._context.edits.legendPosition) {\n      var xf, yf, x0, y0;\n      legend.classed('cursor-move', true);\n      dragElement.init({\n        element: legend.node(),\n        gd: gd,\n        prepFn: function () {\n          var transform = Drawing.getTranslate(legend);\n          x0 = transform.x;\n          y0 = transform.y;\n        },\n        moveFn: function (dx, dy) {\n          var newX = x0 + dx;\n          var newY = y0 + dy;\n          Drawing.setTranslate(legend, newX, newY);\n          xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, legendObj.xanchor);\n          yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, legendObj.yanchor);\n        },\n        doneFn: function () {\n          if (xf !== undefined && yf !== undefined) {\n            Registry.call('_guiRelayout', gd, {\n              'legend.x': xf,\n              'legend.y': yf\n            });\n          }\n        },\n        clickFn: function (numClicks, e) {\n          var clickedTrace = layer.selectAll('g.traces').filter(function () {\n            var bbox = this.getBoundingClientRect();\n            return e.clientX >= bbox.left && e.clientX <= bbox.right && e.clientY >= bbox.top && e.clientY <= bbox.bottom;\n          });\n          if (clickedTrace.size() > 0) {\n            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n          }\n        }\n      });\n    }\n  }], gd);\n}\nfunction getTraceWidth(d, legendObj, textGap) {\n  var legendItem = d[0];\n  var legendWidth = legendItem.width;\n  var mode = legendObj.entrywidthmode;\n  var traceLegendWidth = legendItem.trace.legendwidth || legendObj.entrywidth;\n  if (mode === 'fraction') return legendObj._maxWidth * traceLegendWidth;\n  return textGap + (traceLegendWidth || legendWidth);\n}\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n  var trace = legendItem.data()[0][0].trace;\n  var evtData = {\n    event: evt,\n    node: legendItem.node(),\n    curveNumber: trace.index,\n    expandedIndex: trace._expandedIndex,\n    data: gd.data,\n    layout: gd.layout,\n    frames: gd._transitionData._frames,\n    config: gd._context,\n    fullData: gd._fullData,\n    fullLayout: gd._fullLayout\n  };\n  if (trace._group) {\n    evtData.group = trace._group;\n  }\n  if (Registry.traceIs(trace, 'pie-like')) {\n    evtData.label = legendItem.datum()[0].label;\n  }\n  var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n  if (clickVal === false) return;\n  if (numClicks === 1) {\n    legend._clickTimeout = setTimeout(function () {\n      if (!gd._fullLayout) return;\n      handleClick(legendItem, gd, numClicks);\n    }, gd._context.doubleClickDelay);\n  } else if (numClicks === 2) {\n    if (legend._clickTimeout) clearTimeout(legend._clickTimeout);\n    gd._legendMouseDownTime = 0;\n    var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n    if (dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n  }\n}\nfunction drawTexts(g, gd, legendObj) {\n  var legendItem = g.data()[0][0];\n  var trace = legendItem.trace;\n  var isPieLike = Registry.traceIs(trace, 'pie-like');\n  var isEditable = !legendObj._inHover && gd._context.edits.legendText && !isPieLike;\n  var maxNameLength = legendObj._maxNameLength;\n  var name, font;\n  if (legendItem.groupTitle) {\n    name = legendItem.groupTitle.text;\n    font = legendItem.groupTitle.font;\n  } else {\n    font = legendObj.font;\n    if (!legendObj.entries) {\n      name = isPieLike ? legendItem.label : trace.name;\n      if (trace._meta) {\n        name = Lib.templateString(name, trace._meta);\n      }\n    } else {\n      name = legendItem.text;\n    }\n  }\n  var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n  textEl.attr('text-anchor', 'start').call(Drawing.font, font).text(isEditable ? ensureLength(name, maxNameLength) : name);\n  var textGap = legendObj.itemwidth + constants.itemGap * 2;\n  svgTextUtils.positionText(textEl, textGap, 0);\n  if (isEditable) {\n    textEl.call(svgTextUtils.makeEditable, {\n      gd: gd,\n      text: name\n    }).call(textLayout, g, gd, legendObj).on('edit', function (newName) {\n      this.text(ensureLength(newName, maxNameLength)).call(textLayout, g, gd, legendObj);\n      var fullInput = legendItem.trace._fullInput || {};\n      var update = {};\n      if (Registry.hasTransform(fullInput, 'groupby')) {\n        var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n        var index = groupbyIndices[groupbyIndices.length - 1];\n        var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n        kcont.set(legendItem.trace._group, newName);\n        update = kcont.constructUpdate();\n      } else {\n        update.name = newName;\n      }\n      return Registry.call('_guiRestyle', gd, update, trace.index);\n    });\n  } else {\n    textLayout(textEl, g, gd, legendObj);\n  }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n  var targetLength = Math.max(4, maxLength);\n  if (str && str.trim().length >= targetLength / 2) return str;\n  str = str || '';\n  for (var i = targetLength - str.length; i > 0; i--) str += ' ';\n  return str;\n}\nfunction setupTraceToggle(g, gd) {\n  var doubleClickDelay = gd._context.doubleClickDelay;\n  var newMouseDownTime;\n  var numClicks = 1;\n  var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function (s) {\n    if (!gd._context.staticPlot) {\n      s.style('cursor', 'pointer').attr('pointer-events', 'all');\n    }\n    s.call(Color.fill, 'rgba(0,0,0,0)');\n  });\n  if (gd._context.staticPlot) return;\n  traceToggle.on('mousedown', function () {\n    newMouseDownTime = new Date().getTime();\n    if (newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n      // in a click train\n      numClicks += 1;\n    } else {\n      // new click train\n      numClicks = 1;\n      gd._legendMouseDownTime = newMouseDownTime;\n    }\n  });\n  traceToggle.on('mouseup', function () {\n    if (gd._dragged || gd._editing) return;\n    var legend = gd._fullLayout.legend;\n    if (new Date().getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n      numClicks = Math.max(numClicks - 1, 1);\n    }\n    clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n  });\n}\nfunction textLayout(s, g, gd, legendObj, aTitle) {\n  if (legendObj._inHover) s.attr('data-notex', true); // do not process MathJax for unified hover\n  svgTextUtils.convertToTspans(s, gd, function () {\n    computeTextDimensions(g, gd, legendObj, aTitle);\n  });\n}\nfunction computeTextDimensions(g, gd, legendObj, aTitle) {\n  var legendItem = g.data()[0][0];\n  if (!legendObj._inHover && legendItem && !legendItem.trace.showlegend) {\n    g.remove();\n    return;\n  }\n  var mathjaxGroup = g.select('g[class*=math-group]');\n  var mathjaxNode = mathjaxGroup.node();\n  if (!legendObj) legendObj = gd._fullLayout.legend;\n  var bw = legendObj.borderwidth;\n  var font;\n  if (aTitle === MAIN_TITLE) {\n    font = legendObj.title.font;\n  } else if (legendItem.groupTitle) {\n    font = legendItem.groupTitle.font;\n  } else {\n    font = legendObj.font;\n  }\n  var lineHeight = font.size * LINE_SPACING;\n  var height, width;\n  if (mathjaxNode) {\n    var mathjaxBB = Drawing.bBox(mathjaxNode);\n    height = mathjaxBB.height;\n    width = mathjaxBB.width;\n    if (aTitle === MAIN_TITLE) {\n      Drawing.setTranslate(mathjaxGroup, bw, bw + height * 0.75);\n    } else {\n      // legend item\n      Drawing.setTranslate(mathjaxGroup, 0, height * 0.25);\n    }\n  } else {\n    var textEl = g.select(aTitle === MAIN_TITLE ? '.legendtitletext' : '.legendtext');\n    var textLines = svgTextUtils.lineCount(textEl);\n    var textNode = textEl.node();\n    height = lineHeight * textLines;\n    width = textNode ? Drawing.bBox(textNode).width : 0;\n\n    // approximation to height offset to center the font\n    // to avoid getBoundingClientRect\n    if (aTitle === MAIN_TITLE) {\n      if (legendObj.title.side === 'left') {\n        // add extra space between legend title and itmes\n        width += constants.itemGap * 2;\n      }\n      svgTextUtils.positionText(textEl, bw + constants.titlePad, bw + lineHeight);\n    } else {\n      // legend item\n      var x = constants.itemGap * 2 + legendObj.itemwidth;\n      if (legendItem.groupTitle) {\n        x = constants.itemGap;\n        width -= legendObj.itemwidth;\n      }\n      svgTextUtils.positionText(textEl, x, -lineHeight * ((textLines - 1) / 2 - 0.3));\n    }\n  }\n  if (aTitle === MAIN_TITLE) {\n    legendObj._titleWidth = width;\n    legendObj._titleHeight = height;\n  } else {\n    // legend item\n    legendItem.lineHeight = lineHeight;\n    legendItem.height = Math.max(height, 16) + 3;\n    legendItem.width = width;\n  }\n}\nfunction getTitleSize(legendObj) {\n  var w = 0;\n  var h = 0;\n  var side = legendObj.title.side;\n  if (side) {\n    if (side.indexOf('left') !== -1) {\n      w = legendObj._titleWidth;\n    }\n    if (side.indexOf('top') !== -1) {\n      h = legendObj._titleHeight;\n    }\n  }\n  return [w, h];\n}\n\n/*\n * Computes in fullLayout.legend:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\nfunction computeLegendDimensions(gd, groups, traces, legendObj) {\n  var fullLayout = gd._fullLayout;\n  if (!legendObj) legendObj = fullLayout.legend;\n  var gs = fullLayout._size;\n  var isVertical = helpers.isVertical(legendObj);\n  var isGrouped = helpers.isGrouped(legendObj);\n  var isFraction = legendObj.entrywidthmode === 'fraction';\n  var bw = legendObj.borderwidth;\n  var bw2 = 2 * bw;\n  var itemGap = constants.itemGap;\n  var textGap = legendObj.itemwidth + itemGap * 2;\n  var endPad = 2 * (bw + itemGap);\n  var yanchor = getYanchor(legendObj);\n  var isBelowPlotArea = legendObj.y < 0 || legendObj.y === 0 && yanchor === 'top';\n  var isAbovePlotArea = legendObj.y > 1 || legendObj.y === 1 && yanchor === 'bottom';\n  var traceGroupGap = legendObj.tracegroupgap;\n  var legendGroupWidths = {};\n\n  // - if below/above plot area, give it the maximum potential margin-push value\n  // - otherwise, extend the height of the plot area\n  legendObj._maxHeight = Math.max(isBelowPlotArea || isAbovePlotArea ? fullLayout.height / 2 : gs.h, 30);\n  var toggleRectWidth = 0;\n  legendObj._width = 0;\n  legendObj._height = 0;\n  var titleSize = getTitleSize(legendObj);\n  if (isVertical) {\n    traces.each(function (d) {\n      var h = d[0].height;\n      Drawing.setTranslate(this, bw + titleSize[0], bw + titleSize[1] + legendObj._height + h / 2 + itemGap);\n      legendObj._height += h;\n      legendObj._width = Math.max(legendObj._width, d[0].width);\n    });\n    toggleRectWidth = textGap + legendObj._width;\n    legendObj._width += itemGap + textGap + bw2;\n    legendObj._height += endPad;\n    if (isGrouped) {\n      groups.each(function (d, i) {\n        Drawing.setTranslate(this, 0, i * legendObj.tracegroupgap);\n      });\n      legendObj._height += (legendObj._lgroupsLength - 1) * legendObj.tracegroupgap;\n    }\n  } else {\n    var xanchor = getXanchor(legendObj);\n    var isLeftOfPlotArea = legendObj.x < 0 || legendObj.x === 0 && xanchor === 'right';\n    var isRightOfPlotArea = legendObj.x > 1 || legendObj.x === 1 && xanchor === 'left';\n    var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n    var hw = fullLayout.width / 2;\n\n    // - if placed within x-margins, extend the width of the plot area\n    // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n    // - otherwise give it the maximum potential margin-push value\n    legendObj._maxWidth = Math.max(isLeftOfPlotArea ? isBeyondPlotAreaY && xanchor === 'left' ? gs.l + gs.w : hw : isRightOfPlotArea ? isBeyondPlotAreaY && xanchor === 'right' ? gs.r + gs.w : hw : gs.w, 2 * textGap);\n    var maxItemWidth = 0;\n    var combinedItemWidth = 0;\n    traces.each(function (d) {\n      var w = getTraceWidth(d, legendObj, textGap);\n      maxItemWidth = Math.max(maxItemWidth, w);\n      combinedItemWidth += w;\n    });\n    toggleRectWidth = null;\n    var maxRowWidth = 0;\n    if (isGrouped) {\n      var maxGroupHeightInRow = 0;\n      var groupOffsetX = 0;\n      var groupOffsetY = 0;\n      groups.each(function () {\n        var maxWidthInGroup = 0;\n        var offsetY = 0;\n        d3.select(this).selectAll('g.traces').each(function (d) {\n          var w = getTraceWidth(d, legendObj, textGap);\n          var h = d[0].height;\n          Drawing.setTranslate(this, titleSize[0], titleSize[1] + bw + itemGap + h / 2 + offsetY);\n          offsetY += h;\n          maxWidthInGroup = Math.max(maxWidthInGroup, w);\n          legendGroupWidths[d[0].trace.legendgroup] = maxWidthInGroup;\n        });\n        var next = maxWidthInGroup + itemGap;\n\n        // horizontal_wrapping\n        if (\n        // not on the first column already\n        groupOffsetX > 0 &&\n        // goes beyound limit\n        next + bw + groupOffsetX > legendObj._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n          groupOffsetX = 0;\n          groupOffsetY += maxGroupHeightInRow + traceGroupGap;\n          maxGroupHeightInRow = offsetY;\n        } else {\n          maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n        }\n        Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n        groupOffsetX += next;\n      });\n      legendObj._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n      legendObj._height = groupOffsetY + maxGroupHeightInRow + endPad;\n    } else {\n      var nTraces = traces.size();\n      var oneRowLegend = combinedItemWidth + bw2 + (nTraces - 1) * itemGap < legendObj._maxWidth;\n      var maxItemHeightInRow = 0;\n      var offsetX = 0;\n      var offsetY = 0;\n      var rowWidth = 0;\n      traces.each(function (d) {\n        var h = d[0].height;\n        var w = getTraceWidth(d, legendObj, textGap, isGrouped);\n        var next = oneRowLegend ? w : maxItemWidth;\n        if (!isFraction) {\n          next += itemGap;\n        }\n        if (next + bw + offsetX - itemGap >= legendObj._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, rowWidth);\n          offsetX = 0;\n          offsetY += maxItemHeightInRow;\n          legendObj._height += maxItemHeightInRow;\n          maxItemHeightInRow = 0;\n        }\n        Drawing.setTranslate(this, titleSize[0] + bw + offsetX, titleSize[1] + bw + offsetY + h / 2 + itemGap);\n        rowWidth = offsetX + w + itemGap;\n        offsetX += next;\n        maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n      });\n      if (oneRowLegend) {\n        legendObj._width = offsetX + bw2;\n        legendObj._height = maxItemHeightInRow + endPad;\n      } else {\n        legendObj._width = Math.max(maxRowWidth, rowWidth) + bw2;\n        legendObj._height += maxItemHeightInRow + endPad;\n      }\n    }\n  }\n  legendObj._width = Math.ceil(Math.max(legendObj._width + titleSize[0], legendObj._titleWidth + 2 * (bw + constants.titlePad)));\n  legendObj._height = Math.ceil(Math.max(legendObj._height + titleSize[1], legendObj._titleHeight + 2 * (bw + constants.itemGap)));\n  legendObj._effHeight = Math.min(legendObj._height, legendObj._maxHeight);\n  var edits = gd._context.edits;\n  var isEditable = edits.legendText || edits.legendPosition;\n  traces.each(function (d) {\n    var traceToggle = d3.select(this).select('.legendtoggle');\n    var h = d[0].height;\n    var legendgroup = d[0].trace.legendgroup;\n    var traceWidth = getTraceWidth(d, legendObj, textGap);\n    if (isGrouped && legendgroup !== '') {\n      traceWidth = legendGroupWidths[legendgroup];\n    }\n    var w = isEditable ? textGap : toggleRectWidth || traceWidth;\n    if (!isVertical && !isFraction) {\n      w += itemGap / 2;\n    }\n    Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n  });\n}\nfunction expandMargin(gd) {\n  var fullLayout = gd._fullLayout;\n  var legendObj = fullLayout.legend;\n  var xanchor = getXanchor(legendObj);\n  var yanchor = getYanchor(legendObj);\n  return Plots.autoMargin(gd, 'legend', {\n    x: legendObj.x,\n    y: legendObj.y,\n    l: legendObj._width * FROM_TL[xanchor],\n    r: legendObj._width * FROM_BR[xanchor],\n    b: legendObj._effHeight * FROM_BR[yanchor],\n    t: legendObj._effHeight * FROM_TL[yanchor]\n  });\n}\nfunction getXanchor(legendObj) {\n  return Lib.isRightAnchor(legendObj) ? 'right' : Lib.isCenterAnchor(legendObj) ? 'center' : 'left';\n}\nfunction getYanchor(legendObj) {\n  return Lib.isBottomAnchor(legendObj) ? 'bottom' : Lib.isMiddleAnchor(legendObj) ? 'middle' : 'top';\n}","map":{"version":3,"names":["d3","require","Lib","Plots","Registry","Events","dragElement","Drawing","Color","svgTextUtils","handleClick","constants","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","getLegendData","style","helpers","MAIN_TITLE","module","exports","draw","gd","opts","_fullLayout","legend","_draw","legendObj","fullLayout","clipId","_uid","layer","inHover","_inHover","_infolayer","_legendMouseDownTime","legendData","calcdata","showlegend","entries","hiddenSlices","hiddenlabels","length","selectAll","remove","_topdefs","select","autoMargin","ensureSingle","s","attr","clipPath","ensureSingleById","append","bg","call","stroke","bordercolor","fill","bgcolor","borderwidth","scrollBox","title","_titleWidth","_titleHeight","text","titleEl","font","textLayout","scrollBar","scrollBarEnterAttrs","scrollBarColor","groups","data","enter","exit","traces","identity","d","trace","traceIs","indexOf","label","visible","each","drawTexts","setupTraceToggle","syncOrAsync","previousPromises","computeLegendDimensions","gs","_size","bw","expMargin","expandMargin","lx","l","w","x","getXanchor","_width","ly","t","h","y","getYanchor","_effHeight","margin","autoexpand","lx0","ly0","constrain","width","height","log","setTranslate","on","_height","_maxHeight","_context","staticPlot","setClipUrl","setRect","_scrollY","scrollBarHeight","Math","max","scrollBarMinHeight","scrollBarYMax","scrollBarMargin","scrollBoxYMax","scrollRatio","scrollBoxY","min","scrollBarWidth","scrollHandler","event","deltaY","preventDefault","eventY0","eventY1","scrollBoxY0","getScrollBarDragY","getNaturalDragY","scrollBarDrag","behavior","drag","e","sourceEvent","type","changedTouches","clientY","buttons","ctrlKey","scrollBoxTouchDrag","edits","legendPosition","xf","yf","x0","y0","classed","init","element","node","prepFn","transform","getTranslate","moveFn","dx","dy","newX","newY","align","xanchor","yanchor","doneFn","undefined","clickFn","numClicks","clickedTrace","filter","bbox","getBoundingClientRect","clientX","left","right","top","bottom","size","clickOrDoubleClick","getTraceWidth","textGap","legendItem","legendWidth","mode","entrywidthmode","traceLegendWidth","legendwidth","entrywidth","_maxWidth","evt","evtData","curveNumber","index","expandedIndex","_expandedIndex","layout","frames","_transitionData","_frames","config","fullData","_fullData","_group","group","datum","clickVal","triggerHandler","_clickTimeout","setTimeout","doubleClickDelay","clearTimeout","dblClickVal","g","isPieLike","isEditable","legendText","maxNameLength","_maxNameLength","name","groupTitle","_meta","templateString","textEl","ensureLength","itemwidth","itemGap","positionText","makeEditable","newName","fullInput","_fullInput","update","hasTransform","groupbyIndices","getTransformIndices","kcont","keyedContainer","set","constructUpdate","str","maxLength","targetLength","trim","i","newMouseDownTime","traceToggle","Date","getTime","_dragged","_editing","aTitle","convertToTspans","computeTextDimensions","mathjaxGroup","mathjaxNode","lineHeight","mathjaxBB","bBox","textLines","lineCount","textNode","side","titlePad","getTitleSize","isVertical","isGrouped","isFraction","bw2","endPad","isBelowPlotArea","isAbovePlotArea","traceGroupGap","tracegroupgap","legendGroupWidths","toggleRectWidth","titleSize","_lgroupsLength","isLeftOfPlotArea","isRightOfPlotArea","isBeyondPlotAreaY","hw","r","maxItemWidth","combinedItemWidth","maxRowWidth","maxGroupHeightInRow","groupOffsetX","groupOffsetY","maxWidthInGroup","offsetY","legendgroup","next","nTraces","oneRowLegend","maxItemHeightInRow","offsetX","rowWidth","ceil","traceWidth","b","isRightAnchor","isCenterAnchor","isBottomAnchor","isMiddleAnchor"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/components/legend/draw.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\n\nvar MAIN_TITLE = 1;\n\nmodule.exports = function draw(gd, opts) {\n    if(!opts) opts = gd._fullLayout.legend || {};\n    return _draw(gd, opts);\n};\n\nfunction _draw(gd, legendObj) {\n    var fullLayout = gd._fullLayout;\n    var clipId = 'legend' + fullLayout._uid;\n    var layer;\n\n    var inHover = legendObj._inHover;\n    if(inHover) {\n        layer = legendObj.layer;\n        clipId += '-hover';\n    } else {\n        layer = fullLayout._infolayer;\n    }\n\n    if(!layer) return;\n\n    if(!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n\n    var legendData;\n    if(!inHover) {\n        if(!gd.calcdata) return;\n        legendData = fullLayout.showlegend && getLegendData(gd.calcdata, legendObj);\n    } else {\n        if(!legendObj.entries) return;\n        legendData = getLegendData(legendObj.entries, legendObj);\n    }\n\n    var hiddenSlices = fullLayout.hiddenlabels || [];\n\n    if(!inHover && (!fullLayout.showlegend || !legendData.length)) {\n        layer.selectAll('.legend').remove();\n        fullLayout._topdefs.select('#' + clipId).remove();\n        return Plots.autoMargin(gd, 'legend');\n    }\n\n    var legend = Lib.ensureSingle(layer, 'g', 'legend', function(s) {\n        if(!inHover) s.attr('pointer-events', 'all');\n    });\n\n    var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function(s) {\n        s.append('rect');\n    });\n\n    var bg = Lib.ensureSingle(legend, 'rect', 'bg', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n    bg.call(Color.stroke, legendObj.bordercolor)\n        .call(Color.fill, legendObj.bgcolor)\n        .style('stroke-width', legendObj.borderwidth + 'px');\n\n    var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n\n    var title = legendObj.title;\n    legendObj._titleWidth = 0;\n    legendObj._titleHeight = 0;\n    if(title.text) {\n        var titleEl = Lib.ensureSingle(scrollBox, 'text', 'legendtitletext');\n        titleEl.attr('text-anchor', 'start')\n            .call(Drawing.font, title.font)\n            .text(title.text);\n\n        textLayout(titleEl, scrollBox, gd, legendObj, MAIN_TITLE); // handle mathjax or multi-line text and compute title height\n    } else {\n        scrollBox.selectAll('.legendtitletext').remove();\n    }\n\n    var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function(s) {\n        s.attr(constants.scrollBarEnterAttrs)\n         .call(Color.fill, constants.scrollBarColor);\n    });\n\n    var groups = scrollBox.selectAll('g.groups').data(legendData);\n    groups.enter().append('g').attr('class', 'groups');\n    groups.exit().remove();\n\n    var traces = groups.selectAll('g.traces').data(Lib.identity);\n    traces.enter().append('g').attr('class', 'traces');\n    traces.exit().remove();\n\n    traces.style('opacity', function(d) {\n        var trace = d[0].trace;\n        if(Registry.traceIs(trace, 'pie-like')) {\n            return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n        } else {\n            return trace.visible === 'legendonly' ? 0.5 : 1;\n        }\n    })\n    .each(function() { d3.select(this).call(drawTexts, gd, legendObj); })\n    .call(style, gd, legendObj)\n    .each(function() { if(!inHover) d3.select(this).call(setupTraceToggle, gd); });\n\n    Lib.syncOrAsync([\n        Plots.previousPromises,\n        function() { return computeLegendDimensions(gd, groups, traces, legendObj); },\n        function() {\n            var gs = fullLayout._size;\n            var bw = legendObj.borderwidth;\n\n            if(!inHover) {\n                var expMargin = expandMargin(gd);\n\n                // IF expandMargin return a Promise (which is truthy),\n                // we're under a doAutoMargin redraw, so we don't have to\n                // draw the remaining pieces below\n                if(expMargin) return;\n\n                var lx = gs.l + gs.w * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n                var ly = gs.t + gs.h * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n\n                if(fullLayout.margin.autoexpand) {\n                    var lx0 = lx;\n                    var ly0 = ly;\n\n                    lx = Lib.constrain(lx, 0, fullLayout.width - legendObj._width);\n                    ly = Lib.constrain(ly, 0, fullLayout.height - legendObj._effHeight);\n\n                    if(lx !== lx0) {\n                        Lib.log('Constrain legend.x to make legend fit inside graph');\n                    }\n                    if(ly !== ly0) {\n                        Lib.log('Constrain legend.y to make legend fit inside graph');\n                    }\n                }\n\n                // Set size and position of all the elements that make up a legend:\n                // legend, background and border, scroll box and scroll bar as well as title\n                Drawing.setTranslate(legend, lx, ly);\n            }\n\n            // to be safe, remove previous listeners\n            scrollBar.on('.drag', null);\n            legend.on('wheel', null);\n\n            if(inHover || legendObj._height <= legendObj._maxHeight || gd._context.staticPlot) {\n                // if scrollbar should not be shown.\n                var height = legendObj._effHeight;\n\n                // if unified hover, let it be its full size\n                if(inHover) height = legendObj._height;\n\n                bg.attr({\n                    width: legendObj._width - bw,\n                    height: height - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                Drawing.setTranslate(scrollBox, 0, 0);\n\n                clipPath.select('rect').attr({\n                    width: legendObj._width - 2 * bw,\n                    height: height - 2 * bw,\n                    x: bw,\n                    y: bw\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                Drawing.setRect(scrollBar, 0, 0, 0, 0);\n                delete legendObj._scrollY;\n            } else {\n                var scrollBarHeight = Math.max(constants.scrollBarMinHeight,\n                    legendObj._effHeight * legendObj._effHeight / legendObj._height);\n                var scrollBarYMax = legendObj._effHeight -\n                    scrollBarHeight -\n                    2 * constants.scrollBarMargin;\n                var scrollBoxYMax = legendObj._height - legendObj._effHeight;\n                var scrollRatio = scrollBarYMax / scrollBoxYMax;\n\n                var scrollBoxY = Math.min(legendObj._scrollY || 0, scrollBoxYMax);\n\n                // increase the background and clip-path width\n                // by the scrollbar width and margin\n                bg.attr({\n                    width: legendObj._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendObj._effHeight - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                clipPath.select('rect').attr({\n                    width: legendObj._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendObj._effHeight - 2 * bw,\n                    x: bw,\n                    y: bw + scrollBoxY\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n                // scroll legend by mousewheel or touchpad swipe up/down\n                legend.on('wheel', function() {\n                    scrollBoxY = Lib.constrain(\n                        legendObj._scrollY +\n                            ((d3.event.deltaY / scrollBarYMax) * scrollBoxYMax),\n                        0, scrollBoxYMax);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    if(scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n                        d3.event.preventDefault();\n                    }\n                });\n\n                var eventY0, eventY1, scrollBoxY0;\n\n                var getScrollBarDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY1 - eventY0) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                var getNaturalDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY0 - eventY1) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                // scroll legend by dragging scrollBAR\n                var scrollBarDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY0 = e.clientY;\n                    }\n                    scrollBoxY0 = scrollBoxY;\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.buttons === 2 || e.ctrlKey) return;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY1 = e.clientY;\n                    }\n                    scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                });\n                scrollBar.call(scrollBarDrag);\n\n                // scroll legend by touch-dragging scrollBOX\n                var scrollBoxTouchDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                        scrollBoxY0 = scrollBoxY;\n                    }\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                        scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n                        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    }\n                });\n                scrollBox.call(scrollBoxTouchDrag);\n            }\n\n            function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n                legendObj._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n                Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n\n                Drawing.setRect(\n                    scrollBar,\n                    legendObj._width,\n                    constants.scrollBarMargin + scrollBoxY * scrollRatio,\n                    constants.scrollBarWidth,\n                    scrollBarHeight\n                );\n                clipPath.select('rect').attr('y', bw + scrollBoxY);\n            }\n\n            if(gd._context.edits.legendPosition) {\n                var xf, yf, x0, y0;\n\n                legend.classed('cursor-move', true);\n\n                dragElement.init({\n                    element: legend.node(),\n                    gd: gd,\n                    prepFn: function() {\n                        var transform = Drawing.getTranslate(legend);\n                        x0 = transform.x;\n                        y0 = transform.y;\n                    },\n                    moveFn: function(dx, dy) {\n                        var newX = x0 + dx;\n                        var newY = y0 + dy;\n\n                        Drawing.setTranslate(legend, newX, newY);\n\n                        xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, legendObj.xanchor);\n                        yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, legendObj.yanchor);\n                    },\n                    doneFn: function() {\n                        if(xf !== undefined && yf !== undefined) {\n                            Registry.call('_guiRelayout', gd, {'legend.x': xf, 'legend.y': yf});\n                        }\n                    },\n                    clickFn: function(numClicks, e) {\n                        var clickedTrace = layer.selectAll('g.traces').filter(function() {\n                            var bbox = this.getBoundingClientRect();\n                            return (\n                                e.clientX >= bbox.left && e.clientX <= bbox.right &&\n                                e.clientY >= bbox.top && e.clientY <= bbox.bottom\n                            );\n                        });\n                        if(clickedTrace.size() > 0) {\n                            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n                        }\n                    }\n                });\n            }\n        }], gd);\n}\n\nfunction getTraceWidth(d, legendObj, textGap) {\n    var legendItem = d[0];\n    var legendWidth = legendItem.width;\n    var mode = legendObj.entrywidthmode;\n\n    var traceLegendWidth = legendItem.trace.legendwidth || legendObj.entrywidth;\n\n    if(mode === 'fraction') return legendObj._maxWidth * traceLegendWidth;\n\n    return textGap + (traceLegendWidth || legendWidth);\n}\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n    var trace = legendItem.data()[0][0].trace;\n    var evtData = {\n        event: evt,\n        node: legendItem.node(),\n        curveNumber: trace.index,\n        expandedIndex: trace._expandedIndex,\n        data: gd.data,\n        layout: gd.layout,\n        frames: gd._transitionData._frames,\n        config: gd._context,\n        fullData: gd._fullData,\n        fullLayout: gd._fullLayout\n    };\n\n    if(trace._group) {\n        evtData.group = trace._group;\n    }\n    if(Registry.traceIs(trace, 'pie-like')) {\n        evtData.label = legendItem.datum()[0].label;\n    }\n\n    var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n    if(clickVal === false) return;\n\n    if(numClicks === 1) {\n        legend._clickTimeout = setTimeout(function() {\n            if(!gd._fullLayout) return;\n            handleClick(legendItem, gd, numClicks);\n        }, gd._context.doubleClickDelay);\n    } else if(numClicks === 2) {\n        if(legend._clickTimeout) clearTimeout(legend._clickTimeout);\n        gd._legendMouseDownTime = 0;\n\n        var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n        if(dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n    }\n}\n\nfunction drawTexts(g, gd, legendObj) {\n    var legendItem = g.data()[0][0];\n    var trace = legendItem.trace;\n    var isPieLike = Registry.traceIs(trace, 'pie-like');\n    var isEditable = !legendObj._inHover && gd._context.edits.legendText && !isPieLike;\n    var maxNameLength = legendObj._maxNameLength;\n\n    var name, font;\n    if(legendItem.groupTitle) {\n        name = legendItem.groupTitle.text;\n        font = legendItem.groupTitle.font;\n    } else {\n        font = legendObj.font;\n        if(!legendObj.entries) {\n            name = isPieLike ? legendItem.label : trace.name;\n            if(trace._meta) {\n                name = Lib.templateString(name, trace._meta);\n            }\n        } else {\n            name = legendItem.text;\n        }\n    }\n\n    var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n\n    textEl.attr('text-anchor', 'start')\n        .call(Drawing.font, font)\n        .text(isEditable ? ensureLength(name, maxNameLength) : name);\n\n    var textGap = legendObj.itemwidth + constants.itemGap * 2;\n    svgTextUtils.positionText(textEl, textGap, 0);\n\n    if(isEditable) {\n        textEl.call(svgTextUtils.makeEditable, {gd: gd, text: name})\n            .call(textLayout, g, gd, legendObj)\n            .on('edit', function(newName) {\n                this.text(ensureLength(newName, maxNameLength))\n                    .call(textLayout, g, gd, legendObj);\n\n                var fullInput = legendItem.trace._fullInput || {};\n                var update = {};\n\n                if(Registry.hasTransform(fullInput, 'groupby')) {\n                    var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                    var index = groupbyIndices[groupbyIndices.length - 1];\n\n                    var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n\n                    kcont.set(legendItem.trace._group, newName);\n\n                    update = kcont.constructUpdate();\n                } else {\n                    update.name = newName;\n                }\n\n                return Registry.call('_guiRestyle', gd, update, trace.index);\n            });\n    } else {\n        textLayout(textEl, g, gd, legendObj);\n    }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n    var targetLength = Math.max(4, maxLength);\n    if(str && str.trim().length >= targetLength / 2) return str;\n    str = str || '';\n    for(var i = targetLength - str.length; i > 0; i--) str += ' ';\n    return str;\n}\n\nfunction setupTraceToggle(g, gd) {\n    var doubleClickDelay = gd._context.doubleClickDelay;\n    var newMouseDownTime;\n    var numClicks = 1;\n\n    var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function(s) {\n        if(!gd._context.staticPlot) {\n            s.style('cursor', 'pointer').attr('pointer-events', 'all');\n        }\n        s.call(Color.fill, 'rgba(0,0,0,0)');\n    });\n\n    if(gd._context.staticPlot) return;\n\n    traceToggle.on('mousedown', function() {\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n            // in a click train\n            numClicks += 1;\n        } else {\n            // new click train\n            numClicks = 1;\n            gd._legendMouseDownTime = newMouseDownTime;\n        }\n    });\n    traceToggle.on('mouseup', function() {\n        if(gd._dragged || gd._editing) return;\n        var legend = gd._fullLayout.legend;\n\n        if((new Date()).getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n    });\n}\n\nfunction textLayout(s, g, gd, legendObj, aTitle) {\n    if(legendObj._inHover) s.attr('data-notex', true); // do not process MathJax for unified hover\n    svgTextUtils.convertToTspans(s, gd, function() {\n        computeTextDimensions(g, gd, legendObj, aTitle);\n    });\n}\n\nfunction computeTextDimensions(g, gd, legendObj, aTitle) {\n    var legendItem = g.data()[0][0];\n    if(!legendObj._inHover && legendItem && !legendItem.trace.showlegend) {\n        g.remove();\n        return;\n    }\n\n    var mathjaxGroup = g.select('g[class*=math-group]');\n    var mathjaxNode = mathjaxGroup.node();\n    if(!legendObj) legendObj = gd._fullLayout.legend;\n    var bw = legendObj.borderwidth;\n    var font;\n    if(aTitle === MAIN_TITLE) {\n        font = legendObj.title.font;\n    } else if(legendItem.groupTitle) {\n        font = legendItem.groupTitle.font;\n    } else {\n        font = legendObj.font;\n    }\n    var lineHeight = font.size * LINE_SPACING;\n    var height, width;\n\n    if(mathjaxNode) {\n        var mathjaxBB = Drawing.bBox(mathjaxNode);\n\n        height = mathjaxBB.height;\n        width = mathjaxBB.width;\n\n        if(aTitle === MAIN_TITLE) {\n            Drawing.setTranslate(mathjaxGroup, bw, bw + height * 0.75);\n        } else { // legend item\n            Drawing.setTranslate(mathjaxGroup, 0, height * 0.25);\n        }\n    } else {\n        var textEl = g.select(aTitle === MAIN_TITLE ?\n            '.legendtitletext' : '.legendtext'\n        );\n        var textLines = svgTextUtils.lineCount(textEl);\n        var textNode = textEl.node();\n\n        height = lineHeight * textLines;\n        width = textNode ? Drawing.bBox(textNode).width : 0;\n\n        // approximation to height offset to center the font\n        // to avoid getBoundingClientRect\n        if(aTitle === MAIN_TITLE) {\n            if(legendObj.title.side === 'left') {\n                // add extra space between legend title and itmes\n                width += constants.itemGap * 2;\n            }\n\n            svgTextUtils.positionText(textEl,\n                bw + constants.titlePad,\n                bw + lineHeight\n            );\n        } else { // legend item\n            var x = constants.itemGap * 2 + legendObj.itemwidth;\n            if(legendItem.groupTitle) {\n                x = constants.itemGap;\n                width -= legendObj.itemwidth;\n            }\n\n            svgTextUtils.positionText(textEl,\n                x,\n                -lineHeight * ((textLines - 1) / 2 - 0.3)\n            );\n        }\n    }\n\n    if(aTitle === MAIN_TITLE) {\n        legendObj._titleWidth = width;\n        legendObj._titleHeight = height;\n    } else { // legend item\n        legendItem.lineHeight = lineHeight;\n        legendItem.height = Math.max(height, 16) + 3;\n        legendItem.width = width;\n    }\n}\n\nfunction getTitleSize(legendObj) {\n    var w = 0;\n    var h = 0;\n\n    var side = legendObj.title.side;\n    if(side) {\n        if(side.indexOf('left') !== -1) {\n            w = legendObj._titleWidth;\n        }\n        if(side.indexOf('top') !== -1) {\n            h = legendObj._titleHeight;\n        }\n    }\n\n    return [w, h];\n}\n\n/*\n * Computes in fullLayout.legend:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\nfunction computeLegendDimensions(gd, groups, traces, legendObj) {\n    var fullLayout = gd._fullLayout;\n    if(!legendObj) legendObj = fullLayout.legend;\n    var gs = fullLayout._size;\n\n    var isVertical = helpers.isVertical(legendObj);\n    var isGrouped = helpers.isGrouped(legendObj);\n    var isFraction = legendObj.entrywidthmode === 'fraction';\n\n    var bw = legendObj.borderwidth;\n    var bw2 = 2 * bw;\n    var itemGap = constants.itemGap;\n    var textGap = legendObj.itemwidth + itemGap * 2;\n    var endPad = 2 * (bw + itemGap);\n\n    var yanchor = getYanchor(legendObj);\n    var isBelowPlotArea = legendObj.y < 0 || (legendObj.y === 0 && yanchor === 'top');\n    var isAbovePlotArea = legendObj.y > 1 || (legendObj.y === 1 && yanchor === 'bottom');\n\n    var traceGroupGap = legendObj.tracegroupgap;\n    var legendGroupWidths = {};\n\n    // - if below/above plot area, give it the maximum potential margin-push value\n    // - otherwise, extend the height of the plot area\n    legendObj._maxHeight = Math.max(\n        (isBelowPlotArea || isAbovePlotArea) ? fullLayout.height / 2 : gs.h,\n        30\n    );\n\n    var toggleRectWidth = 0;\n    legendObj._width = 0;\n    legendObj._height = 0;\n    var titleSize = getTitleSize(legendObj);\n\n    if(isVertical) {\n        traces.each(function(d) {\n            var h = d[0].height;\n            Drawing.setTranslate(this,\n                bw + titleSize[0],\n                bw + titleSize[1] + legendObj._height + h / 2 + itemGap\n            );\n            legendObj._height += h;\n            legendObj._width = Math.max(legendObj._width, d[0].width);\n        });\n\n        toggleRectWidth = textGap + legendObj._width;\n        legendObj._width += itemGap + textGap + bw2;\n        legendObj._height += endPad;\n\n        if(isGrouped) {\n            groups.each(function(d, i) {\n                Drawing.setTranslate(this, 0, i * legendObj.tracegroupgap);\n            });\n            legendObj._height += (legendObj._lgroupsLength - 1) * legendObj.tracegroupgap;\n        }\n    } else {\n        var xanchor = getXanchor(legendObj);\n        var isLeftOfPlotArea = legendObj.x < 0 || (legendObj.x === 0 && xanchor === 'right');\n        var isRightOfPlotArea = legendObj.x > 1 || (legendObj.x === 1 && xanchor === 'left');\n        var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n        var hw = fullLayout.width / 2;\n\n        // - if placed within x-margins, extend the width of the plot area\n        // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n        // - otherwise give it the maximum potential margin-push value\n        legendObj._maxWidth = Math.max(\n            isLeftOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'left') ? gs.l + gs.w : hw) :\n            isRightOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'right') ? gs.r + gs.w : hw) :\n            gs.w,\n        2 * textGap);\n        var maxItemWidth = 0;\n        var combinedItemWidth = 0;\n        traces.each(function(d) {\n            var w = getTraceWidth(d, legendObj, textGap);\n            maxItemWidth = Math.max(maxItemWidth, w);\n            combinedItemWidth += w;\n        });\n\n        toggleRectWidth = null;\n        var maxRowWidth = 0;\n\n        if(isGrouped) {\n            var maxGroupHeightInRow = 0;\n            var groupOffsetX = 0;\n            var groupOffsetY = 0;\n            groups.each(function() {\n                var maxWidthInGroup = 0;\n                var offsetY = 0;\n                d3.select(this).selectAll('g.traces').each(function(d) {\n                    var w = getTraceWidth(d, legendObj, textGap);\n                    var h = d[0].height;\n\n                    Drawing.setTranslate(this,\n                        titleSize[0],\n                        titleSize[1] + bw + itemGap + h / 2 + offsetY\n                    );\n                    offsetY += h;\n                    maxWidthInGroup = Math.max(maxWidthInGroup, w);\n                    legendGroupWidths[d[0].trace.legendgroup] = maxWidthInGroup;\n                });\n\n                var next = maxWidthInGroup + itemGap;\n\n                // horizontal_wrapping\n                if(\n                    // not on the first column already\n                    groupOffsetX > 0 &&\n\n                    // goes beyound limit\n                    next + bw + groupOffsetX > legendObj._maxWidth\n                ) {\n                    maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n                    groupOffsetX = 0;\n                    groupOffsetY += maxGroupHeightInRow + traceGroupGap;\n                    maxGroupHeightInRow = offsetY;\n                } else {\n                    maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n                }\n\n                Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n\n                groupOffsetX += next;\n            });\n\n            legendObj._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n            legendObj._height = groupOffsetY + maxGroupHeightInRow + endPad;\n        } else {\n            var nTraces = traces.size();\n            var oneRowLegend = (combinedItemWidth + bw2 + (nTraces - 1) * itemGap) < legendObj._maxWidth;\n\n            var maxItemHeightInRow = 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var rowWidth = 0;\n            traces.each(function(d) {\n                var h = d[0].height;\n                var w = getTraceWidth(d, legendObj, textGap, isGrouped);\n                var next = (oneRowLegend ? w : maxItemWidth);\n\n                if(!isFraction) {\n                    next += itemGap;\n                }\n\n                if((next + bw + offsetX - itemGap) >= legendObj._maxWidth) {\n                    maxRowWidth = Math.max(maxRowWidth, rowWidth);\n                    offsetX = 0;\n                    offsetY += maxItemHeightInRow;\n                    legendObj._height += maxItemHeightInRow;\n                    maxItemHeightInRow = 0;\n                }\n\n                Drawing.setTranslate(this,\n                    titleSize[0] + bw + offsetX,\n                    titleSize[1] + bw + offsetY + h / 2 + itemGap\n                );\n\n                rowWidth = offsetX + w + itemGap;\n                offsetX += next;\n                maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n            });\n\n            if(oneRowLegend) {\n                legendObj._width = offsetX + bw2;\n                legendObj._height = maxItemHeightInRow + endPad;\n            } else {\n                legendObj._width = Math.max(maxRowWidth, rowWidth) + bw2;\n                legendObj._height += maxItemHeightInRow + endPad;\n            }\n        }\n    }\n\n    legendObj._width = Math.ceil(\n        Math.max(\n            legendObj._width + titleSize[0],\n            legendObj._titleWidth + 2 * (bw + constants.titlePad)\n        )\n    );\n\n    legendObj._height = Math.ceil(\n        Math.max(\n            legendObj._height + titleSize[1],\n            legendObj._titleHeight + 2 * (bw + constants.itemGap)\n        )\n    );\n\n    legendObj._effHeight = Math.min(legendObj._height, legendObj._maxHeight);\n\n    var edits = gd._context.edits;\n    var isEditable = edits.legendText || edits.legendPosition;\n    traces.each(function(d) {\n        var traceToggle = d3.select(this).select('.legendtoggle');\n        var h = d[0].height;\n        var legendgroup = d[0].trace.legendgroup;\n        var traceWidth = getTraceWidth(d, legendObj, textGap);\n        if(isGrouped && legendgroup !== '') {\n            traceWidth = legendGroupWidths[legendgroup];\n        }\n        var w = isEditable ? textGap : (toggleRectWidth || traceWidth);\n        if(!isVertical && !isFraction) {\n            w += itemGap / 2;\n        }\n        Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n    });\n}\n\nfunction expandMargin(gd) {\n    var fullLayout = gd._fullLayout;\n    var legendObj = fullLayout.legend;\n    var xanchor = getXanchor(legendObj);\n    var yanchor = getYanchor(legendObj);\n\n    return Plots.autoMargin(gd, 'legend', {\n        x: legendObj.x,\n        y: legendObj.y,\n        l: legendObj._width * (FROM_TL[xanchor]),\n        r: legendObj._width * (FROM_BR[xanchor]),\n        b: legendObj._effHeight * (FROM_BR[yanchor]),\n        t: legendObj._effHeight * (FROM_TL[yanchor])\n    });\n}\n\nfunction getXanchor(legendObj) {\n    return Lib.isRightAnchor(legendObj) ? 'right' :\n        Lib.isCenterAnchor(legendObj) ? 'center' :\n        'left';\n}\n\nfunction getYanchor(legendObj) {\n    return Lib.isBottomAnchor(legendObj) ? 'bottom' :\n        Lib.isMiddleAnchor(legendObj) ? 'middle' :\n        'top';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}