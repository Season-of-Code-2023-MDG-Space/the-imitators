{"ast":null,"code":"'use strict';\n\nvar createMesh = require('../../../stackgl_modules').gl_mesh3d;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\nvar findNearestOnAxis = function (w, arr) {\n  for (var q = arr.length - 1; q > 0; q--) {\n    var min = Math.min(arr[q], arr[q - 1]);\n    var max = Math.max(arr[q], arr[q - 1]);\n    if (max > min && min < w && w <= max) {\n      return {\n        id: q,\n        distRatio: (max - w) / (max - min)\n      };\n    }\n  }\n  return {\n    id: 0,\n    distRatio: 0\n  };\n};\nfunction IsosurfaceTrace(scene, mesh, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.mesh = mesh;\n  this.name = '';\n  this.data = null;\n  this.showContour = false;\n}\nvar proto = IsosurfaceTrace.prototype;\nproto.handlePick = function (selection) {\n  if (selection.object === this.mesh) {\n    var rawId = selection.data.index;\n    var x = this.data._meshX[rawId];\n    var y = this.data._meshY[rawId];\n    var z = this.data._meshZ[rawId];\n    var height = this.data._Ys.length;\n    var depth = this.data._Zs.length;\n    var i = findNearestOnAxis(x, this.data._Xs).id;\n    var j = findNearestOnAxis(y, this.data._Ys).id;\n    var k = findNearestOnAxis(z, this.data._Zs).id;\n    var selectIndex = selection.index = k + depth * j + depth * height * i;\n    selection.traceCoordinate = [this.data._meshX[selectIndex], this.data._meshY[selectIndex], this.data._meshZ[selectIndex], this.data._value[selectIndex]];\n    var text = this.data.hovertext || this.data.text;\n    if (Array.isArray(text) && text[selectIndex] !== undefined) {\n      selection.textLabel = text[selectIndex];\n    } else if (text) {\n      selection.textLabel = text;\n    }\n    return true;\n  }\n};\nproto.update = function (data) {\n  var scene = this.scene;\n  var layout = scene.fullSceneLayout;\n  this.data = generateIsoMeshes(data);\n\n  // Unpack position data\n  function toDataCoords(axis, coord, scale, calendar) {\n    return coord.map(function (x) {\n      return axis.d2l(x, 0, calendar) * scale;\n    });\n  }\n  var positions = zip3(toDataCoords(layout.xaxis, data._meshX, scene.dataScale[0], data.xcalendar), toDataCoords(layout.yaxis, data._meshY, scene.dataScale[1], data.ycalendar), toDataCoords(layout.zaxis, data._meshZ, scene.dataScale[2], data.zcalendar));\n  var cells = zip3(data._meshI, data._meshJ, data._meshK);\n  var config = {\n    positions: positions,\n    cells: cells,\n    lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n    ambient: data.lighting.ambient,\n    diffuse: data.lighting.diffuse,\n    specular: data.lighting.specular,\n    roughness: data.lighting.roughness,\n    fresnel: data.lighting.fresnel,\n    vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n    faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n    opacity: data.opacity,\n    contourEnable: data.contour.show,\n    contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n    contourWidth: data.contour.width,\n    useFacetNormals: data.flatshading\n  };\n  var cOpts = extractOpts(data);\n  config.vertexIntensity = data._meshIntensity;\n  config.vertexIntensityBounds = [cOpts.min, cOpts.max];\n  config.colormap = parseColorScale(data);\n\n  // Update mesh\n  this.mesh.update(config);\n};\nproto.dispose = function () {\n  this.scene.glplot.remove(this.mesh);\n  this.mesh.dispose();\n};\nvar GRID_TYPES = ['xyz', 'xzy', 'yxz', 'yzx', 'zxy', 'zyx'];\nfunction generateIsoMeshes(data) {\n  data._meshI = [];\n  data._meshJ = [];\n  data._meshK = [];\n  var showSurface = data.surface.show;\n  var showSpaceframe = data.spaceframe.show;\n  var surfaceFill = data.surface.fill;\n  var spaceframeFill = data.spaceframe.fill;\n  var drawingSurface = false;\n  var drawingSpaceframe = false;\n  var numFaces = 0;\n  var numVertices;\n  var beginVertextLength;\n  var Xs = data._Xs;\n  var Ys = data._Ys;\n  var Zs = data._Zs;\n  var width = Xs.length;\n  var height = Ys.length;\n  var depth = Zs.length;\n  var filled = GRID_TYPES.indexOf(data._gridFill.replace(/-/g, '').replace(/\\+/g, ''));\n  var getIndex = function (i, j, k) {\n    switch (filled) {\n      case 5:\n        // 'zyx'\n        return k + depth * j + depth * height * i;\n      case 4:\n        // 'zxy'\n        return k + depth * i + depth * width * j;\n      case 3:\n        // 'yzx'\n        return j + height * k + height * depth * i;\n      case 2:\n        // 'yxz'\n        return j + height * i + height * width * k;\n      case 1:\n        // 'xzy'\n        return i + width * k + width * depth * j;\n      default:\n        // case 0: // 'xyz'\n        return i + width * j + width * height * k;\n    }\n  };\n  var minValues = data._minValues;\n  var maxValues = data._maxValues;\n  var vMin = data._vMin;\n  var vMax = data._vMax;\n  var allXs;\n  var allYs;\n  var allZs;\n  var allVs;\n  function findVertexId(x, y, z) {\n    // could be used to find the vertex id of previously generated vertex within the group\n\n    var len = allVs.length;\n    for (var f = beginVertextLength; f < len; f++) {\n      if (x === allXs[f] && y === allYs[f] && z === allZs[f]) {\n        return f;\n      }\n    }\n    return -1;\n  }\n  function beginGroup() {\n    beginVertextLength = numVertices;\n  }\n  function emptyVertices() {\n    allXs = [];\n    allYs = [];\n    allZs = [];\n    allVs = [];\n    numVertices = 0;\n    beginGroup();\n  }\n  function addVertex(x, y, z, v) {\n    allXs.push(x);\n    allYs.push(y);\n    allZs.push(z);\n    allVs.push(v);\n    numVertices++;\n    return numVertices - 1;\n  }\n  function addFace(a, b, c) {\n    data._meshI.push(a);\n    data._meshJ.push(b);\n    data._meshK.push(c);\n    numFaces++;\n    return numFaces - 1;\n  }\n  function getCenter(A, B, C) {\n    var M = [];\n    for (var i = 0; i < A.length; i++) {\n      M[i] = (A[i] + B[i] + C[i]) / 3.0;\n    }\n    return M;\n  }\n  function getBetween(A, B, r) {\n    var M = [];\n    for (var i = 0; i < A.length; i++) {\n      M[i] = A[i] * (1 - r) + r * B[i];\n    }\n    return M;\n  }\n  var activeFill;\n  function setFill(fill) {\n    activeFill = fill;\n  }\n  function createOpenTri(xyzv, abc) {\n    var A = xyzv[0];\n    var B = xyzv[1];\n    var C = xyzv[2];\n    var G = getCenter(A, B, C);\n    var r = Math.sqrt(1 - activeFill);\n    var p1 = getBetween(G, A, r);\n    var p2 = getBetween(G, B, r);\n    var p3 = getBetween(G, C, r);\n    var a = abc[0];\n    var b = abc[1];\n    var c = abc[2];\n    return {\n      xyzv: [[A, B, p2], [p2, p1, A], [B, C, p3], [p3, p2, B], [C, A, p1], [p1, p3, C]],\n      abc: [[a, b, -1], [-1, -1, a], [b, c, -1], [-1, -1, b], [c, a, -1], [-1, -1, c]]\n    };\n  }\n  function styleIncludes(style, char) {\n    if (style === 'all' || style === null) return true;\n    return style.indexOf(char) > -1;\n  }\n  function mapValue(style, value) {\n    if (style === null) return value;\n    return style;\n  }\n  function drawTri(style, xyzv, abc) {\n    beginGroup();\n    var allXYZVs = [xyzv];\n    var allABCs = [abc];\n    if (activeFill >= 1) {\n      allXYZVs = [xyzv];\n      allABCs = [abc];\n    } else if (activeFill > 0) {\n      var openTri = createOpenTri(xyzv, abc);\n      allXYZVs = openTri.xyzv;\n      allABCs = openTri.abc;\n    }\n    for (var f = 0; f < allXYZVs.length; f++) {\n      xyzv = allXYZVs[f];\n      abc = allABCs[f];\n      var pnts = [];\n      for (var i = 0; i < 3; i++) {\n        var x = xyzv[i][0];\n        var y = xyzv[i][1];\n        var z = xyzv[i][2];\n        var v = xyzv[i][3];\n        var id = abc[i] > -1 ? abc[i] : findVertexId(x, y, z);\n        if (id > -1) {\n          pnts[i] = id;\n        } else {\n          pnts[i] = addVertex(x, y, z, mapValue(style, v));\n        }\n      }\n      addFace(pnts[0], pnts[1], pnts[2]);\n    }\n  }\n  function drawQuad(style, xyzv, abcd) {\n    var makeTri = function (i, j, k) {\n      drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n    };\n    makeTri(0, 1, 2);\n    makeTri(2, 3, 0);\n  }\n  function drawTetra(style, xyzv, abcd) {\n    var makeTri = function (i, j, k) {\n      drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n    };\n    makeTri(0, 1, 2);\n    makeTri(3, 0, 1);\n    makeTri(2, 3, 0);\n    makeTri(1, 2, 3);\n  }\n  function calcIntersection(pointOut, pointIn, min, max) {\n    var value = pointOut[3];\n    if (value < min) value = min;\n    if (value > max) value = max;\n    var ratio = (pointOut[3] - value) / (pointOut[3] - pointIn[3] + 0.000000001); // we had to add this error to force solve the tiny caps\n\n    var result = [];\n    for (var s = 0; s < 4; s++) {\n      result[s] = (1 - ratio) * pointOut[s] + ratio * pointIn[s];\n    }\n    return result;\n  }\n  function inRange(value, min, max) {\n    return value >= min && value <= max;\n  }\n  function almostInFinalRange(value) {\n    var vErr = 0.001 * (vMax - vMin);\n    return value >= vMin - vErr && value <= vMax + vErr;\n  }\n  function getXYZV(indecies) {\n    var xyzv = [];\n    for (var q = 0; q < 4; q++) {\n      var index = indecies[q];\n      xyzv.push([data._x[index], data._y[index], data._z[index], data._value[index]]);\n    }\n    return xyzv;\n  }\n  var MAX_PASS = 3;\n  function tryCreateTri(style, xyzv, abc, min, max, nPass) {\n    if (!nPass) nPass = 1;\n    abc = [-1, -1, -1]; // Note: for the moment we override indices\n    // to run faster! But it is possible to comment this line\n    // to reduce the number of vertices.\n\n    var result = false;\n    var ok = [inRange(xyzv[0][3], min, max), inRange(xyzv[1][3], min, max), inRange(xyzv[2][3], min, max)];\n    if (!ok[0] && !ok[1] && !ok[2]) {\n      return false;\n    }\n    var tryDrawTri = function (style, xyzv, abc) {\n      if (\n      // we check here if the points are in `real` iso-min/max range\n      almostInFinalRange(xyzv[0][3]) && almostInFinalRange(xyzv[1][3]) && almostInFinalRange(xyzv[2][3])) {\n        drawTri(style, xyzv, abc);\n        return true;\n      } else if (nPass < MAX_PASS) {\n        return tryCreateTri(style, xyzv, abc, vMin, vMax, ++nPass); // i.e. second pass using actual vMin vMax bounds\n      }\n\n      return false;\n    };\n    if (ok[0] && ok[1] && ok[2]) {\n      return tryDrawTri(style, xyzv, abc) || result;\n    }\n    var interpolated = false;\n    [[0, 1, 2], [2, 0, 1], [1, 2, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && !ok[e[2]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var p1 = calcIntersection(C, A, min, max);\n        var p2 = calcIntersection(C, B, min, max);\n        result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\n        result = tryDrawTri(style, [A, B, p2], [abc[e[0]], abc[e[1]], -1]) || result;\n        interpolated = true;\n      }\n    });\n    if (interpolated) return result;\n    [[0, 1, 2], [1, 2, 0], [2, 0, 1]].forEach(function (e) {\n      if (ok[e[0]] && !ok[e[1]] && !ok[e[2]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var p1 = calcIntersection(B, A, min, max);\n        var p2 = calcIntersection(C, A, min, max);\n        result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\n        interpolated = true;\n      }\n    });\n    return result;\n  }\n  function tryCreateTetra(style, abcd, min, max) {\n    var result = false;\n    var xyzv = getXYZV(abcd);\n    var ok = [inRange(xyzv[0][3], min, max), inRange(xyzv[1][3], min, max), inRange(xyzv[2][3], min, max), inRange(xyzv[3][3], min, max)];\n    if (!ok[0] && !ok[1] && !ok[2] && !ok[3]) {\n      return result;\n    }\n    if (ok[0] && ok[1] && ok[2] && ok[3]) {\n      if (drawingSpaceframe) {\n        result = drawTetra(style, xyzv, abcd) || result;\n      }\n      return result;\n    }\n    var interpolated = false;\n    [[0, 1, 2, 3], [3, 0, 1, 2], [2, 3, 0, 1], [1, 2, 3, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        if (drawingSpaceframe) {\n          result = drawTri(style, [A, B, C], [abcd[e[0]], abcd[e[1]], abcd[e[2]]]) || result;\n        } else {\n          var p1 = calcIntersection(D, A, min, max);\n          var p2 = calcIntersection(D, B, min, max);\n          var p3 = calcIntersection(D, C, min, max);\n          result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\n        }\n        interpolated = true;\n      }\n    });\n    if (interpolated) return result;\n    [[0, 1, 2, 3], [1, 2, 3, 0], [2, 3, 0, 1], [3, 0, 1, 2], [0, 2, 3, 1], [1, 3, 2, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        var p1 = calcIntersection(C, A, min, max);\n        var p2 = calcIntersection(C, B, min, max);\n        var p3 = calcIntersection(D, B, min, max);\n        var p4 = calcIntersection(D, A, min, max);\n        if (drawingSpaceframe) {\n          result = drawTri(style, [A, p4, p1], [abcd[e[0]], -1, -1]) || result;\n          result = drawTri(style, [B, p2, p3], [abcd[e[1]], -1, -1]) || result;\n        } else {\n          result = drawQuad(null, [p1, p2, p3, p4], [-1, -1, -1, -1]) || result;\n        }\n        interpolated = true;\n      }\n    });\n    if (interpolated) return result;\n    [[0, 1, 2, 3], [1, 2, 3, 0], [2, 3, 0, 1], [3, 0, 1, 2]].forEach(function (e) {\n      if (ok[e[0]] && !ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        var p1 = calcIntersection(B, A, min, max);\n        var p2 = calcIntersection(C, A, min, max);\n        var p3 = calcIntersection(D, A, min, max);\n        if (drawingSpaceframe) {\n          result = drawTri(style, [A, p1, p2], [abcd[e[0]], -1, -1]) || result;\n          result = drawTri(style, [A, p2, p3], [abcd[e[0]], -1, -1]) || result;\n          result = drawTri(style, [A, p3, p1], [abcd[e[0]], -1, -1]) || result;\n        } else {\n          result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\n        }\n        interpolated = true;\n      }\n    });\n    return result;\n  }\n  function addCube(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max) {\n    var result = false;\n    if (drawingSurface) {\n      if (styleIncludes(style, 'A')) {\n        result = tryCreateTetra(null, [p000, p001, p010, p100], min, max) || result;\n      }\n      if (styleIncludes(style, 'B')) {\n        result = tryCreateTetra(null, [p001, p010, p011, p111], min, max) || result;\n      }\n      if (styleIncludes(style, 'C')) {\n        result = tryCreateTetra(null, [p001, p100, p101, p111], min, max) || result;\n      }\n      if (styleIncludes(style, 'D')) {\n        result = tryCreateTetra(null, [p010, p100, p110, p111], min, max) || result;\n      }\n      if (styleIncludes(style, 'E')) {\n        result = tryCreateTetra(null, [p001, p010, p100, p111], min, max) || result;\n      }\n    }\n    if (drawingSpaceframe) {\n      result = tryCreateTetra(style, [p001, p010, p100, p111], min, max) || result;\n    }\n    return result;\n  }\n  function addRect(style, a, b, c, d, min, max, previousResult) {\n    return [previousResult[0] === true ? true : tryCreateTri(style, getXYZV([a, b, c]), [a, b, c], min, max), previousResult[1] === true ? true : tryCreateTri(style, getXYZV([c, d, a]), [c, d, a], min, max)];\n  }\n  function begin2dCell(style, p00, p01, p10, p11, min, max, isEven, previousResult) {\n    // used to create caps and/or slices on exact axis points\n    if (isEven) {\n      return addRect(style, p00, p01, p11, p10, min, max, previousResult);\n    } else {\n      return addRect(style, p01, p11, p10, p00, min, max, previousResult);\n    }\n  }\n  function beginSection(style, i, j, k, min, max, distRatios) {\n    // used to create slices between axis points\n\n    var result = false;\n    var A, B, C, D;\n    var makeSection = function () {\n      result = tryCreateTri(style, [A, B, C], [-1, -1, -1], min, max) || result;\n      result = tryCreateTri(style, [C, D, A], [-1, -1, -1], min, max) || result;\n    };\n    var rX = distRatios[0];\n    var rY = distRatios[1];\n    var rZ = distRatios[2];\n    if (rX) {\n      A = getBetween(getXYZV([getIndex(i, j - 0, k - 0)])[0], getXYZV([getIndex(i - 1, j - 0, k - 0)])[0], rX);\n      B = getBetween(getXYZV([getIndex(i, j - 0, k - 1)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rX);\n      C = getBetween(getXYZV([getIndex(i, j - 1, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rX);\n      D = getBetween(getXYZV([getIndex(i, j - 1, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rX);\n      makeSection();\n    }\n    if (rY) {\n      A = getBetween(getXYZV([getIndex(i - 0, j, k - 0)])[0], getXYZV([getIndex(i - 0, j - 1, k - 0)])[0], rY);\n      B = getBetween(getXYZV([getIndex(i - 0, j, k - 1)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rY);\n      C = getBetween(getXYZV([getIndex(i - 1, j, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rY);\n      D = getBetween(getXYZV([getIndex(i - 1, j, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rY);\n      makeSection();\n    }\n    if (rZ) {\n      A = getBetween(getXYZV([getIndex(i - 0, j - 0, k)])[0], getXYZV([getIndex(i - 0, j - 0, k - 1)])[0], rZ);\n      B = getBetween(getXYZV([getIndex(i - 0, j - 1, k)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rZ);\n      C = getBetween(getXYZV([getIndex(i - 1, j - 1, k)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rZ);\n      D = getBetween(getXYZV([getIndex(i - 1, j - 0, k)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rZ);\n      makeSection();\n    }\n    return result;\n  }\n  function begin3dCell(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max, isEven) {\n    // used to create spaceframe and/or iso-surfaces\n\n    var cellStyle = style;\n    if (isEven) {\n      if (drawingSurface && style === 'even') cellStyle = null;\n      return addCube(cellStyle, p000, p001, p010, p011, p100, p101, p110, p111, min, max);\n    } else {\n      if (drawingSurface && style === 'odd') cellStyle = null;\n      return addCube(cellStyle, p111, p110, p101, p100, p011, p010, p001, p000, min, max);\n    }\n  }\n  function draw2dX(style, items, min, max, previousResult) {\n    var result = [];\n    var n = 0;\n    for (var q = 0; q < items.length; q++) {\n      var i = items[q];\n      for (var k = 1; k < depth; k++) {\n        for (var j = 1; j < height; j++) {\n          result.push(begin2dCell(style, getIndex(i, j - 1, k - 1), getIndex(i, j - 1, k), getIndex(i, j, k - 1), getIndex(i, j, k), min, max, (i + j + k) % 2, previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n    return result;\n  }\n  function draw2dY(style, items, min, max, previousResult) {\n    var result = [];\n    var n = 0;\n    for (var q = 0; q < items.length; q++) {\n      var j = items[q];\n      for (var i = 1; i < width; i++) {\n        for (var k = 1; k < depth; k++) {\n          result.push(begin2dCell(style, getIndex(i - 1, j, k - 1), getIndex(i, j, k - 1), getIndex(i - 1, j, k), getIndex(i, j, k), min, max, (i + j + k) % 2, previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n    return result;\n  }\n  function draw2dZ(style, items, min, max, previousResult) {\n    var result = [];\n    var n = 0;\n    for (var q = 0; q < items.length; q++) {\n      var k = items[q];\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          result.push(begin2dCell(style, getIndex(i - 1, j - 1, k), getIndex(i - 1, j, k), getIndex(i, j - 1, k), getIndex(i, j, k), min, max, (i + j + k) % 2, previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n    return result;\n  }\n  function draw3d(style, min, max) {\n    for (var k = 1; k < depth; k++) {\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          begin3dCell(style, getIndex(i - 1, j - 1, k - 1), getIndex(i - 1, j - 1, k), getIndex(i - 1, j, k - 1), getIndex(i - 1, j, k), getIndex(i, j - 1, k - 1), getIndex(i, j - 1, k), getIndex(i, j, k - 1), getIndex(i, j, k), min, max, (i + j + k) % 2);\n        }\n      }\n    }\n  }\n  function drawSpaceframe(style, min, max) {\n    drawingSpaceframe = true;\n    draw3d(style, min, max);\n    drawingSpaceframe = false;\n  }\n  function drawSurface(style, min, max) {\n    drawingSurface = true;\n    draw3d(style, min, max);\n    drawingSurface = false;\n  }\n  function drawSectionX(style, items, min, max, distRatios, previousResult) {\n    var result = [];\n    var n = 0;\n    for (var q = 0; q < items.length; q++) {\n      var i = items[q];\n      for (var k = 1; k < depth; k++) {\n        for (var j = 1; j < height; j++) {\n          result.push(beginSection(style, i, j, k, min, max, distRatios[q], previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n    return result;\n  }\n  function drawSectionY(style, items, min, max, distRatios, previousResult) {\n    var result = [];\n    var n = 0;\n    for (var q = 0; q < items.length; q++) {\n      var j = items[q];\n      for (var i = 1; i < width; i++) {\n        for (var k = 1; k < depth; k++) {\n          result.push(beginSection(style, i, j, k, min, max, distRatios[q], previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n    return result;\n  }\n  function drawSectionZ(style, items, min, max, distRatios, previousResult) {\n    var result = [];\n    var n = 0;\n    for (var q = 0; q < items.length; q++) {\n      var k = items[q];\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          result.push(beginSection(style, i, j, k, min, max, distRatios[q], previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n    return result;\n  }\n  function createRange(a, b) {\n    var range = [];\n    for (var q = a; q < b; q++) {\n      range.push(q);\n    }\n    return range;\n  }\n  function insertGridPoints() {\n    for (var i = 0; i < width; i++) {\n      for (var j = 0; j < height; j++) {\n        for (var k = 0; k < depth; k++) {\n          var index = getIndex(i, j, k);\n          addVertex(data._x[index], data._y[index], data._z[index], data._value[index]);\n        }\n      }\n    }\n  }\n  function drawAll() {\n    emptyVertices();\n\n    // insert grid points\n    insertGridPoints();\n    var activeStyle = null;\n\n    // draw spaceframes\n    if (showSpaceframe && spaceframeFill) {\n      setFill(spaceframeFill);\n      drawSpaceframe(activeStyle, vMin, vMax);\n    }\n\n    // draw iso-surfaces\n    if (showSurface && surfaceFill) {\n      setFill(surfaceFill);\n      var surfacePattern = data.surface.pattern;\n      var surfaceCount = data.surface.count;\n      for (var q = 0; q < surfaceCount; q++) {\n        var ratio = surfaceCount === 1 ? 0.5 : q / (surfaceCount - 1);\n        var level = (1 - ratio) * vMin + ratio * vMax;\n        var d1 = Math.abs(level - minValues);\n        var d2 = Math.abs(level - maxValues);\n        var ranges = d1 > d2 ? [minValues, level] : [level, maxValues];\n        drawSurface(surfacePattern, ranges[0], ranges[1]);\n      }\n    }\n    var setupMinMax = [[Math.min(vMin, maxValues), Math.max(vMin, maxValues)], [Math.min(minValues, vMax), Math.max(minValues, vMax)]];\n    ['x', 'y', 'z'].forEach(function (e) {\n      var preRes = [];\n      for (var s = 0; s < setupMinMax.length; s++) {\n        var count = 0;\n        var activeMin = setupMinMax[s][0];\n        var activeMax = setupMinMax[s][1];\n\n        // draw slices\n        var slice = data.slices[e];\n        if (slice.show && slice.fill) {\n          setFill(slice.fill);\n          var exactIndices = [];\n          var ceilIndices = [];\n          var distRatios = [];\n          if (slice.locations.length) {\n            for (var q = 0; q < slice.locations.length; q++) {\n              var near = findNearestOnAxis(slice.locations[q], e === 'x' ? Xs : e === 'y' ? Ys : Zs);\n              if (near.distRatio === 0) {\n                exactIndices.push(near.id);\n              } else if (near.id > 0) {\n                ceilIndices.push(near.id);\n                if (e === 'x') {\n                  distRatios.push([near.distRatio, 0, 0]);\n                } else if (e === 'y') {\n                  distRatios.push([0, near.distRatio, 0]);\n                } else {\n                  distRatios.push([0, 0, near.distRatio]);\n                }\n              }\n            }\n          } else {\n            if (e === 'x') {\n              exactIndices = createRange(1, width - 1);\n            } else if (e === 'y') {\n              exactIndices = createRange(1, height - 1);\n            } else {\n              exactIndices = createRange(1, depth - 1);\n            }\n          }\n          if (ceilIndices.length > 0) {\n            if (e === 'x') {\n              preRes[count] = drawSectionX(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n            } else if (e === 'y') {\n              preRes[count] = drawSectionY(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n            } else {\n              preRes[count] = drawSectionZ(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n            }\n            count++;\n          }\n          if (exactIndices.length > 0) {\n            if (e === 'x') {\n              preRes[count] = draw2dX(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n            } else if (e === 'y') {\n              preRes[count] = draw2dY(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n            } else {\n              preRes[count] = draw2dZ(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n            }\n            count++;\n          }\n        }\n\n        // draw caps\n        var cap = data.caps[e];\n        if (cap.show && cap.fill) {\n          setFill(cap.fill);\n          if (e === 'x') {\n            preRes[count] = draw2dX(activeStyle, [0, width - 1], activeMin, activeMax, preRes[count]);\n          } else if (e === 'y') {\n            preRes[count] = draw2dY(activeStyle, [0, height - 1], activeMin, activeMax, preRes[count]);\n          } else {\n            preRes[count] = draw2dZ(activeStyle, [0, depth - 1], activeMin, activeMax, preRes[count]);\n          }\n          count++;\n        }\n      }\n    });\n\n    // remove vertices arrays (i.e. grid points) in case no face was created.\n    if (numFaces === 0) {\n      emptyVertices();\n    }\n    data._meshX = allXs;\n    data._meshY = allYs;\n    data._meshZ = allZs;\n    data._meshIntensity = allVs;\n    data._Xs = Xs;\n    data._Ys = Ys;\n    data._Zs = Zs;\n  }\n  drawAll();\n  return data;\n}\nfunction createIsosurfaceTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var mesh = createMesh({\n    gl: gl\n  });\n  var result = new IsosurfaceTrace(scene, mesh, data.uid);\n  mesh._trace = result;\n  result.update(data);\n  scene.glplot.add(mesh);\n  return result;\n}\nmodule.exports = {\n  findNearestOnAxis: findNearestOnAxis,\n  generateIsoMeshes: generateIsoMeshes,\n  createIsosurfaceTrace: createIsosurfaceTrace\n};","map":{"version":3,"names":["createMesh","require","gl_mesh3d","parseColorScale","str2RgbaArray","extractOpts","zip3","findNearestOnAxis","w","arr","q","length","min","Math","max","id","distRatio","IsosurfaceTrace","scene","mesh","uid","name","data","showContour","proto","prototype","handlePick","selection","object","rawId","index","x","_meshX","y","_meshY","z","_meshZ","height","_Ys","depth","_Zs","i","_Xs","j","k","selectIndex","traceCoordinate","_value","text","hovertext","Array","isArray","undefined","textLabel","update","layout","fullSceneLayout","generateIsoMeshes","toDataCoords","axis","coord","scale","calendar","map","d2l","positions","xaxis","dataScale","xcalendar","yaxis","ycalendar","zaxis","zcalendar","cells","_meshI","_meshJ","_meshK","config","lightPosition","lightposition","ambient","lighting","diffuse","specular","roughness","fresnel","vertexNormalsEpsilon","vertexnormalsepsilon","faceNormalsEpsilon","facenormalsepsilon","opacity","contourEnable","contour","show","contourColor","color","slice","contourWidth","width","useFacetNormals","flatshading","cOpts","vertexIntensity","_meshIntensity","vertexIntensityBounds","colormap","dispose","glplot","remove","GRID_TYPES","showSurface","surface","showSpaceframe","spaceframe","surfaceFill","fill","spaceframeFill","drawingSurface","drawingSpaceframe","numFaces","numVertices","beginVertextLength","Xs","Ys","Zs","filled","indexOf","_gridFill","replace","getIndex","minValues","_minValues","maxValues","_maxValues","vMin","_vMin","vMax","_vMax","allXs","allYs","allZs","allVs","findVertexId","len","f","beginGroup","emptyVertices","addVertex","v","push","addFace","a","b","c","getCenter","A","B","C","M","getBetween","r","activeFill","setFill","createOpenTri","xyzv","abc","G","sqrt","p1","p2","p3","styleIncludes","style","char","mapValue","value","drawTri","allXYZVs","allABCs","openTri","pnts","drawQuad","abcd","makeTri","drawTetra","calcIntersection","pointOut","pointIn","ratio","result","s","inRange","almostInFinalRange","vErr","getXYZV","indecies","_x","_y","_z","MAX_PASS","tryCreateTri","nPass","ok","tryDrawTri","interpolated","forEach","e","tryCreateTetra","D","p4","addCube","p000","p001","p010","p011","p100","p101","p110","p111","addRect","d","previousResult","begin2dCell","p00","p01","p10","p11","isEven","beginSection","distRatios","makeSection","rX","rY","rZ","begin3dCell","cellStyle","draw2dX","items","n","draw2dY","draw2dZ","draw3d","drawSpaceframe","drawSurface","drawSectionX","drawSectionY","drawSectionZ","createRange","range","insertGridPoints","drawAll","activeStyle","surfacePattern","pattern","surfaceCount","count","level","d1","abs","d2","ranges","setupMinMax","preRes","activeMin","activeMax","slices","exactIndices","ceilIndices","locations","near","cap","caps","createIsosurfaceTrace","gl","_trace","add","module","exports"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/isosurface/convert.js"],"sourcesContent":["'use strict';\n\nvar createMesh = require('../../../stackgl_modules').gl_mesh3d;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\n\nvar findNearestOnAxis = function(w, arr) {\n    for(var q = arr.length - 1; q > 0; q--) {\n        var min = Math.min(arr[q], arr[q - 1]);\n        var max = Math.max(arr[q], arr[q - 1]);\n        if(max > min && min < w && w <= max) {\n            return {\n                id: q,\n                distRatio: (max - w) / (max - min)\n            };\n        }\n    }\n    return {\n        id: 0,\n        distRatio: 0\n    };\n};\n\nfunction IsosurfaceTrace(scene, mesh, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.mesh = mesh;\n    this.name = '';\n    this.data = null;\n    this.showContour = false;\n}\n\nvar proto = IsosurfaceTrace.prototype;\n\nproto.handlePick = function(selection) {\n    if(selection.object === this.mesh) {\n        var rawId = selection.data.index;\n\n        var x = this.data._meshX[rawId];\n        var y = this.data._meshY[rawId];\n        var z = this.data._meshZ[rawId];\n\n        var height = this.data._Ys.length;\n        var depth = this.data._Zs.length;\n\n        var i = findNearestOnAxis(x, this.data._Xs).id;\n        var j = findNearestOnAxis(y, this.data._Ys).id;\n        var k = findNearestOnAxis(z, this.data._Zs).id;\n\n        var selectIndex = selection.index = k + depth * j + depth * height * i;\n\n        selection.traceCoordinate = [\n            this.data._meshX[selectIndex],\n            this.data._meshY[selectIndex],\n            this.data._meshZ[selectIndex],\n            this.data._value[selectIndex]\n        ];\n\n        var text = this.data.hovertext || this.data.text;\n        if(Array.isArray(text) && text[selectIndex] !== undefined) {\n            selection.textLabel = text[selectIndex];\n        } else if(text) {\n            selection.textLabel = text;\n        }\n\n        return true;\n    }\n};\n\nproto.update = function(data) {\n    var scene = this.scene;\n    var layout = scene.fullSceneLayout;\n\n    this.data = generateIsoMeshes(data);\n\n    // Unpack position data\n    function toDataCoords(axis, coord, scale, calendar) {\n        return coord.map(function(x) {\n            return axis.d2l(x, 0, calendar) * scale;\n        });\n    }\n\n    var positions = zip3(\n        toDataCoords(layout.xaxis, data._meshX, scene.dataScale[0], data.xcalendar),\n        toDataCoords(layout.yaxis, data._meshY, scene.dataScale[1], data.ycalendar),\n        toDataCoords(layout.zaxis, data._meshZ, scene.dataScale[2], data.zcalendar));\n\n    var cells = zip3(data._meshI, data._meshJ, data._meshK);\n\n    var config = {\n        positions: positions,\n        cells: cells,\n        lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n        ambient: data.lighting.ambient,\n        diffuse: data.lighting.diffuse,\n        specular: data.lighting.specular,\n        roughness: data.lighting.roughness,\n        fresnel: data.lighting.fresnel,\n        vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n        faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n        opacity: data.opacity,\n        contourEnable: data.contour.show,\n        contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n        contourWidth: data.contour.width,\n        useFacetNormals: data.flatshading\n    };\n\n    var cOpts = extractOpts(data);\n    config.vertexIntensity = data._meshIntensity;\n    config.vertexIntensityBounds = [cOpts.min, cOpts.max];\n    config.colormap = parseColorScale(data);\n\n    // Update mesh\n    this.mesh.update(config);\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.mesh);\n    this.mesh.dispose();\n};\n\nvar GRID_TYPES = ['xyz', 'xzy', 'yxz', 'yzx', 'zxy', 'zyx'];\n\nfunction generateIsoMeshes(data) {\n    data._meshI = [];\n    data._meshJ = [];\n    data._meshK = [];\n\n    var showSurface = data.surface.show;\n    var showSpaceframe = data.spaceframe.show;\n\n    var surfaceFill = data.surface.fill;\n    var spaceframeFill = data.spaceframe.fill;\n\n    var drawingSurface = false;\n    var drawingSpaceframe = false;\n\n    var numFaces = 0;\n    var numVertices;\n    var beginVertextLength;\n\n    var Xs = data._Xs;\n    var Ys = data._Ys;\n    var Zs = data._Zs;\n\n    var width = Xs.length;\n    var height = Ys.length;\n    var depth = Zs.length;\n\n    var filled = GRID_TYPES.indexOf(data._gridFill.replace(/-/g, '').replace(/\\+/g, ''));\n\n    var getIndex = function(i, j, k) {\n        switch(filled) {\n            case 5: // 'zyx'\n                return k + depth * j + depth * height * i;\n            case 4: // 'zxy'\n                return k + depth * i + depth * width * j;\n            case 3: // 'yzx'\n                return j + height * k + height * depth * i;\n            case 2: // 'yxz'\n                return j + height * i + height * width * k;\n            case 1: // 'xzy'\n                return i + width * k + width * depth * j;\n            default: // case 0: // 'xyz'\n                return i + width * j + width * height * k;\n        }\n    };\n\n    var minValues = data._minValues;\n    var maxValues = data._maxValues;\n\n    var vMin = data._vMin;\n    var vMax = data._vMax;\n\n    var allXs;\n    var allYs;\n    var allZs;\n    var allVs;\n\n    function findVertexId(x, y, z) {\n        // could be used to find the vertex id of previously generated vertex within the group\n\n        var len = allVs.length;\n        for(var f = beginVertextLength; f < len; f++) {\n            if(\n                x === allXs[f] &&\n                y === allYs[f] &&\n                z === allZs[f]\n            ) {\n                return f;\n            }\n        }\n        return -1;\n    }\n\n    function beginGroup() {\n        beginVertextLength = numVertices;\n    }\n\n    function emptyVertices() {\n        allXs = [];\n        allYs = [];\n        allZs = [];\n        allVs = [];\n        numVertices = 0;\n\n        beginGroup();\n    }\n\n    function addVertex(x, y, z, v) {\n        allXs.push(x);\n        allYs.push(y);\n        allZs.push(z);\n        allVs.push(v);\n        numVertices++;\n\n        return numVertices - 1;\n    }\n\n    function addFace(a, b, c) {\n        data._meshI.push(a);\n        data._meshJ.push(b);\n        data._meshK.push(c);\n        numFaces++;\n\n        return numFaces - 1;\n    }\n\n    function getCenter(A, B, C) {\n        var M = [];\n        for(var i = 0; i < A.length; i++) {\n            M[i] = (A[i] + B[i] + C[i]) / 3.0;\n        }\n        return M;\n    }\n\n    function getBetween(A, B, r) {\n        var M = [];\n        for(var i = 0; i < A.length; i++) {\n            M[i] = A[i] * (1 - r) + r * B[i];\n        }\n        return M;\n    }\n\n    var activeFill;\n    function setFill(fill) {\n        activeFill = fill;\n    }\n\n    function createOpenTri(xyzv, abc) {\n        var A = xyzv[0];\n        var B = xyzv[1];\n        var C = xyzv[2];\n        var G = getCenter(A, B, C);\n\n        var r = Math.sqrt(1 - activeFill);\n        var p1 = getBetween(G, A, r);\n        var p2 = getBetween(G, B, r);\n        var p3 = getBetween(G, C, r);\n\n        var a = abc[0];\n        var b = abc[1];\n        var c = abc[2];\n\n        return {\n            xyzv: [\n                [A, B, p2], [p2, p1, A],\n                [B, C, p3], [p3, p2, B],\n                [C, A, p1], [p1, p3, C]\n            ],\n            abc: [\n                [a, b, -1], [-1, -1, a],\n                [b, c, -1], [-1, -1, b],\n                [c, a, -1], [-1, -1, c]\n            ]\n        };\n    }\n\n    function styleIncludes(style, char) {\n        if(style === 'all' || style === null) return true;\n        return (style.indexOf(char) > -1);\n    }\n\n    function mapValue(style, value) {\n        if(style === null) return value;\n        return style;\n    }\n\n    function drawTri(style, xyzv, abc) {\n        beginGroup();\n\n        var allXYZVs = [xyzv];\n        var allABCs = [abc];\n        if(activeFill >= 1) {\n            allXYZVs = [xyzv];\n            allABCs = [abc];\n        } else if(activeFill > 0) {\n            var openTri = createOpenTri(xyzv, abc);\n            allXYZVs = openTri.xyzv;\n            allABCs = openTri.abc;\n        }\n\n        for(var f = 0; f < allXYZVs.length; f++) {\n            xyzv = allXYZVs[f];\n            abc = allABCs[f];\n\n            var pnts = [];\n            for(var i = 0; i < 3; i++) {\n                var x = xyzv[i][0];\n                var y = xyzv[i][1];\n                var z = xyzv[i][2];\n                var v = xyzv[i][3];\n\n                var id = (abc[i] > -1) ? abc[i] : findVertexId(x, y, z);\n                if(id > -1) {\n                    pnts[i] = id;\n                } else {\n                    pnts[i] = addVertex(x, y, z, mapValue(style, v));\n                }\n            }\n\n            addFace(pnts[0], pnts[1], pnts[2]);\n        }\n    }\n\n    function drawQuad(style, xyzv, abcd) {\n        var makeTri = function(i, j, k) {\n            drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n        };\n\n        makeTri(0, 1, 2);\n        makeTri(2, 3, 0);\n    }\n\n    function drawTetra(style, xyzv, abcd) {\n        var makeTri = function(i, j, k) {\n            drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n        };\n\n        makeTri(0, 1, 2);\n        makeTri(3, 0, 1);\n        makeTri(2, 3, 0);\n        makeTri(1, 2, 3);\n    }\n\n    function calcIntersection(pointOut, pointIn, min, max) {\n        var value = pointOut[3];\n\n        if(value < min) value = min;\n        if(value > max) value = max;\n\n        var ratio = (pointOut[3] - value) / (pointOut[3] - pointIn[3] + 0.000000001); // we had to add this error to force solve the tiny caps\n\n        var result = [];\n        for(var s = 0; s < 4; s++) {\n            result[s] = (1 - ratio) * pointOut[s] + ratio * pointIn[s];\n        }\n        return result;\n    }\n\n    function inRange(value, min, max) {\n        return (\n            value >= min &&\n            value <= max\n        );\n    }\n\n    function almostInFinalRange(value) {\n        var vErr = 0.001 * (vMax - vMin);\n        return (\n            value >= vMin - vErr &&\n            value <= vMax + vErr\n        );\n    }\n\n    function getXYZV(indecies) {\n        var xyzv = [];\n        for(var q = 0; q < 4; q++) {\n            var index = indecies[q];\n            xyzv.push(\n                [\n                    data._x[index],\n                    data._y[index],\n                    data._z[index],\n                    data._value[index]\n                ]\n            );\n        }\n\n        return xyzv;\n    }\n\n    var MAX_PASS = 3;\n\n    function tryCreateTri(style, xyzv, abc, min, max, nPass) {\n        if(!nPass) nPass = 1;\n\n        abc = [-1, -1, -1]; // Note: for the moment we override indices\n        // to run faster! But it is possible to comment this line\n        // to reduce the number of vertices.\n\n        var result = false;\n\n        var ok = [\n            inRange(xyzv[0][3], min, max),\n            inRange(xyzv[1][3], min, max),\n            inRange(xyzv[2][3], min, max)\n        ];\n\n        if(!ok[0] && !ok[1] && !ok[2]) {\n            return false;\n        }\n\n        var tryDrawTri = function(style, xyzv, abc) {\n            if( // we check here if the points are in `real` iso-min/max range\n                almostInFinalRange(xyzv[0][3]) &&\n                almostInFinalRange(xyzv[1][3]) &&\n                almostInFinalRange(xyzv[2][3])\n            ) {\n                drawTri(style, xyzv, abc);\n                return true;\n            } else if(nPass < MAX_PASS) {\n                return tryCreateTri(style, xyzv, abc, vMin, vMax, ++nPass); // i.e. second pass using actual vMin vMax bounds\n            }\n            return false;\n        };\n\n        if(ok[0] && ok[1] && ok[2]) {\n            return tryDrawTri(style, xyzv, abc) || result;\n        }\n\n        var interpolated = false;\n\n        [\n            [0, 1, 2],\n            [2, 0, 1],\n            [1, 2, 0]\n        ].forEach(function(e) {\n            if(ok[e[0]] && ok[e[1]] && !ok[e[2]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n\n                var p1 = calcIntersection(C, A, min, max);\n                var p2 = calcIntersection(C, B, min, max);\n\n                result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\n                result = tryDrawTri(style, [A, B, p2], [abc[e[0]], abc[e[1]], -1]) || result;\n\n                interpolated = true;\n            }\n        });\n        if(interpolated) return result;\n\n        [\n            [0, 1, 2],\n            [1, 2, 0],\n            [2, 0, 1]\n        ].forEach(function(e) {\n            if(ok[e[0]] && !ok[e[1]] && !ok[e[2]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n\n                var p1 = calcIntersection(B, A, min, max);\n                var p2 = calcIntersection(C, A, min, max);\n\n                result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\n\n                interpolated = true;\n            }\n        });\n        return result;\n    }\n\n    function tryCreateTetra(style, abcd, min, max) {\n        var result = false;\n\n        var xyzv = getXYZV(abcd);\n\n        var ok = [\n            inRange(xyzv[0][3], min, max),\n            inRange(xyzv[1][3], min, max),\n            inRange(xyzv[2][3], min, max),\n            inRange(xyzv[3][3], min, max)\n        ];\n\n        if(!ok[0] && !ok[1] && !ok[2] && !ok[3]) {\n            return result;\n        }\n\n        if(ok[0] && ok[1] && ok[2] && ok[3]) {\n            if(drawingSpaceframe) {\n                result = drawTetra(style, xyzv, abcd) || result;\n            }\n            return result;\n        }\n\n        var interpolated = false;\n\n        [\n            [0, 1, 2, 3],\n            [3, 0, 1, 2],\n            [2, 3, 0, 1],\n            [1, 2, 3, 0]\n        ].forEach(function(e) {\n            if(ok[e[0]] && ok[e[1]] && ok[e[2]] && !ok[e[3]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n                var D = xyzv[e[3]];\n\n                if(drawingSpaceframe) {\n                    result = drawTri(style, [A, B, C], [abcd[e[0]], abcd[e[1]], abcd[e[2]]]) || result;\n                } else {\n                    var p1 = calcIntersection(D, A, min, max);\n                    var p2 = calcIntersection(D, B, min, max);\n                    var p3 = calcIntersection(D, C, min, max);\n\n                    result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\n                }\n\n                interpolated = true;\n            }\n        });\n        if(interpolated) return result;\n\n        [\n            [0, 1, 2, 3],\n            [1, 2, 3, 0],\n            [2, 3, 0, 1],\n            [3, 0, 1, 2],\n            [0, 2, 3, 1],\n            [1, 3, 2, 0]\n        ].forEach(function(e) {\n            if(ok[e[0]] && ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n                var D = xyzv[e[3]];\n\n                var p1 = calcIntersection(C, A, min, max);\n                var p2 = calcIntersection(C, B, min, max);\n                var p3 = calcIntersection(D, B, min, max);\n                var p4 = calcIntersection(D, A, min, max);\n\n                if(drawingSpaceframe) {\n                    result = drawTri(style, [A, p4, p1], [abcd[e[0]], -1, -1]) || result;\n                    result = drawTri(style, [B, p2, p3], [abcd[e[1]], -1, -1]) || result;\n                } else {\n                    result = drawQuad(null, [p1, p2, p3, p4], [-1, -1, -1, -1]) || result;\n                }\n\n                interpolated = true;\n            }\n        });\n        if(interpolated) return result;\n\n        [\n            [0, 1, 2, 3],\n            [1, 2, 3, 0],\n            [2, 3, 0, 1],\n            [3, 0, 1, 2]\n        ].forEach(function(e) {\n            if(ok[e[0]] && !ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n                var D = xyzv[e[3]];\n\n                var p1 = calcIntersection(B, A, min, max);\n                var p2 = calcIntersection(C, A, min, max);\n                var p3 = calcIntersection(D, A, min, max);\n\n                if(drawingSpaceframe) {\n                    result = drawTri(style, [A, p1, p2], [abcd[e[0]], -1, -1]) || result;\n                    result = drawTri(style, [A, p2, p3], [abcd[e[0]], -1, -1]) || result;\n                    result = drawTri(style, [A, p3, p1], [abcd[e[0]], -1, -1]) || result;\n                } else {\n                    result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\n                }\n\n                interpolated = true;\n            }\n        });\n        return result;\n    }\n\n    function addCube(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max) {\n        var result = false;\n\n        if(drawingSurface) {\n            if(styleIncludes(style, 'A')) {\n                result = tryCreateTetra(null, [p000, p001, p010, p100], min, max) || result;\n            }\n            if(styleIncludes(style, 'B')) {\n                result = tryCreateTetra(null, [p001, p010, p011, p111], min, max) || result;\n            }\n            if(styleIncludes(style, 'C')) {\n                result = tryCreateTetra(null, [p001, p100, p101, p111], min, max) || result;\n            }\n            if(styleIncludes(style, 'D')) {\n                result = tryCreateTetra(null, [p010, p100, p110, p111], min, max) || result;\n            }\n            if(styleIncludes(style, 'E')) {\n                result = tryCreateTetra(null, [p001, p010, p100, p111], min, max) || result;\n            }\n        }\n\n        if(drawingSpaceframe) {\n            result = tryCreateTetra(style, [p001, p010, p100, p111], min, max) || result;\n        }\n\n        return result;\n    }\n\n    function addRect(style, a, b, c, d, min, max, previousResult) {\n        return [\n            (previousResult[0] === true) ? true :\n            tryCreateTri(style, getXYZV([a, b, c]), [a, b, c], min, max),\n            (previousResult[1] === true) ? true :\n            tryCreateTri(style, getXYZV([c, d, a]), [c, d, a], min, max)\n        ];\n    }\n\n    function begin2dCell(style, p00, p01, p10, p11, min, max, isEven, previousResult) {\n        // used to create caps and/or slices on exact axis points\n        if(isEven) {\n            return addRect(style, p00, p01, p11, p10, min, max, previousResult);\n        } else {\n            return addRect(style, p01, p11, p10, p00, min, max, previousResult);\n        }\n    }\n\n    function beginSection(style, i, j, k, min, max, distRatios) {\n        // used to create slices between axis points\n\n        var result = false;\n        var A, B, C, D;\n\n        var makeSection = function() {\n            result = tryCreateTri(style, [A, B, C], [-1, -1, -1], min, max) || result;\n            result = tryCreateTri(style, [C, D, A], [-1, -1, -1], min, max) || result;\n        };\n\n        var rX = distRatios[0];\n        var rY = distRatios[1];\n        var rZ = distRatios[2];\n\n        if(rX) {\n            A = getBetween(getXYZV([getIndex(i, j - 0, k - 0)])[0], getXYZV([getIndex(i - 1, j - 0, k - 0)])[0], rX);\n            B = getBetween(getXYZV([getIndex(i, j - 0, k - 1)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rX);\n            C = getBetween(getXYZV([getIndex(i, j - 1, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rX);\n            D = getBetween(getXYZV([getIndex(i, j - 1, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rX);\n            makeSection();\n        }\n\n        if(rY) {\n            A = getBetween(getXYZV([getIndex(i - 0, j, k - 0)])[0], getXYZV([getIndex(i - 0, j - 1, k - 0)])[0], rY);\n            B = getBetween(getXYZV([getIndex(i - 0, j, k - 1)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rY);\n            C = getBetween(getXYZV([getIndex(i - 1, j, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rY);\n            D = getBetween(getXYZV([getIndex(i - 1, j, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rY);\n            makeSection();\n        }\n\n        if(rZ) {\n            A = getBetween(getXYZV([getIndex(i - 0, j - 0, k)])[0], getXYZV([getIndex(i - 0, j - 0, k - 1)])[0], rZ);\n            B = getBetween(getXYZV([getIndex(i - 0, j - 1, k)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rZ);\n            C = getBetween(getXYZV([getIndex(i - 1, j - 1, k)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rZ);\n            D = getBetween(getXYZV([getIndex(i - 1, j - 0, k)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rZ);\n            makeSection();\n        }\n\n        return result;\n    }\n\n    function begin3dCell(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max, isEven) {\n        // used to create spaceframe and/or iso-surfaces\n\n        var cellStyle = style;\n        if(isEven) {\n            if(drawingSurface && style === 'even') cellStyle = null;\n            return addCube(cellStyle, p000, p001, p010, p011, p100, p101, p110, p111, min, max);\n        } else {\n            if(drawingSurface && style === 'odd') cellStyle = null;\n            return addCube(cellStyle, p111, p110, p101, p100, p011, p010, p001, p000, min, max);\n        }\n    }\n\n    function draw2dX(style, items, min, max, previousResult) {\n        var result = [];\n        var n = 0;\n        for(var q = 0; q < items.length; q++) {\n            var i = items[q];\n            for(var k = 1; k < depth; k++) {\n                for(var j = 1; j < height; j++) {\n                    result.push(\n                        begin2dCell(style,\n                            getIndex(i, j - 1, k - 1),\n                            getIndex(i, j - 1, k),\n                            getIndex(i, j, k - 1),\n                            getIndex(i, j, k),\n                            min,\n                            max,\n                            (i + j + k) % 2,\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\n                        )\n                    );\n                    n++;\n                }\n            }\n        }\n        return result;\n    }\n\n    function draw2dY(style, items, min, max, previousResult) {\n        var result = [];\n        var n = 0;\n        for(var q = 0; q < items.length; q++) {\n            var j = items[q];\n            for(var i = 1; i < width; i++) {\n                for(var k = 1; k < depth; k++) {\n                    result.push(\n                        begin2dCell(style,\n                            getIndex(i - 1, j, k - 1),\n                            getIndex(i, j, k - 1),\n                            getIndex(i - 1, j, k),\n                            getIndex(i, j, k),\n                            min,\n                            max,\n                            (i + j + k) % 2,\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\n                        )\n                    );\n                    n++;\n                }\n            }\n        }\n        return result;\n    }\n\n    function draw2dZ(style, items, min, max, previousResult) {\n        var result = [];\n        var n = 0;\n        for(var q = 0; q < items.length; q++) {\n            var k = items[q];\n            for(var j = 1; j < height; j++) {\n                for(var i = 1; i < width; i++) {\n                    result.push(\n                        begin2dCell(style,\n                            getIndex(i - 1, j - 1, k),\n                            getIndex(i - 1, j, k),\n                            getIndex(i, j - 1, k),\n                            getIndex(i, j, k),\n                            min,\n                            max,\n                            (i + j + k) % 2,\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\n                        )\n                    );\n                    n++;\n                }\n            }\n        }\n        return result;\n    }\n\n    function draw3d(style, min, max) {\n        for(var k = 1; k < depth; k++) {\n            for(var j = 1; j < height; j++) {\n                for(var i = 1; i < width; i++) {\n                    begin3dCell(style,\n                        getIndex(i - 1, j - 1, k - 1),\n                        getIndex(i - 1, j - 1, k),\n                        getIndex(i - 1, j, k - 1),\n                        getIndex(i - 1, j, k),\n                        getIndex(i, j - 1, k - 1),\n                        getIndex(i, j - 1, k),\n                        getIndex(i, j, k - 1),\n                        getIndex(i, j, k),\n                        min,\n                        max,\n                        (i + j + k) % 2\n                    );\n                }\n            }\n        }\n    }\n\n    function drawSpaceframe(style, min, max) {\n        drawingSpaceframe = true;\n        draw3d(style, min, max);\n        drawingSpaceframe = false;\n    }\n\n    function drawSurface(style, min, max) {\n        drawingSurface = true;\n        draw3d(style, min, max);\n        drawingSurface = false;\n    }\n\n    function drawSectionX(style, items, min, max, distRatios, previousResult) {\n        var result = [];\n        var n = 0;\n        for(var q = 0; q < items.length; q++) {\n            var i = items[q];\n            for(var k = 1; k < depth; k++) {\n                for(var j = 1; j < height; j++) {\n                    result.push(\n                        beginSection(style, i, j, k, min, max, distRatios[q],\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\n                        )\n                    );\n                    n++;\n                }\n            }\n        }\n        return result;\n    }\n\n    function drawSectionY(style, items, min, max, distRatios, previousResult) {\n        var result = [];\n        var n = 0;\n        for(var q = 0; q < items.length; q++) {\n            var j = items[q];\n            for(var i = 1; i < width; i++) {\n                for(var k = 1; k < depth; k++) {\n                    result.push(\n                        beginSection(style, i, j, k, min, max, distRatios[q],\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\n                        )\n                    );\n                    n++;\n                }\n            }\n        }\n        return result;\n    }\n\n    function drawSectionZ(style, items, min, max, distRatios, previousResult) {\n        var result = [];\n        var n = 0;\n        for(var q = 0; q < items.length; q++) {\n            var k = items[q];\n            for(var j = 1; j < height; j++) {\n                for(var i = 1; i < width; i++) {\n                    result.push(\n                        beginSection(style, i, j, k, min, max, distRatios[q],\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\n                        )\n                    );\n                    n++;\n                }\n            }\n        }\n        return result;\n    }\n\n    function createRange(a, b) {\n        var range = [];\n        for(var q = a; q < b; q++) {\n            range.push(q);\n        }\n        return range;\n    }\n\n    function insertGridPoints() {\n        for(var i = 0; i < width; i++) {\n            for(var j = 0; j < height; j++) {\n                for(var k = 0; k < depth; k++) {\n                    var index = getIndex(i, j, k);\n                    addVertex(\n                        data._x[index],\n                        data._y[index],\n                        data._z[index],\n                        data._value[index]\n                    );\n                }\n            }\n        }\n    }\n\n    function drawAll() {\n        emptyVertices();\n\n        // insert grid points\n        insertGridPoints();\n\n        var activeStyle = null;\n\n        // draw spaceframes\n        if(showSpaceframe && spaceframeFill) {\n            setFill(spaceframeFill);\n\n            drawSpaceframe(activeStyle, vMin, vMax);\n        }\n\n        // draw iso-surfaces\n        if(showSurface && surfaceFill) {\n            setFill(surfaceFill);\n\n            var surfacePattern = data.surface.pattern;\n            var surfaceCount = data.surface.count;\n            for(var q = 0; q < surfaceCount; q++) {\n                var ratio = (surfaceCount === 1) ? 0.5 : q / (surfaceCount - 1);\n                var level = (1 - ratio) * vMin + ratio * vMax;\n\n                var d1 = Math.abs(level - minValues);\n                var d2 = Math.abs(level - maxValues);\n                var ranges = (d1 > d2) ?\n                    [minValues, level] :\n                    [level, maxValues];\n\n                drawSurface(surfacePattern, ranges[0], ranges[1]);\n            }\n        }\n\n        var setupMinMax = [\n            [ Math.min(vMin, maxValues), Math.max(vMin, maxValues) ],\n            [ Math.min(minValues, vMax), Math.max(minValues, vMax) ]\n        ];\n\n        ['x', 'y', 'z'].forEach(function(e) {\n            var preRes = [];\n            for(var s = 0; s < setupMinMax.length; s++) {\n                var count = 0;\n\n                var activeMin = setupMinMax[s][0];\n                var activeMax = setupMinMax[s][1];\n\n                // draw slices\n                var slice = data.slices[e];\n                if(slice.show && slice.fill) {\n                    setFill(slice.fill);\n\n                    var exactIndices = [];\n                    var ceilIndices = [];\n                    var distRatios = [];\n                    if(slice.locations.length) {\n                        for(var q = 0; q < slice.locations.length; q++) {\n                            var near = findNearestOnAxis(\n                                slice.locations[q],\n                                (e === 'x') ? Xs :\n                                (e === 'y') ? Ys : Zs\n                            );\n\n                            if(near.distRatio === 0) {\n                                exactIndices.push(near.id);\n                            } else if(near.id > 0) {\n                                ceilIndices.push(near.id);\n                                if(e === 'x') {\n                                    distRatios.push([near.distRatio, 0, 0]);\n                                } else if(e === 'y') {\n                                    distRatios.push([0, near.distRatio, 0]);\n                                } else {\n                                    distRatios.push([0, 0, near.distRatio]);\n                                }\n                            }\n                        }\n                    } else {\n                        if(e === 'x') {\n                            exactIndices = createRange(1, width - 1);\n                        } else if(e === 'y') {\n                            exactIndices = createRange(1, height - 1);\n                        } else {\n                            exactIndices = createRange(1, depth - 1);\n                        }\n                    }\n\n                    if(ceilIndices.length > 0) {\n                        if(e === 'x') {\n                            preRes[count] = drawSectionX(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n                        } else if(e === 'y') {\n                            preRes[count] = drawSectionY(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n                        } else {\n                            preRes[count] = drawSectionZ(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n                        }\n                        count++;\n                    }\n\n                    if(exactIndices.length > 0) {\n                        if(e === 'x') {\n                            preRes[count] = draw2dX(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n                        } else if(e === 'y') {\n                            preRes[count] = draw2dY(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n                        } else {\n                            preRes[count] = draw2dZ(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n                        }\n                        count++;\n                    }\n                }\n\n                // draw caps\n                var cap = data.caps[e];\n                if(cap.show && cap.fill) {\n                    setFill(cap.fill);\n                    if(e === 'x') {\n                        preRes[count] = draw2dX(activeStyle, [0, width - 1], activeMin, activeMax, preRes[count]);\n                    } else if(e === 'y') {\n                        preRes[count] = draw2dY(activeStyle, [0, height - 1], activeMin, activeMax, preRes[count]);\n                    } else {\n                        preRes[count] = draw2dZ(activeStyle, [0, depth - 1], activeMin, activeMax, preRes[count]);\n                    }\n                    count++;\n                }\n            }\n        });\n\n        // remove vertices arrays (i.e. grid points) in case no face was created.\n        if(numFaces === 0) {\n            emptyVertices();\n        }\n\n        data._meshX = allXs;\n        data._meshY = allYs;\n        data._meshZ = allZs;\n        data._meshIntensity = allVs;\n\n        data._Xs = Xs;\n        data._Ys = Ys;\n        data._Zs = Zs;\n    }\n\n    drawAll();\n\n    return data;\n}\n\nfunction createIsosurfaceTrace(scene, data) {\n    var gl = scene.glplot.gl;\n    var mesh = createMesh({gl: gl});\n    var result = new IsosurfaceTrace(scene, mesh, data.uid);\n\n    mesh._trace = result;\n    result.update(data);\n    scene.glplot.add(mesh);\n    return result;\n}\n\nmodule.exports = {\n    findNearestOnAxis: findNearestOnAxis,\n    generateIsoMeshes: generateIsoMeshes,\n    createIsosurfaceTrace: createIsosurfaceTrace,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}