{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Color = require('../../components/color');\nvar Lib = require('../../lib');\nvar helpers = require('../sunburst/helpers');\nvar resizeText = require('../bar/uniform_text').resizeText;\nfunction style(gd) {\n  var s = gd._fullLayout._treemaplayer.selectAll('.trace');\n  resizeText(gd, s, 'treemap');\n  s.each(function (cd) {\n    var gTrace = d3.select(this);\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    gTrace.style('opacity', trace.opacity);\n    gTrace.selectAll('path.surface').each(function (pt) {\n      d3.select(this).call(styleOne, pt, trace, {\n        hovered: false\n      });\n    });\n  });\n}\nfunction styleOne(s, pt, trace, opts) {\n  var hovered = (opts || {}).hovered;\n  var cdi = pt.data.data;\n  var ptNumber = cdi.i;\n  var lineColor;\n  var lineWidth;\n  var fillColor = cdi.color;\n  var isRoot = helpers.isHierarchyRoot(pt);\n  var opacity = 1;\n  if (hovered) {\n    lineColor = trace._hovered.marker.line.color;\n    lineWidth = trace._hovered.marker.line.width;\n  } else {\n    if (isRoot && fillColor === trace.root.color) {\n      opacity = 100;\n      lineColor = 'rgba(0,0,0,0)';\n      lineWidth = 0;\n    } else {\n      lineColor = Lib.castOption(trace, ptNumber, 'marker.line.color') || Color.defaultLine;\n      lineWidth = Lib.castOption(trace, ptNumber, 'marker.line.width') || 0;\n      if (!trace._hasColorscale && !pt.onPathbar) {\n        var depthfade = trace.marker.depthfade;\n        if (depthfade) {\n          var fadedColor = Color.combine(Color.addOpacity(trace._backgroundColor, 0.75), fillColor);\n          var n;\n          if (depthfade === true) {\n            var maxDepth = helpers.getMaxDepth(trace);\n            if (isFinite(maxDepth)) {\n              if (helpers.isLeaf(pt)) {\n                n = 0;\n              } else {\n                n = trace._maxVisibleLayers - (pt.data.depth - trace._entryDepth);\n              }\n            } else {\n              n = pt.data.height + 1;\n            }\n          } else {\n            // i.e. case of depthfade === 'reversed'\n            n = pt.data.depth - trace._entryDepth;\n            if (!trace._atRootLevel) n++;\n          }\n          if (n > 0) {\n            for (var i = 0; i < n; i++) {\n              var ratio = 0.5 * i / n;\n              fillColor = Color.combine(Color.addOpacity(fadedColor, ratio), fillColor);\n            }\n          }\n        }\n      }\n    }\n  }\n  s.style('stroke-width', lineWidth).call(Color.fill, fillColor).call(Color.stroke, lineColor).style('opacity', opacity);\n}\nmodule.exports = {\n  style: style,\n  styleOne: styleOne\n};","map":{"version":3,"names":["d3","require","Color","Lib","helpers","resizeText","style","gd","s","_fullLayout","_treemaplayer","selectAll","each","cd","gTrace","select","cd0","trace","opacity","pt","call","styleOne","hovered","opts","cdi","data","ptNumber","i","lineColor","lineWidth","fillColor","color","isRoot","isHierarchyRoot","_hovered","marker","line","width","root","castOption","defaultLine","_hasColorscale","onPathbar","depthfade","fadedColor","combine","addOpacity","_backgroundColor","n","maxDepth","getMaxDepth","isFinite","isLeaf","_maxVisibleLayers","depth","_entryDepth","height","_atRootLevel","ratio","fill","stroke","module","exports"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/treemap/style.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Color = require('../../components/color');\nvar Lib = require('../../lib');\nvar helpers = require('../sunburst/helpers');\nvar resizeText = require('../bar/uniform_text').resizeText;\n\nfunction style(gd) {\n    var s = gd._fullLayout._treemaplayer.selectAll('.trace');\n    resizeText(gd, s, 'treemap');\n\n    s.each(function(cd) {\n        var gTrace = d3.select(this);\n        var cd0 = cd[0];\n        var trace = cd0.trace;\n\n        gTrace.style('opacity', trace.opacity);\n\n        gTrace.selectAll('path.surface').each(function(pt) {\n            d3.select(this).call(styleOne, pt, trace, {\n                hovered: false\n            });\n        });\n    });\n}\n\nfunction styleOne(s, pt, trace, opts) {\n    var hovered = (opts || {}).hovered;\n    var cdi = pt.data.data;\n    var ptNumber = cdi.i;\n    var lineColor;\n    var lineWidth;\n    var fillColor = cdi.color;\n    var isRoot = helpers.isHierarchyRoot(pt);\n    var opacity = 1;\n\n    if(hovered) {\n        lineColor = trace._hovered.marker.line.color;\n        lineWidth = trace._hovered.marker.line.width;\n    } else {\n        if(isRoot && fillColor === trace.root.color) {\n            opacity = 100;\n            lineColor = 'rgba(0,0,0,0)';\n            lineWidth = 0;\n        } else {\n            lineColor = Lib.castOption(trace, ptNumber, 'marker.line.color') || Color.defaultLine;\n            lineWidth = Lib.castOption(trace, ptNumber, 'marker.line.width') || 0;\n\n            if(!trace._hasColorscale && !pt.onPathbar) {\n                var depthfade = trace.marker.depthfade;\n                if(depthfade) {\n                    var fadedColor = Color.combine(Color.addOpacity(trace._backgroundColor, 0.75), fillColor);\n                    var n;\n\n                    if(depthfade === true) {\n                        var maxDepth = helpers.getMaxDepth(trace);\n                        if(isFinite(maxDepth)) {\n                            if(helpers.isLeaf(pt)) {\n                                n = 0;\n                            } else {\n                                n = (trace._maxVisibleLayers) - (pt.data.depth - trace._entryDepth);\n                            }\n                        } else {\n                            n = pt.data.height + 1;\n                        }\n                    } else { // i.e. case of depthfade === 'reversed'\n                        n = pt.data.depth - trace._entryDepth;\n                        if(!trace._atRootLevel) n++;\n                    }\n\n                    if(n > 0) {\n                        for(var i = 0; i < n; i++) {\n                            var ratio = 0.5 * i / n;\n                            fillColor = Color.combine(Color.addOpacity(fadedColor, ratio), fillColor);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    s.style('stroke-width', lineWidth)\n        .call(Color.fill, fillColor)\n        .call(Color.stroke, lineColor)\n        .style('opacity', opacity);\n}\n\nmodule.exports = {\n    style: style,\n    styleOne: styleOne\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}