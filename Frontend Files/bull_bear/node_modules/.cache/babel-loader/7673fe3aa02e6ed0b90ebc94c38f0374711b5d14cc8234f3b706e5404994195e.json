{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar strRotate = Lib.strRotate;\nvar Events = require('../../lib/events');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar overrideCursor = require('../../lib/override_cursor');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar dragElement = require('../dragelement');\nvar Axes = require('../../plots/cartesian/axes');\nvar Registry = require('../../registry');\nvar helpers = require('./helpers');\nvar constants = require('./constants');\nvar legendSupplyDefaults = require('../legend/defaults');\nvar legendDraw = require('../legend/draw');\n\n// hover labels for multiple horizontal bars get tilted by some angle,\n// then need to be offset differently if they overlap\nvar YANGLE = constants.YANGLE;\nvar YA_RADIANS = Math.PI * YANGLE / 180;\n\n// expansion of projected height\nvar YFACTOR = 1 / Math.sin(YA_RADIANS);\n\n// to make the appropriate post-rotation x offset,\n// you need both x and y offsets\nvar YSHIFTX = Math.cos(YA_RADIANS);\nvar YSHIFTY = Math.sin(YA_RADIANS);\n\n// size and display constants for hover text\nvar HOVERARROWSIZE = constants.HOVERARROWSIZE;\nvar HOVERTEXTPAD = constants.HOVERTEXTPAD;\nvar multipleHoverPoints = {\n  box: true,\n  ohlc: true,\n  violin: true,\n  candlestick: true\n};\nvar cartesianScatterPoints = {\n  scatter: true,\n  scattergl: true,\n  splom: true\n};\n\n// fx.hover: highlight data on hover\n// evt can be a mousemove event, or an object with data about what points\n//   to hover on\n//      {xpx,ypx[,hovermode]} - pixel locations from top left\n//          (with optional overriding hovermode)\n//      {xval,yval[,hovermode]} - data values\n//      [{curveNumber,(pointNumber|xval and/or yval)}] -\n//              array of specific points to highlight\n//          pointNumber is a single integer if gd.data[curveNumber] is 1D,\n//              or a two-element array if it's 2D\n//          xval and yval are data values,\n//              1D data may specify either or both,\n//              2D data must specify both\n// subplot is an id string (default \"xy\")\n// makes use of gl.hovermode, which can be:\n//      x (find the points with the closest x values, ie a column),\n//      closest (find the single closest point)\n//    internally there are two more that occasionally get used:\n//      y (pick out a row - only used for multiple horizontal bar charts)\n//      array (used when the user specifies an explicit\n//          array of points to hover on)\n//\n// We wrap the hovers in a timer, to limit their frequency.\n// The actual rendering is done by private function _hover.\nexports.hover = function hover(gd, evt, subplot, noHoverEvent) {\n  gd = Lib.getGraphDiv(gd);\n  // The 'target' property changes when bubbling out of Shadow DOM.\n  // Throttling can delay reading the target, so we save the current value.\n  var eventTarget = evt.target;\n  Lib.throttle(gd._fullLayout._uid + constants.HOVERID, constants.HOVERMINTIME, function () {\n    _hover(gd, evt, subplot, noHoverEvent, eventTarget);\n  });\n};\n\n/*\n * Draw a single hover item or an array of hover item in a pre-existing svg container somewhere\n * hoverItem should have keys:\n *    - x and y (or x0, x1, y0, and y1):\n *      the pixel position to mark, relative to opts.container\n *    - xLabel, yLabel, zLabel, text, and name:\n *      info to go in the label\n *    - color:\n *      the background color for the label.\n *    - idealAlign (optional):\n *      'left' or 'right' for which side of the x/y box to try to put this on first\n *    - borderColor (optional):\n *      color for the border, defaults to strongest contrast with color\n *    - fontFamily (optional):\n *      string, the font for this label, defaults to constants.HOVERFONT\n *    - fontSize (optional):\n *      the label font size, defaults to constants.HOVERFONTSIZE\n *    - fontColor (optional):\n *      defaults to borderColor\n * opts should have keys:\n *    - bgColor:\n *      the background color this is against, used if the trace is\n *      non-opaque, and for the name, which goes outside the box\n *    - container:\n *      a <svg> or <g> element to add the hover label to\n *    - outerContainer:\n *      normally a parent of `container`, sets the bounding box to use to\n *      constrain the hover label and determine whether to show it on the left or right\n * opts can have optional keys:\n *    - anchorIndex:\n        the index of the hover item used as an anchor for positioning.\n        The other hover items will be pushed up or down to prevent overlap.\n */\nexports.loneHover = function loneHover(hoverItems, opts) {\n  var multiHover = true;\n  if (!Array.isArray(hoverItems)) {\n    multiHover = false;\n    hoverItems = [hoverItems];\n  }\n  var gd = opts.gd;\n  var gTop = getTopOffset(gd);\n  var gLeft = getLeftOffset(gd);\n  var pointsData = hoverItems.map(function (hoverItem) {\n    var _x0 = hoverItem._x0 || hoverItem.x0 || hoverItem.x || 0;\n    var _x1 = hoverItem._x1 || hoverItem.x1 || hoverItem.x || 0;\n    var _y0 = hoverItem._y0 || hoverItem.y0 || hoverItem.y || 0;\n    var _y1 = hoverItem._y1 || hoverItem.y1 || hoverItem.y || 0;\n    var eventData = hoverItem.eventData;\n    if (eventData) {\n      var x0 = Math.min(_x0, _x1);\n      var x1 = Math.max(_x0, _x1);\n      var y0 = Math.min(_y0, _y1);\n      var y1 = Math.max(_y0, _y1);\n      var trace = hoverItem.trace;\n      if (Registry.traceIs(trace, 'gl3d')) {\n        var container = gd._fullLayout[trace.scene]._scene.container;\n        var dx = container.offsetLeft;\n        var dy = container.offsetTop;\n        x0 += dx;\n        x1 += dx;\n        y0 += dy;\n        y1 += dy;\n      } // TODO: handle heatmapgl\n\n      eventData.bbox = {\n        x0: x0 + gLeft,\n        x1: x1 + gLeft,\n        y0: y0 + gTop,\n        y1: y1 + gTop\n      };\n      if (opts.inOut_bbox) {\n        opts.inOut_bbox.push(eventData.bbox);\n      }\n    } else {\n      eventData = false;\n    }\n    return {\n      color: hoverItem.color || Color.defaultLine,\n      x0: hoverItem.x0 || hoverItem.x || 0,\n      x1: hoverItem.x1 || hoverItem.x || 0,\n      y0: hoverItem.y0 || hoverItem.y || 0,\n      y1: hoverItem.y1 || hoverItem.y || 0,\n      xLabel: hoverItem.xLabel,\n      yLabel: hoverItem.yLabel,\n      zLabel: hoverItem.zLabel,\n      text: hoverItem.text,\n      name: hoverItem.name,\n      idealAlign: hoverItem.idealAlign,\n      // optional extra bits of styling\n      borderColor: hoverItem.borderColor,\n      fontFamily: hoverItem.fontFamily,\n      fontSize: hoverItem.fontSize,\n      fontColor: hoverItem.fontColor,\n      nameLength: hoverItem.nameLength,\n      textAlign: hoverItem.textAlign,\n      // filler to make createHoverText happy\n      trace: hoverItem.trace || {\n        index: 0,\n        hoverinfo: ''\n      },\n      xa: {\n        _offset: 0\n      },\n      ya: {\n        _offset: 0\n      },\n      index: 0,\n      hovertemplate: hoverItem.hovertemplate || false,\n      hovertemplateLabels: hoverItem.hovertemplateLabels || false,\n      eventData: eventData\n    };\n  });\n  var rotateLabels = false;\n  var hoverText = createHoverText(pointsData, {\n    gd: gd,\n    hovermode: 'closest',\n    rotateLabels: rotateLabels,\n    bgColor: opts.bgColor || Color.background,\n    container: d3.select(opts.container),\n    outerContainer: opts.outerContainer || opts.container\n  });\n  var hoverLabel = hoverText.hoverLabels;\n\n  // Fix vertical overlap\n  var tooltipSpacing = 5;\n  var lastBottomY = 0;\n  var anchor = 0;\n  hoverLabel.sort(function (a, b) {\n    return a.y0 - b.y0;\n  }).each(function (d, i) {\n    var topY = d.y0 - d.by / 2;\n    if (topY - tooltipSpacing < lastBottomY) {\n      d.offset = lastBottomY - topY + tooltipSpacing;\n    } else {\n      d.offset = 0;\n    }\n    lastBottomY = topY + d.by + d.offset;\n    if (i === opts.anchorIndex || 0) anchor = d.offset;\n  }).each(function (d) {\n    d.offset -= anchor;\n  });\n  var scaleX = gd._fullLayout._invScaleX;\n  var scaleY = gd._fullLayout._invScaleY;\n  alignHoverText(hoverLabel, rotateLabels, scaleX, scaleY);\n  return multiHover ? hoverLabel : hoverLabel.node();\n};\n\n// The actual implementation is here:\nfunction _hover(gd, evt, subplot, noHoverEvent, eventTarget) {\n  if (!subplot) subplot = 'xy';\n\n  // if the user passed in an array of subplots,\n  // use those instead of finding overlayed plots\n  var subplots = Array.isArray(subplot) ? subplot : [subplot];\n  var fullLayout = gd._fullLayout;\n  var plots = fullLayout._plots || [];\n  var plotinfo = plots[subplot];\n  var hasCartesian = fullLayout._has('cartesian');\n\n  // list of all overlaid subplots to look at\n  if (plotinfo) {\n    var overlayedSubplots = plotinfo.overlays.map(function (pi) {\n      return pi.id;\n    });\n    subplots = subplots.concat(overlayedSubplots);\n  }\n  var len = subplots.length;\n  var xaArray = new Array(len);\n  var yaArray = new Array(len);\n  var supportsCompare = false;\n  for (var i = 0; i < len; i++) {\n    var spId = subplots[i];\n    if (plots[spId]) {\n      // 'cartesian' case\n      supportsCompare = true;\n      xaArray[i] = plots[spId].xaxis;\n      yaArray[i] = plots[spId].yaxis;\n    } else if (fullLayout[spId] && fullLayout[spId]._subplot) {\n      // other subplot types\n      var _subplot = fullLayout[spId]._subplot;\n      xaArray[i] = _subplot.xaxis;\n      yaArray[i] = _subplot.yaxis;\n    } else {\n      Lib.warn('Unrecognized subplot: ' + spId);\n      return;\n    }\n  }\n  var hovermode = evt.hovermode || fullLayout.hovermode;\n  if (hovermode && !supportsCompare) hovermode = 'closest';\n  if (['x', 'y', 'closest', 'x unified', 'y unified'].indexOf(hovermode) === -1 || !gd.calcdata || gd.querySelector('.zoombox') || gd._dragging) {\n    return dragElement.unhoverRaw(gd, evt);\n  }\n  var hoverdistance = fullLayout.hoverdistance;\n  if (hoverdistance === -1) hoverdistance = Infinity;\n  var spikedistance = fullLayout.spikedistance;\n  if (spikedistance === -1) spikedistance = Infinity;\n\n  // hoverData: the set of candidate points we've found to highlight\n  var hoverData = [];\n\n  // searchData: the data to search in. Mostly this is just a copy of\n  // gd.calcdata, filtered to the subplot and overlays we're on\n  // but if a point array is supplied it will be a mapping\n  // of indicated curves\n  var searchData = [];\n\n  // [x|y]valArray: the axis values of the hover event\n  // mapped onto each of the currently selected overlaid subplots\n  var xvalArray, yvalArray;\n  var itemnum, curvenum, cd, trace, subplotId, subploti, _mode, xval, yval, pointData, closedataPreviousLength;\n\n  // spikePoints: the set of candidate points we've found to draw spikes to\n  var spikePoints = {\n    hLinePoint: null,\n    vLinePoint: null\n  };\n\n  // does subplot have one (or more) horizontal traces?\n  // This is used to determine whether we rotate the labels or not\n  var hasOneHorizontalTrace = false;\n\n  // Figure out what we're hovering on:\n  // mouse location or user-supplied data\n\n  if (Array.isArray(evt)) {\n    // user specified an array of points to highlight\n    hovermode = 'array';\n    for (itemnum = 0; itemnum < evt.length; itemnum++) {\n      cd = gd.calcdata[evt[itemnum].curveNumber || 0];\n      if (cd) {\n        trace = cd[0].trace;\n        if (cd[0].trace.hoverinfo !== 'skip') {\n          searchData.push(cd);\n          if (trace.orientation === 'h') {\n            hasOneHorizontalTrace = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (curvenum = 0; curvenum < gd.calcdata.length; curvenum++) {\n      cd = gd.calcdata[curvenum];\n      trace = cd[0].trace;\n      if (trace.hoverinfo !== 'skip' && helpers.isTraceInSubplots(trace, subplots)) {\n        searchData.push(cd);\n        if (trace.orientation === 'h') {\n          hasOneHorizontalTrace = true;\n        }\n      }\n    }\n\n    // [x|y]px: the pixels (from top left) of the mouse location\n    // on the currently selected plot area\n    // add pointerX|Y property for drawing the spikes in spikesnap 'cursor' situation\n    var hasUserCalledHover = !eventTarget;\n    var xpx, ypx;\n    if (hasUserCalledHover) {\n      if ('xpx' in evt) xpx = evt.xpx;else xpx = xaArray[0]._length / 2;\n      if ('ypx' in evt) ypx = evt.ypx;else ypx = yaArray[0]._length / 2;\n    } else {\n      // fire the beforehover event and quit if it returns false\n      // note that we're only calling this on real mouse events, so\n      // manual calls to fx.hover will always run.\n      if (Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n        return;\n      }\n      var dbb = eventTarget.getBoundingClientRect();\n      xpx = evt.clientX - dbb.left;\n      ypx = evt.clientY - dbb.top;\n      fullLayout._calcInverseTransform(gd);\n      var transformedCoords = Lib.apply3DTransform(fullLayout._invTransform)(xpx, ypx);\n      xpx = transformedCoords[0];\n      ypx = transformedCoords[1];\n\n      // in case hover was called from mouseout into hovertext,\n      // it's possible you're not actually over the plot anymore\n      if (xpx < 0 || xpx > xaArray[0]._length || ypx < 0 || ypx > yaArray[0]._length) {\n        return dragElement.unhoverRaw(gd, evt);\n      }\n    }\n    evt.pointerX = xpx + xaArray[0]._offset;\n    evt.pointerY = ypx + yaArray[0]._offset;\n    if ('xval' in evt) xvalArray = helpers.flat(subplots, evt.xval);else xvalArray = helpers.p2c(xaArray, xpx);\n    if ('yval' in evt) yvalArray = helpers.flat(subplots, evt.yval);else yvalArray = helpers.p2c(yaArray, ypx);\n    if (!isNumeric(xvalArray[0]) || !isNumeric(yvalArray[0])) {\n      Lib.warn('Fx.hover failed', evt, gd);\n      return dragElement.unhoverRaw(gd, evt);\n    }\n  }\n\n  // the pixel distance to beat as a matching point\n  // in 'x' or 'y' mode this resets for each trace\n  var distance = Infinity;\n\n  // find the closest point in each trace\n  // this is minimum dx and/or dy, depending on mode\n  // and the pixel position for the label (labelXpx, labelYpx)\n  function findHoverPoints(customXVal, customYVal) {\n    for (curvenum = 0; curvenum < searchData.length; curvenum++) {\n      cd = searchData[curvenum];\n\n      // filter out invisible or broken data\n      if (!cd || !cd[0] || !cd[0].trace) continue;\n      trace = cd[0].trace;\n      if (trace.visible !== true || trace._length === 0) continue;\n\n      // Explicitly bail out for these two. I don't know how to otherwise prevent\n      // the rest of this function from running and failing\n      if (['carpet', 'contourcarpet'].indexOf(trace._module.name) !== -1) continue;\n      if (trace.type === 'splom') {\n        // splom traces do not generate overlay subplots,\n        // it is safe to assume here splom traces correspond to the 0th subplot\n        subploti = 0;\n        subplotId = subplots[subploti];\n      } else {\n        subplotId = helpers.getSubplot(trace);\n        subploti = subplots.indexOf(subplotId);\n      }\n\n      // within one trace mode can sometimes be overridden\n      _mode = hovermode;\n      if (helpers.isUnifiedHover(_mode)) {\n        _mode = _mode.charAt(0);\n      }\n\n      // container for new point, also used to pass info into module.hoverPoints\n      pointData = {\n        // trace properties\n        cd: cd,\n        trace: trace,\n        xa: xaArray[subploti],\n        ya: yaArray[subploti],\n        // max distances for hover and spikes - for points that want to show but do not\n        // want to override other points, set distance/spikeDistance equal to max*Distance\n        // and it will not get filtered out but it will be guaranteed to have a greater\n        // distance than any point that calculated a real distance.\n        maxHoverDistance: hoverdistance,\n        maxSpikeDistance: spikedistance,\n        // point properties - override all of these\n        index: false,\n        // point index in trace - only used by plotly.js hoverdata consumers\n        distance: Math.min(distance, hoverdistance),\n        // pixel distance or pseudo-distance\n\n        // distance/pseudo-distance for spikes. This distance should always be calculated\n        // as if in \"closest\" mode, and should only be set if this point should\n        // generate a spike.\n        spikeDistance: Infinity,\n        // in some cases the spikes have different positioning from the hover label\n        // they don't need x0/x1, just one position\n        xSpike: undefined,\n        ySpike: undefined,\n        // where and how to display the hover label\n        color: Color.defaultLine,\n        // trace color\n        name: trace.name,\n        x0: undefined,\n        x1: undefined,\n        y0: undefined,\n        y1: undefined,\n        xLabelVal: undefined,\n        yLabelVal: undefined,\n        zLabelVal: undefined,\n        text: undefined\n      };\n\n      // add ref to subplot object (non-cartesian case)\n      if (fullLayout[subplotId]) {\n        pointData.subplot = fullLayout[subplotId]._subplot;\n      }\n      // add ref to splom scene\n      if (fullLayout._splomScenes && fullLayout._splomScenes[trace.uid]) {\n        pointData.scene = fullLayout._splomScenes[trace.uid];\n      }\n      closedataPreviousLength = hoverData.length;\n\n      // for a highlighting array, figure out what\n      // we're searching for with this element\n      if (_mode === 'array') {\n        var selection = evt[curvenum];\n        if ('pointNumber' in selection) {\n          pointData.index = selection.pointNumber;\n          _mode = 'closest';\n        } else {\n          _mode = '';\n          if ('xval' in selection) {\n            xval = selection.xval;\n            _mode = 'x';\n          }\n          if ('yval' in selection) {\n            yval = selection.yval;\n            _mode = _mode ? 'closest' : 'y';\n          }\n        }\n      } else if (customXVal !== undefined && customYVal !== undefined) {\n        xval = customXVal;\n        yval = customYVal;\n      } else {\n        xval = xvalArray[subploti];\n        yval = yvalArray[subploti];\n      }\n\n      // Now if there is range to look in, find the points to hover.\n      if (hoverdistance !== 0) {\n        if (trace._module && trace._module.hoverPoints) {\n          var newPoints = trace._module.hoverPoints(pointData, xval, yval, _mode, {\n            finiteRange: true,\n            hoverLayer: fullLayout._hoverlayer\n          });\n          if (newPoints) {\n            var newPoint;\n            for (var newPointNum = 0; newPointNum < newPoints.length; newPointNum++) {\n              newPoint = newPoints[newPointNum];\n              if (isNumeric(newPoint.x0) && isNumeric(newPoint.y0)) {\n                hoverData.push(cleanPoint(newPoint, hovermode));\n              }\n            }\n          }\n        } else {\n          Lib.log('Unrecognized trace type in hover:', trace);\n        }\n      }\n\n      // in closest mode, remove any existing (farther) points\n      // and don't look any farther than this latest point (or points, some\n      // traces like box & violin make multiple hover labels at once)\n      if (hovermode === 'closest' && hoverData.length > closedataPreviousLength) {\n        hoverData.splice(0, closedataPreviousLength);\n        distance = hoverData[0].distance;\n      }\n\n      // Now if there is range to look in, find the points to draw the spikelines\n      // Do it only if there is no hoverData\n      if (hasCartesian && spikedistance !== 0) {\n        if (hoverData.length === 0) {\n          pointData.distance = spikedistance;\n          pointData.index = false;\n          var closestPoints = trace._module.hoverPoints(pointData, xval, yval, 'closest', {\n            hoverLayer: fullLayout._hoverlayer\n          });\n          if (closestPoints) {\n            closestPoints = closestPoints.filter(function (point) {\n              // some hover points, like scatter fills, do not allow spikes,\n              // so will generate a hover point but without a valid spikeDistance\n              return point.spikeDistance <= spikedistance;\n            });\n          }\n          if (closestPoints && closestPoints.length) {\n            var tmpPoint;\n            var closestVPoints = closestPoints.filter(function (point) {\n              return point.xa.showspikes && point.xa.spikesnap !== 'hovered data';\n            });\n            if (closestVPoints.length) {\n              var closestVPt = closestVPoints[0];\n              if (isNumeric(closestVPt.x0) && isNumeric(closestVPt.y0)) {\n                tmpPoint = fillSpikePoint(closestVPt);\n                if (!spikePoints.vLinePoint || spikePoints.vLinePoint.spikeDistance > tmpPoint.spikeDistance) {\n                  spikePoints.vLinePoint = tmpPoint;\n                }\n              }\n            }\n            var closestHPoints = closestPoints.filter(function (point) {\n              return point.ya.showspikes && point.ya.spikesnap !== 'hovered data';\n            });\n            if (closestHPoints.length) {\n              var closestHPt = closestHPoints[0];\n              if (isNumeric(closestHPt.x0) && isNumeric(closestHPt.y0)) {\n                tmpPoint = fillSpikePoint(closestHPt);\n                if (!spikePoints.hLinePoint || spikePoints.hLinePoint.spikeDistance > tmpPoint.spikeDistance) {\n                  spikePoints.hLinePoint = tmpPoint;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  findHoverPoints();\n  function selectClosestPoint(pointsData, spikedistance, spikeOnWinning) {\n    var resultPoint = null;\n    var minDistance = Infinity;\n    var thisSpikeDistance;\n    for (var i = 0; i < pointsData.length; i++) {\n      thisSpikeDistance = pointsData[i].spikeDistance;\n      if (spikeOnWinning && i === 0) thisSpikeDistance = -Infinity;\n      if (thisSpikeDistance <= minDistance && thisSpikeDistance <= spikedistance) {\n        resultPoint = pointsData[i];\n        minDistance = thisSpikeDistance;\n      }\n    }\n    return resultPoint;\n  }\n  function fillSpikePoint(point) {\n    if (!point) return null;\n    return {\n      xa: point.xa,\n      ya: point.ya,\n      x: point.xSpike !== undefined ? point.xSpike : (point.x0 + point.x1) / 2,\n      y: point.ySpike !== undefined ? point.ySpike : (point.y0 + point.y1) / 2,\n      distance: point.distance,\n      spikeDistance: point.spikeDistance,\n      curveNumber: point.trace.index,\n      color: point.color,\n      pointNumber: point.index\n    };\n  }\n  var spikelineOpts = {\n    fullLayout: fullLayout,\n    container: fullLayout._hoverlayer,\n    event: evt\n  };\n  var oldspikepoints = gd._spikepoints;\n  var newspikepoints = {\n    vLinePoint: spikePoints.vLinePoint,\n    hLinePoint: spikePoints.hLinePoint\n  };\n  gd._spikepoints = newspikepoints;\n  var sortHoverData = function () {\n    hoverData.sort(function (d1, d2) {\n      return d1.distance - d2.distance;\n    });\n\n    // move period positioned points and box/bar-like traces to the end of the list\n    hoverData = orderRangePoints(hoverData, hovermode);\n  };\n  sortHoverData();\n  var axLetter = hovermode.charAt(0);\n  var spikeOnWinning = (axLetter === 'x' || axLetter === 'y') && hoverData[0] && cartesianScatterPoints[hoverData[0].trace.type];\n\n  // Now if it is not restricted by spikedistance option, set the points to draw the spikelines\n  if (hasCartesian && spikedistance !== 0) {\n    if (hoverData.length !== 0) {\n      var tmpHPointData = hoverData.filter(function (point) {\n        return point.ya.showspikes;\n      });\n      var tmpHPoint = selectClosestPoint(tmpHPointData, spikedistance, spikeOnWinning);\n      spikePoints.hLinePoint = fillSpikePoint(tmpHPoint);\n      var tmpVPointData = hoverData.filter(function (point) {\n        return point.xa.showspikes;\n      });\n      var tmpVPoint = selectClosestPoint(tmpVPointData, spikedistance, spikeOnWinning);\n      spikePoints.vLinePoint = fillSpikePoint(tmpVPoint);\n    }\n  }\n\n  // if hoverData is empty check for the spikes to draw and quit if there are none\n  if (hoverData.length === 0) {\n    var result = dragElement.unhoverRaw(gd, evt);\n    if (hasCartesian && (spikePoints.hLinePoint !== null || spikePoints.vLinePoint !== null)) {\n      if (spikesChanged(oldspikepoints)) {\n        createSpikelines(gd, spikePoints, spikelineOpts);\n      }\n    }\n    return result;\n  }\n  if (hasCartesian) {\n    if (spikesChanged(oldspikepoints)) {\n      createSpikelines(gd, spikePoints, spikelineOpts);\n    }\n  }\n  if (helpers.isXYhover(_mode) && hoverData[0].length !== 0 && hoverData[0].trace.type !== 'splom' // TODO: add support for splom\n  ) {\n    // pick winning point\n    var winningPoint = hoverData[0];\n    // discard other points\n    if (multipleHoverPoints[winningPoint.trace.type]) {\n      hoverData = hoverData.filter(function (d) {\n        return d.trace.index === winningPoint.trace.index;\n      });\n    } else {\n      hoverData = [winningPoint];\n    }\n    var initLen = hoverData.length;\n    var winX = getCoord('x', winningPoint, fullLayout);\n    var winY = getCoord('y', winningPoint, fullLayout);\n\n    // in compare mode, select every point at position\n    findHoverPoints(winX, winY);\n    var finalPoints = [];\n    var seen = {};\n    var id = 0;\n    var insert = function (newHd) {\n      var key = multipleHoverPoints[newHd.trace.type] ? hoverDataKey(newHd) : newHd.trace.index;\n      if (!seen[key]) {\n        id++;\n        seen[key] = id;\n        finalPoints.push(newHd);\n      } else {\n        var oldId = seen[key] - 1;\n        var oldHd = finalPoints[oldId];\n        if (oldId > 0 && Math.abs(newHd.distance) < Math.abs(oldHd.distance)) {\n          // replace with closest\n          finalPoints[oldId] = newHd;\n        }\n      }\n    };\n    var k;\n    // insert the winnig point(s) first\n    for (k = 0; k < initLen; k++) {\n      insert(hoverData[k]);\n    }\n    // override from the end\n    for (k = hoverData.length - 1; k > initLen - 1; k--) {\n      insert(hoverData[k]);\n    }\n    hoverData = finalPoints;\n    sortHoverData();\n  }\n\n  // lastly, emit custom hover/unhover events\n  var oldhoverdata = gd._hoverdata;\n  var newhoverdata = [];\n  var gTop = getTopOffset(gd);\n  var gLeft = getLeftOffset(gd);\n\n  // pull out just the data that's useful to\n  // other people and send it to the event\n  for (itemnum = 0; itemnum < hoverData.length; itemnum++) {\n    var pt = hoverData[itemnum];\n    var eventData = helpers.makeEventData(pt, pt.trace, pt.cd);\n    if (pt.hovertemplate !== false) {\n      var ht = false;\n      if (pt.cd[pt.index] && pt.cd[pt.index].ht) {\n        ht = pt.cd[pt.index].ht;\n      }\n      pt.hovertemplate = ht || pt.trace.hovertemplate || false;\n    }\n    if (pt.xa && pt.ya) {\n      var _x0 = pt.x0 + pt.xa._offset;\n      var _x1 = pt.x1 + pt.xa._offset;\n      var _y0 = pt.y0 + pt.ya._offset;\n      var _y1 = pt.y1 + pt.ya._offset;\n      var x0 = Math.min(_x0, _x1);\n      var x1 = Math.max(_x0, _x1);\n      var y0 = Math.min(_y0, _y1);\n      var y1 = Math.max(_y0, _y1);\n      eventData.bbox = {\n        x0: x0 + gLeft,\n        x1: x1 + gLeft,\n        y0: y0 + gTop,\n        y1: y1 + gTop\n      };\n    }\n    pt.eventData = [eventData];\n    newhoverdata.push(eventData);\n  }\n  gd._hoverdata = newhoverdata;\n  var rotateLabels = hovermode === 'y' && (searchData.length > 1 || hoverData.length > 1) || hovermode === 'closest' && hasOneHorizontalTrace && hoverData.length > 1;\n  var bgColor = Color.combine(fullLayout.plot_bgcolor || Color.background, fullLayout.paper_bgcolor);\n  var hoverText = createHoverText(hoverData, {\n    gd: gd,\n    hovermode: hovermode,\n    rotateLabels: rotateLabels,\n    bgColor: bgColor,\n    container: fullLayout._hoverlayer,\n    outerContainer: fullLayout._paper.node(),\n    commonLabelOpts: fullLayout.hoverlabel,\n    hoverdistance: fullLayout.hoverdistance\n  });\n  var hoverLabels = hoverText.hoverLabels;\n  if (!helpers.isUnifiedHover(hovermode)) {\n    hoverAvoidOverlaps(hoverLabels, rotateLabels, fullLayout, hoverText.commonLabelBoundingBox);\n    alignHoverText(hoverLabels, rotateLabels, fullLayout._invScaleX, fullLayout._invScaleY);\n  } // TODO: tagName hack is needed to appease geo.js's hack of using eventTarget=true\n  // we should improve the \"fx\" API so other plots can use it without these hack.\n  if (eventTarget && eventTarget.tagName) {\n    var hasClickToShow = Registry.getComponentMethod('annotations', 'hasClickToShow')(gd, newhoverdata);\n    overrideCursor(d3.select(eventTarget), hasClickToShow ? 'pointer' : '');\n  }\n\n  // don't emit events if called manually\n  if (!eventTarget || noHoverEvent || !hoverChanged(gd, evt, oldhoverdata)) return;\n  if (oldhoverdata) {\n    gd.emit('plotly_unhover', {\n      event: evt,\n      points: oldhoverdata\n    });\n  }\n  gd.emit('plotly_hover', {\n    event: evt,\n    points: gd._hoverdata,\n    xaxes: xaArray,\n    yaxes: yaArray,\n    xvals: xvalArray,\n    yvals: yvalArray\n  });\n}\nfunction hoverDataKey(d) {\n  return [d.trace.index, d.index, d.x0, d.y0, d.name, d.attr, d.xa ? d.xa._id : '', d.ya ? d.ya._id : ''].join(',');\n}\nvar EXTRA_STRING_REGEX = /<extra>([\\s\\S]*)<\\/extra>/;\nfunction createHoverText(hoverData, opts) {\n  var gd = opts.gd;\n  var fullLayout = gd._fullLayout;\n  var hovermode = opts.hovermode;\n  var rotateLabels = opts.rotateLabels;\n  var bgColor = opts.bgColor;\n  var container = opts.container;\n  var outerContainer = opts.outerContainer;\n  var commonLabelOpts = opts.commonLabelOpts || {};\n  // Early exit if no labels are drawn\n  if (hoverData.length === 0) return [[]];\n\n  // opts.fontFamily/Size are used for the common label\n  // and as defaults for each hover label, though the individual labels\n  // can override this.\n  var fontFamily = opts.fontFamily || constants.HOVERFONT;\n  var fontSize = opts.fontSize || constants.HOVERFONTSIZE;\n  var c0 = hoverData[0];\n  var xa = c0.xa;\n  var ya = c0.ya;\n  var axLetter = hovermode.charAt(0);\n  var axLabel = axLetter + 'Label';\n  var t0 = c0[axLabel];\n\n  // search in array for the label\n  if (t0 === undefined && xa.type === 'multicategory') {\n    for (var q = 0; q < hoverData.length; q++) {\n      t0 = hoverData[q][axLabel];\n      if (t0 !== undefined) break;\n    }\n  }\n  var outerContainerBB = getBoundingClientRect(gd, outerContainer);\n  var outerTop = outerContainerBB.top;\n  var outerWidth = outerContainerBB.width;\n  var outerHeight = outerContainerBB.height;\n\n  // show the common label, if any, on the axis\n  // never show a common label in array mode,\n  // even if sometimes there could be one\n  var showCommonLabel = t0 !== undefined && c0.distance <= opts.hoverdistance && (hovermode === 'x' || hovermode === 'y');\n\n  // all hover traces hoverinfo must contain the hovermode\n  // to have common labels\n  if (showCommonLabel) {\n    var allHaveZ = true;\n    var i, traceHoverinfo;\n    for (i = 0; i < hoverData.length; i++) {\n      if (allHaveZ && hoverData[i].zLabel === undefined) allHaveZ = false;\n      traceHoverinfo = hoverData[i].hoverinfo || hoverData[i].trace.hoverinfo;\n      if (traceHoverinfo) {\n        var parts = Array.isArray(traceHoverinfo) ? traceHoverinfo : traceHoverinfo.split('+');\n        if (parts.indexOf('all') === -1 && parts.indexOf(hovermode) === -1) {\n          showCommonLabel = false;\n          break;\n        }\n      }\n    }\n\n    // xyz labels put all info in their main label, so have no need of a common label\n    if (allHaveZ) showCommonLabel = false;\n  }\n  var commonLabel = container.selectAll('g.axistext').data(showCommonLabel ? [0] : []);\n  commonLabel.enter().append('g').classed('axistext', true);\n  commonLabel.exit().remove();\n\n  // set rect (without arrow) behind label below for later collision detection\n  var commonLabelRect = {\n    minX: 0,\n    maxX: 0,\n    minY: 0,\n    maxY: 0\n  };\n  commonLabel.each(function () {\n    var label = d3.select(this);\n    var lpath = Lib.ensureSingle(label, 'path', '', function (s) {\n      s.style({\n        'stroke-width': '1px'\n      });\n    });\n    var ltext = Lib.ensureSingle(label, 'text', '', function (s) {\n      // prohibit tex interpretation until we can handle\n      // tex and regular text together\n      s.attr('data-notex', 1);\n    });\n    var commonBgColor = commonLabelOpts.bgcolor || Color.defaultLine;\n    var commonStroke = commonLabelOpts.bordercolor || Color.contrast(commonBgColor);\n    var contrastColor = Color.contrast(commonBgColor);\n    var commonLabelFont = {\n      family: commonLabelOpts.font.family || fontFamily,\n      size: commonLabelOpts.font.size || fontSize,\n      color: commonLabelOpts.font.color || contrastColor\n    };\n    lpath.style({\n      fill: commonBgColor,\n      stroke: commonStroke\n    });\n    ltext.text(t0).call(Drawing.font, commonLabelFont).call(svgTextUtils.positionText, 0, 0).call(svgTextUtils.convertToTspans, gd);\n    label.attr('transform', '');\n    var tbb = getBoundingClientRect(gd, ltext.node());\n    var lx, ly;\n    if (hovermode === 'x') {\n      var topsign = xa.side === 'top' ? '-' : '';\n      ltext.attr('text-anchor', 'middle').call(svgTextUtils.positionText, 0, xa.side === 'top' ? outerTop - tbb.bottom - HOVERARROWSIZE - HOVERTEXTPAD : outerTop - tbb.top + HOVERARROWSIZE + HOVERTEXTPAD);\n      lx = xa._offset + (c0.x0 + c0.x1) / 2;\n      ly = ya._offset + (xa.side === 'top' ? 0 : ya._length);\n      var halfWidth = tbb.width / 2 + HOVERTEXTPAD;\n      if (lx < halfWidth) {\n        lx = halfWidth;\n        lpath.attr('d', 'M-' + (halfWidth - HOVERARROWSIZE) + ',0' + 'L-' + (halfWidth - HOVERARROWSIZE * 2) + ',' + topsign + HOVERARROWSIZE + 'H' + halfWidth + 'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) + 'H-' + halfWidth + 'V' + topsign + HOVERARROWSIZE + 'Z');\n      } else if (lx > fullLayout.width - halfWidth) {\n        lx = fullLayout.width - halfWidth;\n        lpath.attr('d', 'M' + (halfWidth - HOVERARROWSIZE) + ',0' + 'L' + halfWidth + ',' + topsign + HOVERARROWSIZE + 'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) + 'H-' + halfWidth + 'V' + topsign + HOVERARROWSIZE + 'H' + (halfWidth - HOVERARROWSIZE * 2) + 'Z');\n      } else {\n        lpath.attr('d', 'M0,0' + 'L' + HOVERARROWSIZE + ',' + topsign + HOVERARROWSIZE + 'H' + halfWidth + 'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) + 'H-' + halfWidth + 'V' + topsign + HOVERARROWSIZE + 'H-' + HOVERARROWSIZE + 'Z');\n      }\n      commonLabelRect.minX = lx - halfWidth;\n      commonLabelRect.maxX = lx + halfWidth;\n      if (xa.side === 'top') {\n        // label on negative y side\n        commonLabelRect.minY = ly - (HOVERTEXTPAD * 2 + tbb.height);\n        commonLabelRect.maxY = ly - HOVERTEXTPAD;\n      } else {\n        commonLabelRect.minY = ly + HOVERTEXTPAD;\n        commonLabelRect.maxY = ly + (HOVERTEXTPAD * 2 + tbb.height);\n      }\n    } else {\n      var anchor;\n      var sgn;\n      var leftsign;\n      if (ya.side === 'right') {\n        anchor = 'start';\n        sgn = 1;\n        leftsign = '';\n        lx = xa._offset + xa._length;\n      } else {\n        anchor = 'end';\n        sgn = -1;\n        leftsign = '-';\n        lx = xa._offset;\n      }\n      ly = ya._offset + (c0.y0 + c0.y1) / 2;\n      ltext.attr('text-anchor', anchor);\n      lpath.attr('d', 'M0,0' + 'L' + leftsign + HOVERARROWSIZE + ',' + HOVERARROWSIZE + 'V' + (HOVERTEXTPAD + tbb.height / 2) + 'h' + leftsign + (HOVERTEXTPAD * 2 + tbb.width) + 'V-' + (HOVERTEXTPAD + tbb.height / 2) + 'H' + leftsign + HOVERARROWSIZE + 'V-' + HOVERARROWSIZE + 'Z');\n      commonLabelRect.minY = ly - (HOVERTEXTPAD + tbb.height / 2);\n      commonLabelRect.maxY = ly + (HOVERTEXTPAD + tbb.height / 2);\n      if (ya.side === 'right') {\n        commonLabelRect.minX = lx + HOVERARROWSIZE;\n        commonLabelRect.maxX = lx + HOVERARROWSIZE + (HOVERTEXTPAD * 2 + tbb.width);\n      } else {\n        // label on negative x side\n        commonLabelRect.minX = lx - HOVERARROWSIZE - (HOVERTEXTPAD * 2 + tbb.width);\n        commonLabelRect.maxX = lx - HOVERARROWSIZE;\n      }\n      var halfHeight = tbb.height / 2;\n      var lty = outerTop - tbb.top - halfHeight;\n      var clipId = 'clip' + fullLayout._uid + 'commonlabel' + ya._id;\n      var clipPath;\n      if (lx < tbb.width + 2 * HOVERTEXTPAD + HOVERARROWSIZE) {\n        clipPath = 'M-' + (HOVERARROWSIZE + HOVERTEXTPAD) + '-' + halfHeight + 'h-' + (tbb.width - HOVERTEXTPAD) + 'V' + halfHeight + 'h' + (tbb.width - HOVERTEXTPAD) + 'Z';\n        var ltx = tbb.width - lx + HOVERTEXTPAD;\n        svgTextUtils.positionText(ltext, ltx, lty);\n\n        // shift each line (except the longest) so that start-of-line\n        // is always visible\n        if (anchor === 'end') {\n          ltext.selectAll('tspan').each(function () {\n            var s = d3.select(this);\n            var dummy = Drawing.tester.append('text').text(s.text()).call(Drawing.font, commonLabelFont);\n            var dummyBB = getBoundingClientRect(gd, dummy.node());\n            if (Math.round(dummyBB.width) < Math.round(tbb.width)) {\n              s.attr('x', ltx - dummyBB.width);\n            }\n            dummy.remove();\n          });\n        }\n      } else {\n        svgTextUtils.positionText(ltext, sgn * (HOVERTEXTPAD + HOVERARROWSIZE), lty);\n        clipPath = null;\n      }\n      var textClip = fullLayout._topclips.selectAll('#' + clipId).data(clipPath ? [0] : []);\n      textClip.enter().append('clipPath').attr('id', clipId).append('path');\n      textClip.exit().remove();\n      textClip.select('path').attr('d', clipPath);\n      Drawing.setClipUrl(ltext, clipPath ? clipId : null, gd);\n    }\n    label.attr('transform', strTranslate(lx, ly));\n  });\n\n  // Show a single hover label\n  if (helpers.isUnifiedHover(hovermode)) {\n    // Delete leftover hover labels from other hovermodes\n    container.selectAll('g.hovertext').remove();\n    var groupedHoverData = hoverData.filter(function (data) {\n      return data.hoverinfo !== 'none';\n    });\n    // Return early if nothing is hovered on\n    if (groupedHoverData.length === 0) return;\n\n    // mock legend\n    var hoverlabel = fullLayout.hoverlabel;\n    var font = hoverlabel.font;\n    var mockLayoutIn = {\n      showlegend: true,\n      legend: {\n        title: {\n          text: t0,\n          font: font\n        },\n        font: font,\n        bgcolor: hoverlabel.bgcolor,\n        bordercolor: hoverlabel.bordercolor,\n        borderwidth: 1,\n        tracegroupgap: 7,\n        traceorder: fullLayout.legend ? fullLayout.legend.traceorder : undefined,\n        orientation: 'v'\n      }\n    };\n    var mockLayoutOut = {\n      font: font\n    };\n    legendSupplyDefaults(mockLayoutIn, mockLayoutOut, gd._fullData);\n    var mockLegend = mockLayoutOut.legend;\n\n    // prepare items for the legend\n    mockLegend.entries = [];\n    for (var j = 0; j < groupedHoverData.length; j++) {\n      var pt = groupedHoverData[j];\n      if (pt.hoverinfo === 'none') continue;\n      var texts = getHoverLabelText(pt, true, hovermode, fullLayout, t0);\n      var text = texts[0];\n      var name = texts[1];\n      pt.name = name;\n      if (name !== '') {\n        pt.text = name + ' : ' + text;\n      } else {\n        pt.text = text;\n      }\n\n      // pass through marker's calcdata to style legend items\n      var cd = pt.cd[pt.index];\n      if (cd) {\n        if (cd.mc) pt.mc = cd.mc;\n        if (cd.mcc) pt.mc = cd.mcc;\n        if (cd.mlc) pt.mlc = cd.mlc;\n        if (cd.mlcc) pt.mlc = cd.mlcc;\n        if (cd.mlw) pt.mlw = cd.mlw;\n        if (cd.mrc) pt.mrc = cd.mrc;\n        if (cd.dir) pt.dir = cd.dir;\n      }\n      pt._distinct = true;\n      mockLegend.entries.push([pt]);\n    }\n    mockLegend.entries.sort(function (a, b) {\n      return a[0].trace.index - b[0].trace.index;\n    });\n    mockLegend.layer = container;\n\n    // Draw unified hover label\n    mockLegend._inHover = true;\n    mockLegend._groupTitleFont = hoverlabel.grouptitlefont;\n    legendDraw(gd, mockLegend);\n\n    // Position the hover\n    var legendContainer = container.select('g.legend');\n    var tbb = getBoundingClientRect(gd, legendContainer.node());\n    var tWidth = tbb.width + 2 * HOVERTEXTPAD;\n    var tHeight = tbb.height + 2 * HOVERTEXTPAD;\n    var winningPoint = groupedHoverData[0];\n    var avgX = (winningPoint.x0 + winningPoint.x1) / 2;\n    var avgY = (winningPoint.y0 + winningPoint.y1) / 2;\n    // When a scatter (or e.g. heatmap) point wins, it's OK for the hovelabel to occlude the bar and other points.\n    var pointWon = !(Registry.traceIs(winningPoint.trace, 'bar-like') || Registry.traceIs(winningPoint.trace, 'box-violin'));\n    var lyBottom, lyTop;\n    if (axLetter === 'y') {\n      if (pointWon) {\n        lyTop = avgY - HOVERTEXTPAD;\n        lyBottom = avgY + HOVERTEXTPAD;\n      } else {\n        lyTop = Math.min.apply(null, groupedHoverData.map(function (c) {\n          return Math.min(c.y0, c.y1);\n        }));\n        lyBottom = Math.max.apply(null, groupedHoverData.map(function (c) {\n          return Math.max(c.y0, c.y1);\n        }));\n      }\n    } else {\n      lyTop = lyBottom = Lib.mean(groupedHoverData.map(function (c) {\n        return (c.y0 + c.y1) / 2;\n      })) - tHeight / 2;\n    }\n    var lxRight, lxLeft;\n    if (axLetter === 'x') {\n      if (pointWon) {\n        lxRight = avgX + HOVERTEXTPAD;\n        lxLeft = avgX - HOVERTEXTPAD;\n      } else {\n        lxRight = Math.max.apply(null, groupedHoverData.map(function (c) {\n          return Math.max(c.x0, c.x1);\n        }));\n        lxLeft = Math.min.apply(null, groupedHoverData.map(function (c) {\n          return Math.min(c.x0, c.x1);\n        }));\n      }\n    } else {\n      lxRight = lxLeft = Lib.mean(groupedHoverData.map(function (c) {\n        return (c.x0 + c.x1) / 2;\n      })) - tWidth / 2;\n    }\n    var xOffset = xa._offset;\n    var yOffset = ya._offset;\n    lyBottom += yOffset;\n    lxRight += xOffset;\n    lxLeft += xOffset - tWidth;\n    lyTop += yOffset - tHeight;\n    var lx, ly; // top and left positions of the hover box\n\n    // horizontal alignment to end up on screen\n    if (lxRight + tWidth < outerWidth && lxRight >= 0) {\n      lx = lxRight;\n    } else if (lxLeft + tWidth < outerWidth && lxLeft >= 0) {\n      lx = lxLeft;\n    } else if (xOffset + tWidth < outerWidth) {\n      lx = xOffset; // subplot left corner\n    } else {\n      // closest left or right side of the paper\n      if (lxRight - avgX < avgX - lxLeft + tWidth) {\n        lx = outerWidth - tWidth;\n      } else {\n        lx = 0;\n      }\n    }\n    lx += HOVERTEXTPAD;\n\n    // vertical alignement to end up on screen\n    if (lyBottom + tHeight < outerHeight && lyBottom >= 0) {\n      ly = lyBottom;\n    } else if (lyTop + tHeight < outerHeight && lyTop >= 0) {\n      ly = lyTop;\n    } else if (yOffset + tHeight < outerHeight) {\n      ly = yOffset; // subplot top corner\n    } else {\n      // closest top or bottom side of the paper\n      if (lyBottom - avgY < avgY - lyTop + tHeight) {\n        ly = outerHeight - tHeight;\n      } else {\n        ly = 0;\n      }\n    }\n    ly += HOVERTEXTPAD;\n    legendContainer.attr('transform', strTranslate(lx - 1, ly - 1));\n    return legendContainer;\n  }\n\n  // show all the individual labels\n\n  // first create the objects\n  var hoverLabels = container.selectAll('g.hovertext').data(hoverData, function (d) {\n    // N.B. when multiple items have the same result key-function value,\n    // only the first of those items in hoverData gets rendered\n    return hoverDataKey(d);\n  });\n  hoverLabels.enter().append('g').classed('hovertext', true).each(function () {\n    var g = d3.select(this);\n    // trace name label (rect and text.name)\n    g.append('rect').call(Color.fill, Color.addOpacity(bgColor, 0.8));\n    g.append('text').classed('name', true);\n    // trace data label (path and text.nums)\n    g.append('path').style('stroke-width', '1px');\n    g.append('text').classed('nums', true).call(Drawing.font, fontFamily, fontSize);\n  });\n  hoverLabels.exit().remove();\n\n  // then put the text in, position the pointer to the data,\n  // and figure out sizes\n  hoverLabels.each(function (d) {\n    var g = d3.select(this).attr('transform', '');\n    var dColor = d.color;\n    if (Array.isArray(dColor)) {\n      dColor = dColor[d.eventData[0].pointNumber];\n    }\n\n    // combine possible non-opaque trace color with bgColor\n    var color0 = d.bgcolor || dColor;\n    // color for 'nums' part of the label\n    var numsColor = Color.combine(Color.opacity(color0) ? color0 : Color.defaultLine, bgColor);\n    // color for 'name' part of the label\n    var nameColor = Color.combine(Color.opacity(dColor) ? dColor : Color.defaultLine, bgColor);\n    // find a contrasting color for border and text\n    var contrastColor = d.borderColor || Color.contrast(numsColor);\n    var texts = getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g);\n    var text = texts[0];\n    var name = texts[1];\n\n    // main label\n    var tx = g.select('text.nums').call(Drawing.font, d.fontFamily || fontFamily, d.fontSize || fontSize, d.fontColor || contrastColor).text(text).attr('data-notex', 1).call(svgTextUtils.positionText, 0, 0).call(svgTextUtils.convertToTspans, gd);\n    var tx2 = g.select('text.name');\n    var tx2width = 0;\n    var tx2height = 0;\n\n    // secondary label for non-empty 'name'\n    if (name && name !== text) {\n      tx2.call(Drawing.font, d.fontFamily || fontFamily, d.fontSize || fontSize, nameColor).text(name).attr('data-notex', 1).call(svgTextUtils.positionText, 0, 0).call(svgTextUtils.convertToTspans, gd);\n      var t2bb = getBoundingClientRect(gd, tx2.node());\n      tx2width = t2bb.width + 2 * HOVERTEXTPAD;\n      tx2height = t2bb.height + 2 * HOVERTEXTPAD;\n    } else {\n      tx2.remove();\n      g.select('rect').remove();\n    }\n    g.select('path').style({\n      fill: numsColor,\n      stroke: contrastColor\n    });\n    var htx = d.xa._offset + (d.x0 + d.x1) / 2;\n    var hty = d.ya._offset + (d.y0 + d.y1) / 2;\n    var dx = Math.abs(d.x1 - d.x0);\n    var dy = Math.abs(d.y1 - d.y0);\n    var tbb = getBoundingClientRect(gd, tx.node());\n    var tbbWidth = tbb.width / fullLayout._invScaleX;\n    var tbbHeight = tbb.height / fullLayout._invScaleY;\n    d.ty0 = (outerTop - tbb.top) / fullLayout._invScaleY;\n    d.bx = tbbWidth + 2 * HOVERTEXTPAD;\n    d.by = Math.max(tbbHeight + 2 * HOVERTEXTPAD, tx2height);\n    d.anchor = 'start';\n    d.txwidth = tbbWidth;\n    d.tx2width = tx2width;\n    d.offset = 0;\n    var txTotalWidth = (tbbWidth + HOVERARROWSIZE + HOVERTEXTPAD + tx2width) * fullLayout._invScaleX;\n    var anchorStartOK, anchorEndOK;\n    if (rotateLabels) {\n      d.pos = htx;\n      anchorStartOK = hty + dy / 2 + txTotalWidth <= outerHeight;\n      anchorEndOK = hty - dy / 2 - txTotalWidth >= 0;\n      if ((d.idealAlign === 'top' || !anchorStartOK) && anchorEndOK) {\n        hty -= dy / 2;\n        d.anchor = 'end';\n      } else if (anchorStartOK) {\n        hty += dy / 2;\n        d.anchor = 'start';\n      } else {\n        d.anchor = 'middle';\n      }\n      d.crossPos = hty;\n    } else {\n      d.pos = hty;\n      anchorStartOK = htx + dx / 2 + txTotalWidth <= outerWidth;\n      anchorEndOK = htx - dx / 2 - txTotalWidth >= 0;\n      if ((d.idealAlign === 'left' || !anchorStartOK) && anchorEndOK) {\n        htx -= dx / 2;\n        d.anchor = 'end';\n      } else if (anchorStartOK) {\n        htx += dx / 2;\n        d.anchor = 'start';\n      } else {\n        d.anchor = 'middle';\n        var txHalfWidth = txTotalWidth / 2;\n        var overflowR = htx + txHalfWidth - outerWidth;\n        var overflowL = htx - txHalfWidth;\n        if (overflowR > 0) htx -= overflowR;\n        if (overflowL < 0) htx += -overflowL;\n      }\n      d.crossPos = htx;\n    }\n    tx.attr('text-anchor', d.anchor);\n    if (tx2width) tx2.attr('text-anchor', d.anchor);\n    g.attr('transform', strTranslate(htx, hty) + (rotateLabels ? strRotate(YANGLE) : ''));\n  });\n  return {\n    hoverLabels: hoverLabels,\n    commonLabelBoundingBox: commonLabelRect\n  };\n}\nfunction getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g) {\n  var name = '';\n  var text = '';\n  // to get custom 'name' labels pass cleanPoint\n  if (d.nameOverride !== undefined) d.name = d.nameOverride;\n  if (d.name) {\n    if (d.trace._meta) {\n      d.name = Lib.templateString(d.name, d.trace._meta);\n    }\n    name = plainText(d.name, d.nameLength);\n  }\n  var h0 = hovermode.charAt(0);\n  var h1 = h0 === 'x' ? 'y' : 'x';\n  if (d.zLabel !== undefined) {\n    if (d.xLabel !== undefined) text += 'x: ' + d.xLabel + '<br>';\n    if (d.yLabel !== undefined) text += 'y: ' + d.yLabel + '<br>';\n    if (d.trace.type !== 'choropleth' && d.trace.type !== 'choroplethmapbox') {\n      text += (text ? 'z: ' : '') + d.zLabel;\n    }\n  } else if (showCommonLabel && d[h0 + 'Label'] === t0) {\n    text = d[h1 + 'Label'] || '';\n  } else if (d.xLabel === undefined) {\n    if (d.yLabel !== undefined && d.trace.type !== 'scattercarpet') {\n      text = d.yLabel;\n    }\n  } else if (d.yLabel === undefined) text = d.xLabel;else text = '(' + d.xLabel + ', ' + d.yLabel + ')';\n  if ((d.text || d.text === 0) && !Array.isArray(d.text)) {\n    text += (text ? '<br>' : '') + d.text;\n  }\n\n  // used by other modules (initially just ternary) that\n  // manage their own hoverinfo independent of cleanPoint\n  // the rest of this will still apply, so such modules\n  // can still put things in (x|y|z)Label, text, and name\n  // and hoverinfo will still determine their visibility\n  if (d.extraText !== undefined) text += (text ? '<br>' : '') + d.extraText;\n\n  // if 'text' is empty at this point,\n  // and hovertemplate is not defined,\n  // put 'name' in main label and don't show secondary label\n  if (g && text === '' && !d.hovertemplate) {\n    // if 'name' is also empty, remove entire label\n    if (name === '') g.remove();\n    text = name;\n  }\n\n  // hovertemplate\n  var hovertemplate = d.hovertemplate || false;\n  if (hovertemplate) {\n    var labels = d.hovertemplateLabels || d;\n    if (d[h0 + 'Label'] !== t0) {\n      labels[h0 + 'other'] = labels[h0 + 'Val'];\n      labels[h0 + 'otherLabel'] = labels[h0 + 'Label'];\n    }\n    text = Lib.hovertemplateString(hovertemplate, labels, fullLayout._d3locale, d.eventData[0] || {}, d.trace._meta);\n    text = text.replace(EXTRA_STRING_REGEX, function (match, extra) {\n      // assign name for secondary text label\n      name = plainText(extra, d.nameLength);\n      // remove from main text label\n      return '';\n    });\n  }\n  return [text, name];\n}\n\n// Make groups of touching points, and within each group\n// move each point so that no labels overlap, but the average\n// label position is the same as it was before moving. Incidentally,\n// this is equivalent to saying all the labels are on equal linear\n// springs about their initial position. Initially, each point is\n// its own group, but as we find overlaps we will clump the points.\n//\n// Also, there are hard constraints at the edges of the graphs,\n// that push all groups to the middle so they are visible. I don't\n// know what happens if the group spans all the way from one edge to\n// the other, though it hardly matters - there's just too much\n// information then.\nfunction hoverAvoidOverlaps(hoverLabels, rotateLabels, fullLayout, commonLabelBoundingBox) {\n  var axKey = rotateLabels ? 'xa' : 'ya';\n  var crossAxKey = rotateLabels ? 'ya' : 'xa';\n  var nummoves = 0;\n  var axSign = 1;\n  var nLabels = hoverLabels.size();\n\n  // make groups of touching points\n  var pointgroups = new Array(nLabels);\n  var k = 0;\n\n  // get extent of axis hover label\n  var axisLabelMinX = commonLabelBoundingBox.minX;\n  var axisLabelMaxX = commonLabelBoundingBox.maxX;\n  var axisLabelMinY = commonLabelBoundingBox.minY;\n  var axisLabelMaxY = commonLabelBoundingBox.maxY;\n  var pX = function (x) {\n    return x * fullLayout._invScaleX;\n  };\n  var pY = function (y) {\n    return y * fullLayout._invScaleY;\n  };\n  hoverLabels.each(function (d) {\n    var ax = d[axKey];\n    var crossAx = d[crossAxKey];\n    var axIsX = ax._id.charAt(0) === 'x';\n    var rng = ax.range;\n    if (k === 0 && rng && rng[0] > rng[1] !== axIsX) {\n      axSign = -1;\n    }\n    var pmin = 0;\n    var pmax = axIsX ? fullLayout.width : fullLayout.height;\n    // in hovermode avoid overlap between hover labels and axis label\n    if (fullLayout.hovermode === 'x' || fullLayout.hovermode === 'y') {\n      // extent of rect behind hover label on cross axis:\n      var offsets = getHoverLabelOffsets(d, rotateLabels);\n      var anchor = d.anchor;\n      var horzSign = anchor === 'end' ? -1 : 1;\n      var labelMin;\n      var labelMax;\n      if (anchor === 'middle') {\n        // use extent of centered rect either on x or y axis depending on current axis\n        labelMin = d.crossPos + (axIsX ? pY(offsets.y - d.by / 2) : pX(d.bx / 2 + d.tx2width / 2));\n        labelMax = labelMin + (axIsX ? pY(d.by) : pX(d.bx));\n      } else {\n        // use extend of path (see alignHoverText function) without arrow\n        if (axIsX) {\n          labelMin = d.crossPos + pY(HOVERARROWSIZE + offsets.y) - pY(d.by / 2 - HOVERARROWSIZE);\n          labelMax = labelMin + pY(d.by);\n        } else {\n          var startX = pX(horzSign * HOVERARROWSIZE + offsets.x);\n          var endX = startX + pX(horzSign * d.bx);\n          labelMin = d.crossPos + Math.min(startX, endX);\n          labelMax = d.crossPos + Math.max(startX, endX);\n        }\n      }\n      if (axIsX) {\n        if (axisLabelMinY !== undefined && axisLabelMaxY !== undefined && Math.min(labelMax, axisLabelMaxY) - Math.max(labelMin, axisLabelMinY) > 1) {\n          // has at least 1 pixel overlap with axis label\n          if (crossAx.side === 'left') {\n            pmin = crossAx._mainLinePosition;\n            pmax = fullLayout.width;\n          } else {\n            pmax = crossAx._mainLinePosition;\n          }\n        }\n      } else {\n        if (axisLabelMinX !== undefined && axisLabelMaxX !== undefined && Math.min(labelMax, axisLabelMaxX) - Math.max(labelMin, axisLabelMinX) > 1) {\n          // has at least 1 pixel overlap with axis label\n          if (crossAx.side === 'top') {\n            pmin = crossAx._mainLinePosition;\n            pmax = fullLayout.height;\n          } else {\n            pmax = crossAx._mainLinePosition;\n          }\n        }\n      }\n    }\n    pointgroups[k++] = [{\n      datum: d,\n      traceIndex: d.trace.index,\n      dp: 0,\n      pos: d.pos,\n      posref: d.posref,\n      size: d.by * (axIsX ? YFACTOR : 1) / 2,\n      pmin: pmin,\n      pmax: pmax\n    }];\n  });\n  pointgroups.sort(function (a, b) {\n    return a[0].posref - b[0].posref ||\n    // for equal positions, sort trace indices increasing or decreasing\n    // depending on whether the axis is reversed or not... so stacked\n    // traces will generally keep their order even if one trace adds\n    // nothing to the stack.\n    axSign * (b[0].traceIndex - a[0].traceIndex);\n  });\n  var donepositioning, topOverlap, bottomOverlap, i, j, pti, sumdp;\n  function constrainGroup(grp) {\n    var minPt = grp[0];\n    var maxPt = grp[grp.length - 1];\n\n    // overlap with the top - positive vals are overlaps\n    topOverlap = minPt.pmin - minPt.pos - minPt.dp + minPt.size;\n\n    // overlap with the bottom - positive vals are overlaps\n    bottomOverlap = maxPt.pos + maxPt.dp + maxPt.size - minPt.pmax;\n\n    // check for min overlap first, so that we always\n    // see the largest labels\n    // allow for .01px overlap, so we don't get an\n    // infinite loop from rounding errors\n    if (topOverlap > 0.01) {\n      for (j = grp.length - 1; j >= 0; j--) grp[j].dp += topOverlap;\n      donepositioning = false;\n    }\n    if (bottomOverlap < 0.01) return;\n    if (topOverlap < -0.01) {\n      // make sure we're not pushing back and forth\n      for (j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n      donepositioning = false;\n    }\n    if (!donepositioning) return;\n\n    // no room to fix positioning, delete off-screen points\n\n    // first see how many points we need to delete\n    var deleteCount = 0;\n    for (i = 0; i < grp.length; i++) {\n      pti = grp[i];\n      if (pti.pos + pti.dp + pti.size > minPt.pmax) deleteCount++;\n    }\n\n    // start by deleting points whose data is off screen\n    for (i = grp.length - 1; i >= 0; i--) {\n      if (deleteCount <= 0) break;\n      pti = grp[i];\n\n      // pos has already been constrained to [pmin,pmax]\n      // so look for points close to that to delete\n      if (pti.pos > minPt.pmax - 1) {\n        pti.del = true;\n        deleteCount--;\n      }\n    }\n    for (i = 0; i < grp.length; i++) {\n      if (deleteCount <= 0) break;\n      pti = grp[i];\n\n      // pos has already been constrained to [pmin,pmax]\n      // so look for points close to that to delete\n      if (pti.pos < minPt.pmin + 1) {\n        pti.del = true;\n        deleteCount--;\n\n        // shift the whole group minus into this new space\n        bottomOverlap = pti.size * 2;\n        for (j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n      }\n    }\n    // then delete points that go off the bottom\n    for (i = grp.length - 1; i >= 0; i--) {\n      if (deleteCount <= 0) break;\n      pti = grp[i];\n      if (pti.pos + pti.dp + pti.size > minPt.pmax) {\n        pti.del = true;\n        deleteCount--;\n      }\n    }\n  }\n\n  // loop through groups, combining them if they overlap,\n  // until nothing moves\n  while (!donepositioning && nummoves <= nLabels) {\n    // to avoid infinite loops, don't move more times\n    // than there are traces\n    nummoves++;\n\n    // assume nothing will move in this iteration,\n    // reverse this if it does\n    donepositioning = true;\n    i = 0;\n    while (i < pointgroups.length - 1) {\n      // the higher (g0) and lower (g1) point group\n      var g0 = pointgroups[i];\n      var g1 = pointgroups[i + 1];\n\n      // the lowest point in the higher group (p0)\n      // the highest point in the lower group (p1)\n      var p0 = g0[g0.length - 1];\n      var p1 = g1[0];\n      topOverlap = p0.pos + p0.dp + p0.size - p1.pos - p1.dp + p1.size;\n\n      // Only group points that lie on the same axes\n      if (topOverlap > 0.01 && p0.pmin === p1.pmin && p0.pmax === p1.pmax) {\n        // push the new point(s) added to this group out of the way\n        for (j = g1.length - 1; j >= 0; j--) g1[j].dp += topOverlap;\n\n        // add them to the group\n        g0.push.apply(g0, g1);\n        pointgroups.splice(i + 1, 1);\n\n        // adjust for minimum average movement\n        sumdp = 0;\n        for (j = g0.length - 1; j >= 0; j--) sumdp += g0[j].dp;\n        bottomOverlap = sumdp / g0.length;\n        for (j = g0.length - 1; j >= 0; j--) g0[j].dp -= bottomOverlap;\n        donepositioning = false;\n      } else i++;\n    }\n\n    // check if we're going off the plot on either side and fix\n    pointgroups.forEach(constrainGroup);\n  }\n\n  // now put these offsets into hoverData\n  for (i = pointgroups.length - 1; i >= 0; i--) {\n    var grp = pointgroups[i];\n    for (j = grp.length - 1; j >= 0; j--) {\n      var pt = grp[j];\n      var hoverPt = pt.datum;\n      hoverPt.offset = pt.dp;\n      hoverPt.del = pt.del;\n    }\n  }\n}\nfunction getHoverLabelOffsets(hoverLabel, rotateLabels) {\n  var offsetX = 0;\n  var offsetY = hoverLabel.offset;\n  if (rotateLabels) {\n    offsetY *= -YSHIFTY;\n    offsetX = hoverLabel.offset * YSHIFTX;\n  }\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\n\n/**\n * Calculate the shift in x for text and text2 elements\n */\nfunction getTextShiftX(hoverLabel) {\n  var alignShift = {\n    start: 1,\n    end: -1,\n    middle: 0\n  }[hoverLabel.anchor];\n  var textShiftX = alignShift * (HOVERARROWSIZE + HOVERTEXTPAD);\n  var text2ShiftX = textShiftX + alignShift * (hoverLabel.txwidth + HOVERTEXTPAD);\n  var isMiddle = hoverLabel.anchor === 'middle';\n  if (isMiddle) {\n    textShiftX -= hoverLabel.tx2width / 2;\n    text2ShiftX += hoverLabel.txwidth / 2 + HOVERTEXTPAD;\n  }\n  return {\n    alignShift: alignShift,\n    textShiftX: textShiftX,\n    text2ShiftX: text2ShiftX\n  };\n}\nfunction alignHoverText(hoverLabels, rotateLabels, scaleX, scaleY) {\n  var pX = function (x) {\n    return x * scaleX;\n  };\n  var pY = function (y) {\n    return y * scaleY;\n  };\n\n  // finally set the text positioning relative to the data and draw the\n  // box around it\n  hoverLabels.each(function (d) {\n    var g = d3.select(this);\n    if (d.del) return g.remove();\n    var tx = g.select('text.nums');\n    var anchor = d.anchor;\n    var horzSign = anchor === 'end' ? -1 : 1;\n    var shiftX = getTextShiftX(d);\n    var offsets = getHoverLabelOffsets(d, rotateLabels);\n    var offsetX = offsets.x;\n    var offsetY = offsets.y;\n    var isMiddle = anchor === 'middle';\n    g.select('path').attr('d', isMiddle ?\n    // middle aligned: rect centered on data\n    'M-' + pX(d.bx / 2 + d.tx2width / 2) + ',' + pY(offsetY - d.by / 2) + 'h' + pX(d.bx) + 'v' + pY(d.by) + 'h-' + pX(d.bx) + 'Z' :\n    // left or right aligned: side rect with arrow to data\n    'M0,0L' + pX(horzSign * HOVERARROWSIZE + offsetX) + ',' + pY(HOVERARROWSIZE + offsetY) + 'v' + pY(d.by / 2 - HOVERARROWSIZE) + 'h' + pX(horzSign * d.bx) + 'v-' + pY(d.by) + 'H' + pX(horzSign * HOVERARROWSIZE + offsetX) + 'V' + pY(offsetY - HOVERARROWSIZE) + 'Z');\n    var posX = offsetX + shiftX.textShiftX;\n    var posY = offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD;\n    var textAlign = d.textAlign || 'auto';\n    if (textAlign !== 'auto') {\n      if (textAlign === 'left' && anchor !== 'start') {\n        tx.attr('text-anchor', 'start');\n        posX = isMiddle ? -d.bx / 2 - d.tx2width / 2 + HOVERTEXTPAD : -d.bx - HOVERTEXTPAD;\n      } else if (textAlign === 'right' && anchor !== 'end') {\n        tx.attr('text-anchor', 'end');\n        posX = isMiddle ? d.bx / 2 - d.tx2width / 2 - HOVERTEXTPAD : d.bx + HOVERTEXTPAD;\n      }\n    }\n    tx.call(svgTextUtils.positionText, pX(posX), pY(posY));\n    if (d.tx2width) {\n      g.select('text.name').call(svgTextUtils.positionText, pX(shiftX.text2ShiftX + shiftX.alignShift * HOVERTEXTPAD + offsetX), pY(offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD));\n      g.select('rect').call(Drawing.setRect, pX(shiftX.text2ShiftX + (shiftX.alignShift - 1) * d.tx2width / 2 + offsetX), pY(offsetY - d.by / 2 - 1), pX(d.tx2width), pY(d.by + 2));\n    }\n  });\n}\nfunction cleanPoint(d, hovermode) {\n  var index = d.index;\n  var trace = d.trace || {};\n  var cd0 = d.cd[0];\n  var cd = d.cd[index] || {};\n  function pass(v) {\n    return v || isNumeric(v) && v === 0;\n  }\n  var getVal = Array.isArray(index) ? function (calcKey, traceKey) {\n    var v = Lib.castOption(cd0, index, calcKey);\n    return pass(v) ? v : Lib.extractOption({}, trace, '', traceKey);\n  } : function (calcKey, traceKey) {\n    return Lib.extractOption(cd, trace, calcKey, traceKey);\n  };\n  function fill(key, calcKey, traceKey) {\n    var val = getVal(calcKey, traceKey);\n    if (pass(val)) d[key] = val;\n  }\n  fill('hoverinfo', 'hi', 'hoverinfo');\n  fill('bgcolor', 'hbg', 'hoverlabel.bgcolor');\n  fill('borderColor', 'hbc', 'hoverlabel.bordercolor');\n  fill('fontFamily', 'htf', 'hoverlabel.font.family');\n  fill('fontSize', 'hts', 'hoverlabel.font.size');\n  fill('fontColor', 'htc', 'hoverlabel.font.color');\n  fill('nameLength', 'hnl', 'hoverlabel.namelength');\n  fill('textAlign', 'hta', 'hoverlabel.align');\n  d.posref = hovermode === 'y' || hovermode === 'closest' && trace.orientation === 'h' ? d.xa._offset + (d.x0 + d.x1) / 2 : d.ya._offset + (d.y0 + d.y1) / 2;\n\n  // then constrain all the positions to be on the plot\n  d.x0 = Lib.constrain(d.x0, 0, d.xa._length);\n  d.x1 = Lib.constrain(d.x1, 0, d.xa._length);\n  d.y0 = Lib.constrain(d.y0, 0, d.ya._length);\n  d.y1 = Lib.constrain(d.y1, 0, d.ya._length);\n\n  // and convert the x and y label values into formatted text\n  if (d.xLabelVal !== undefined) {\n    d.xLabel = 'xLabel' in d ? d.xLabel : Axes.hoverLabelText(d.xa, d.xLabelVal, trace.xhoverformat);\n    d.xVal = d.xa.c2d(d.xLabelVal);\n  }\n  if (d.yLabelVal !== undefined) {\n    d.yLabel = 'yLabel' in d ? d.yLabel : Axes.hoverLabelText(d.ya, d.yLabelVal, trace.yhoverformat);\n    d.yVal = d.ya.c2d(d.yLabelVal);\n  }\n\n  // Traces like heatmaps generate the zLabel in their hoverPoints function\n  if (d.zLabelVal !== undefined && d.zLabel === undefined) {\n    d.zLabel = String(d.zLabelVal);\n  }\n\n  // for box means and error bars, add the range to the label\n  if (!isNaN(d.xerr) && !(d.xa.type === 'log' && d.xerr <= 0)) {\n    var xeText = Axes.tickText(d.xa, d.xa.c2l(d.xerr), 'hover').text;\n    if (d.xerrneg !== undefined) {\n      d.xLabel += ' +' + xeText + ' / -' + Axes.tickText(d.xa, d.xa.c2l(d.xerrneg), 'hover').text;\n    } else d.xLabel += ' ± ' + xeText;\n\n    // small distance penalty for error bars, so that if there are\n    // traces with errors and some without, the error bar label will\n    // hoist up to the point\n    if (hovermode === 'x') d.distance += 1;\n  }\n  if (!isNaN(d.yerr) && !(d.ya.type === 'log' && d.yerr <= 0)) {\n    var yeText = Axes.tickText(d.ya, d.ya.c2l(d.yerr), 'hover').text;\n    if (d.yerrneg !== undefined) {\n      d.yLabel += ' +' + yeText + ' / -' + Axes.tickText(d.ya, d.ya.c2l(d.yerrneg), 'hover').text;\n    } else d.yLabel += ' ± ' + yeText;\n    if (hovermode === 'y') d.distance += 1;\n  }\n  var infomode = d.hoverinfo || d.trace.hoverinfo;\n  if (infomode && infomode !== 'all') {\n    infomode = Array.isArray(infomode) ? infomode : infomode.split('+');\n    if (infomode.indexOf('x') === -1) d.xLabel = undefined;\n    if (infomode.indexOf('y') === -1) d.yLabel = undefined;\n    if (infomode.indexOf('z') === -1) d.zLabel = undefined;\n    if (infomode.indexOf('text') === -1) d.text = undefined;\n    if (infomode.indexOf('name') === -1) d.name = undefined;\n  }\n  return d;\n}\nfunction createSpikelines(gd, closestPoints, opts) {\n  var container = opts.container;\n  var fullLayout = opts.fullLayout;\n  var gs = fullLayout._size;\n  var evt = opts.event;\n  var showY = !!closestPoints.hLinePoint;\n  var showX = !!closestPoints.vLinePoint;\n  var xa, ya;\n\n  // Remove old spikeline items\n  container.selectAll('.spikeline').remove();\n  if (!(showX || showY)) return;\n  var contrastColor = Color.combine(fullLayout.plot_bgcolor, fullLayout.paper_bgcolor);\n\n  // Horizontal line (to y-axis)\n  if (showY) {\n    var hLinePoint = closestPoints.hLinePoint;\n    var hLinePointX, hLinePointY;\n    xa = hLinePoint && hLinePoint.xa;\n    ya = hLinePoint && hLinePoint.ya;\n    var ySnap = ya.spikesnap;\n    if (ySnap === 'cursor') {\n      hLinePointX = evt.pointerX;\n      hLinePointY = evt.pointerY;\n    } else {\n      hLinePointX = xa._offset + hLinePoint.x;\n      hLinePointY = ya._offset + hLinePoint.y;\n    }\n    var dfltHLineColor = tinycolor.readability(hLinePoint.color, contrastColor) < 1.5 ? Color.contrast(contrastColor) : hLinePoint.color;\n    var yMode = ya.spikemode;\n    var yThickness = ya.spikethickness;\n    var yColor = ya.spikecolor || dfltHLineColor;\n    var xEdge = Axes.getPxPosition(gd, ya);\n    var xBase, xEndSpike;\n    if (yMode.indexOf('toaxis') !== -1 || yMode.indexOf('across') !== -1) {\n      if (yMode.indexOf('toaxis') !== -1) {\n        xBase = xEdge;\n        xEndSpike = hLinePointX;\n      }\n      if (yMode.indexOf('across') !== -1) {\n        var xAcross0 = ya._counterDomainMin;\n        var xAcross1 = ya._counterDomainMax;\n        if (ya.anchor === 'free') {\n          xAcross0 = Math.min(xAcross0, ya.position);\n          xAcross1 = Math.max(xAcross1, ya.position);\n        }\n        xBase = gs.l + xAcross0 * gs.w;\n        xEndSpike = gs.l + xAcross1 * gs.w;\n      }\n\n      // Foreground horizontal line (to y-axis)\n      container.insert('line', ':first-child').attr({\n        x1: xBase,\n        x2: xEndSpike,\n        y1: hLinePointY,\n        y2: hLinePointY,\n        'stroke-width': yThickness,\n        stroke: yColor,\n        'stroke-dasharray': Drawing.dashStyle(ya.spikedash, yThickness)\n      }).classed('spikeline', true).classed('crisp', true);\n\n      // Background horizontal Line (to y-axis)\n      container.insert('line', ':first-child').attr({\n        x1: xBase,\n        x2: xEndSpike,\n        y1: hLinePointY,\n        y2: hLinePointY,\n        'stroke-width': yThickness + 2,\n        stroke: contrastColor\n      }).classed('spikeline', true).classed('crisp', true);\n    }\n    // Y axis marker\n    if (yMode.indexOf('marker') !== -1) {\n      container.insert('circle', ':first-child').attr({\n        cx: xEdge + (ya.side !== 'right' ? yThickness : -yThickness),\n        cy: hLinePointY,\n        r: yThickness,\n        fill: yColor\n      }).classed('spikeline', true);\n    }\n  }\n  if (showX) {\n    var vLinePoint = closestPoints.vLinePoint;\n    var vLinePointX, vLinePointY;\n    xa = vLinePoint && vLinePoint.xa;\n    ya = vLinePoint && vLinePoint.ya;\n    var xSnap = xa.spikesnap;\n    if (xSnap === 'cursor') {\n      vLinePointX = evt.pointerX;\n      vLinePointY = evt.pointerY;\n    } else {\n      vLinePointX = xa._offset + vLinePoint.x;\n      vLinePointY = ya._offset + vLinePoint.y;\n    }\n    var dfltVLineColor = tinycolor.readability(vLinePoint.color, contrastColor) < 1.5 ? Color.contrast(contrastColor) : vLinePoint.color;\n    var xMode = xa.spikemode;\n    var xThickness = xa.spikethickness;\n    var xColor = xa.spikecolor || dfltVLineColor;\n    var yEdge = Axes.getPxPosition(gd, xa);\n    var yBase, yEndSpike;\n    if (xMode.indexOf('toaxis') !== -1 || xMode.indexOf('across') !== -1) {\n      if (xMode.indexOf('toaxis') !== -1) {\n        yBase = yEdge;\n        yEndSpike = vLinePointY;\n      }\n      if (xMode.indexOf('across') !== -1) {\n        var yAcross0 = xa._counterDomainMin;\n        var yAcross1 = xa._counterDomainMax;\n        if (xa.anchor === 'free') {\n          yAcross0 = Math.min(yAcross0, xa.position);\n          yAcross1 = Math.max(yAcross1, xa.position);\n        }\n        yBase = gs.t + (1 - yAcross1) * gs.h;\n        yEndSpike = gs.t + (1 - yAcross0) * gs.h;\n      }\n\n      // Foreground vertical line (to x-axis)\n      container.insert('line', ':first-child').attr({\n        x1: vLinePointX,\n        x2: vLinePointX,\n        y1: yBase,\n        y2: yEndSpike,\n        'stroke-width': xThickness,\n        stroke: xColor,\n        'stroke-dasharray': Drawing.dashStyle(xa.spikedash, xThickness)\n      }).classed('spikeline', true).classed('crisp', true);\n\n      // Background vertical line (to x-axis)\n      container.insert('line', ':first-child').attr({\n        x1: vLinePointX,\n        x2: vLinePointX,\n        y1: yBase,\n        y2: yEndSpike,\n        'stroke-width': xThickness + 2,\n        stroke: contrastColor\n      }).classed('spikeline', true).classed('crisp', true);\n    }\n\n    // X axis marker\n    if (xMode.indexOf('marker') !== -1) {\n      container.insert('circle', ':first-child').attr({\n        cx: vLinePointX,\n        cy: yEdge - (xa.side !== 'top' ? xThickness : -xThickness),\n        r: xThickness,\n        fill: xColor\n      }).classed('spikeline', true);\n    }\n  }\n}\nfunction hoverChanged(gd, evt, oldhoverdata) {\n  // don't emit any events if nothing changed\n  if (!oldhoverdata || oldhoverdata.length !== gd._hoverdata.length) return true;\n  for (var i = oldhoverdata.length - 1; i >= 0; i--) {\n    var oldPt = oldhoverdata[i];\n    var newPt = gd._hoverdata[i];\n    if (oldPt.curveNumber !== newPt.curveNumber || String(oldPt.pointNumber) !== String(newPt.pointNumber) || String(oldPt.pointNumbers) !== String(newPt.pointNumbers)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction spikesChanged(gd, oldspikepoints) {\n  // don't relayout the plot because of new spikelines if spikelines points didn't change\n  if (!oldspikepoints) return true;\n  if (oldspikepoints.vLinePoint !== gd._spikepoints.vLinePoint || oldspikepoints.hLinePoint !== gd._spikepoints.hLinePoint) return true;\n  return false;\n}\nfunction plainText(s, len) {\n  return svgTextUtils.plainText(s || '', {\n    len: len,\n    allowedTags: ['br', 'sub', 'sup', 'b', 'i', 'em']\n  });\n}\nfunction orderRangePoints(hoverData, hovermode) {\n  var axLetter = hovermode.charAt(0);\n  var first = [];\n  var second = [];\n  var last = [];\n  for (var i = 0; i < hoverData.length; i++) {\n    var d = hoverData[i];\n    if (Registry.traceIs(d.trace, 'bar-like') || Registry.traceIs(d.trace, 'box-violin')) {\n      last.push(d);\n    } else if (d.trace[axLetter + 'period']) {\n      second.push(d);\n    } else {\n      first.push(d);\n    }\n  }\n  return first.concat(second).concat(last);\n}\nfunction getCoord(axLetter, winningPoint, fullLayout) {\n  var ax = winningPoint[axLetter + 'a'];\n  var val = winningPoint[axLetter + 'Val'];\n  var cd0 = winningPoint.cd[0];\n  if (ax.type === 'category' || ax.type === 'multicategory') val = ax._categoriesMap[val];else if (ax.type === 'date') {\n    var periodalignment = winningPoint.trace[axLetter + 'periodalignment'];\n    if (periodalignment) {\n      var d = winningPoint.cd[winningPoint.index];\n      var start = d[axLetter + 'Start'];\n      if (start === undefined) start = d[axLetter];\n      var end = d[axLetter + 'End'];\n      if (end === undefined) end = d[axLetter];\n      var diff = end - start;\n      if (periodalignment === 'end') {\n        val += diff;\n      } else if (periodalignment === 'middle') {\n        val += diff / 2;\n      }\n    }\n    val = ax.d2c(val);\n  }\n  if (cd0 && cd0.t && cd0.t.posLetter === ax._id) {\n    if (fullLayout.boxmode === 'group' || fullLayout.violinmode === 'group') {\n      val += cd0.t.dPos;\n    }\n  }\n  return val;\n}\n\n// Top/left hover offsets relative to graph div. As long as hover content is\n// a sibling of the graph div, it will be positioned correctly relative to\n// the offset parent, whatever that may be.\nfunction getTopOffset(gd) {\n  return gd.offsetTop + gd.clientTop;\n}\nfunction getLeftOffset(gd) {\n  return gd.offsetLeft + gd.clientLeft;\n}\nfunction getBoundingClientRect(gd, node) {\n  var fullLayout = gd._fullLayout;\n  var rect = node.getBoundingClientRect();\n  var x0 = rect.left;\n  var y0 = rect.top;\n  var x1 = x0 + rect.width;\n  var y1 = y0 + rect.height;\n  var A = Lib.apply3DTransform(fullLayout._invTransform)(x0, y0);\n  var B = Lib.apply3DTransform(fullLayout._invTransform)(x1, y1);\n  var Ax = A[0];\n  var Ay = A[1];\n  var Bx = B[0];\n  var By = B[1];\n  return {\n    x: Ax,\n    y: Ay,\n    width: Bx - Ax,\n    height: By - Ay,\n    top: Math.min(Ay, By),\n    left: Math.min(Ax, Bx),\n    right: Math.max(Ax, Bx),\n    bottom: Math.max(Ay, By)\n  };\n}","map":{"version":3,"names":["d3","require","isNumeric","tinycolor","Lib","strTranslate","strRotate","Events","svgTextUtils","overrideCursor","Drawing","Color","dragElement","Axes","Registry","helpers","constants","legendSupplyDefaults","legendDraw","YANGLE","YA_RADIANS","Math","PI","YFACTOR","sin","YSHIFTX","cos","YSHIFTY","HOVERARROWSIZE","HOVERTEXTPAD","multipleHoverPoints","box","ohlc","violin","candlestick","cartesianScatterPoints","scatter","scattergl","splom","exports","hover","gd","evt","subplot","noHoverEvent","getGraphDiv","eventTarget","target","throttle","_fullLayout","_uid","HOVERID","HOVERMINTIME","_hover","loneHover","hoverItems","opts","multiHover","Array","isArray","gTop","getTopOffset","gLeft","getLeftOffset","pointsData","map","hoverItem","_x0","x0","x","_x1","x1","_y0","y0","y","_y1","y1","eventData","min","max","trace","traceIs","container","scene","_scene","dx","offsetLeft","dy","offsetTop","bbox","inOut_bbox","push","color","defaultLine","xLabel","yLabel","zLabel","text","name","idealAlign","borderColor","fontFamily","fontSize","fontColor","nameLength","textAlign","index","hoverinfo","xa","_offset","ya","hovertemplate","hovertemplateLabels","rotateLabels","hoverText","createHoverText","hovermode","bgColor","background","select","outerContainer","hoverLabel","hoverLabels","tooltipSpacing","lastBottomY","anchor","sort","a","b","each","d","i","topY","by","offset","anchorIndex","scaleX","_invScaleX","scaleY","_invScaleY","alignHoverText","node","subplots","fullLayout","plots","_plots","plotinfo","hasCartesian","_has","overlayedSubplots","overlays","pi","id","concat","len","length","xaArray","yaArray","supportsCompare","spId","xaxis","yaxis","_subplot","warn","indexOf","calcdata","querySelector","_dragging","unhoverRaw","hoverdistance","Infinity","spikedistance","hoverData","searchData","xvalArray","yvalArray","itemnum","curvenum","cd","subplotId","subploti","_mode","xval","yval","pointData","closedataPreviousLength","spikePoints","hLinePoint","vLinePoint","hasOneHorizontalTrace","curveNumber","orientation","isTraceInSubplots","hasUserCalledHover","xpx","ypx","_length","triggerHandler","dbb","getBoundingClientRect","clientX","left","clientY","top","_calcInverseTransform","transformedCoords","apply3DTransform","_invTransform","pointerX","pointerY","flat","p2c","distance","findHoverPoints","customXVal","customYVal","visible","_module","type","getSubplot","isUnifiedHover","charAt","maxHoverDistance","maxSpikeDistance","spikeDistance","xSpike","undefined","ySpike","xLabelVal","yLabelVal","zLabelVal","_splomScenes","uid","selection","pointNumber","hoverPoints","newPoints","finiteRange","hoverLayer","_hoverlayer","newPoint","newPointNum","cleanPoint","log","splice","closestPoints","filter","point","tmpPoint","closestVPoints","showspikes","spikesnap","closestVPt","fillSpikePoint","closestHPoints","closestHPt","selectClosestPoint","spikeOnWinning","resultPoint","minDistance","thisSpikeDistance","spikelineOpts","event","oldspikepoints","_spikepoints","newspikepoints","sortHoverData","d1","d2","orderRangePoints","axLetter","tmpHPointData","tmpHPoint","tmpVPointData","tmpVPoint","result","spikesChanged","createSpikelines","isXYhover","winningPoint","initLen","winX","getCoord","winY","finalPoints","seen","insert","newHd","key","hoverDataKey","oldId","oldHd","abs","k","oldhoverdata","_hoverdata","newhoverdata","pt","makeEventData","ht","combine","plot_bgcolor","paper_bgcolor","_paper","commonLabelOpts","hoverlabel","hoverAvoidOverlaps","commonLabelBoundingBox","tagName","hasClickToShow","getComponentMethod","hoverChanged","emit","points","xaxes","yaxes","xvals","yvals","attr","_id","join","EXTRA_STRING_REGEX","HOVERFONT","HOVERFONTSIZE","c0","axLabel","t0","q","outerContainerBB","outerTop","outerWidth","width","outerHeight","height","showCommonLabel","allHaveZ","traceHoverinfo","parts","split","commonLabel","selectAll","data","enter","append","classed","exit","remove","commonLabelRect","minX","maxX","minY","maxY","label","lpath","ensureSingle","s","style","ltext","commonBgColor","bgcolor","commonStroke","bordercolor","contrast","contrastColor","commonLabelFont","family","font","size","fill","stroke","call","positionText","convertToTspans","tbb","lx","ly","topsign","side","bottom","halfWidth","sgn","leftsign","halfHeight","lty","clipId","clipPath","ltx","dummy","tester","dummyBB","round","textClip","_topclips","setClipUrl","groupedHoverData","mockLayoutIn","showlegend","legend","title","borderwidth","tracegroupgap","traceorder","mockLayoutOut","_fullData","mockLegend","entries","j","texts","getHoverLabelText","mc","mcc","mlc","mlcc","mlw","mrc","dir","_distinct","layer","_inHover","_groupTitleFont","grouptitlefont","legendContainer","tWidth","tHeight","avgX","avgY","pointWon","lyBottom","lyTop","apply","c","mean","lxRight","lxLeft","xOffset","yOffset","g","addOpacity","dColor","color0","numsColor","opacity","nameColor","tx","tx2","tx2width","tx2height","t2bb","htx","hty","tbbWidth","tbbHeight","ty0","bx","txwidth","txTotalWidth","anchorStartOK","anchorEndOK","pos","crossPos","txHalfWidth","overflowR","overflowL","nameOverride","_meta","templateString","plainText","h0","h1","extraText","labels","hovertemplateString","_d3locale","replace","match","extra","axKey","crossAxKey","nummoves","axSign","nLabels","pointgroups","axisLabelMinX","axisLabelMaxX","axisLabelMinY","axisLabelMaxY","pX","pY","ax","crossAx","axIsX","rng","range","pmin","pmax","offsets","getHoverLabelOffsets","horzSign","labelMin","labelMax","startX","endX","_mainLinePosition","datum","traceIndex","dp","posref","donepositioning","topOverlap","bottomOverlap","pti","sumdp","constrainGroup","grp","minPt","maxPt","deleteCount","del","g0","g1","p0","p1","forEach","hoverPt","offsetX","offsetY","getTextShiftX","alignShift","start","end","middle","textShiftX","text2ShiftX","isMiddle","shiftX","posX","posY","setRect","cd0","pass","v","getVal","calcKey","traceKey","castOption","extractOption","val","constrain","hoverLabelText","xhoverformat","xVal","c2d","yhoverformat","yVal","String","isNaN","xerr","xeText","tickText","c2l","xerrneg","yerr","yeText","yerrneg","infomode","gs","_size","showY","showX","hLinePointX","hLinePointY","ySnap","dfltHLineColor","readability","yMode","spikemode","yThickness","spikethickness","yColor","spikecolor","xEdge","getPxPosition","xBase","xEndSpike","xAcross0","_counterDomainMin","xAcross1","_counterDomainMax","position","l","w","x2","y2","dashStyle","spikedash","cx","cy","r","vLinePointX","vLinePointY","xSnap","dfltVLineColor","xMode","xThickness","xColor","yEdge","yBase","yEndSpike","yAcross0","yAcross1","t","h","oldPt","newPt","pointNumbers","allowedTags","first","second","last","_categoriesMap","periodalignment","diff","d2c","posLetter","boxmode","violinmode","dPos","clientTop","clientLeft","rect","A","B","Ax","Ay","Bx","By","right"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/components/fx/hover.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar strRotate = Lib.strRotate;\nvar Events = require('../../lib/events');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar overrideCursor = require('../../lib/override_cursor');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar dragElement = require('../dragelement');\nvar Axes = require('../../plots/cartesian/axes');\nvar Registry = require('../../registry');\n\nvar helpers = require('./helpers');\nvar constants = require('./constants');\n\nvar legendSupplyDefaults = require('../legend/defaults');\nvar legendDraw = require('../legend/draw');\n\n// hover labels for multiple horizontal bars get tilted by some angle,\n// then need to be offset differently if they overlap\nvar YANGLE = constants.YANGLE;\nvar YA_RADIANS = Math.PI * YANGLE / 180;\n\n// expansion of projected height\nvar YFACTOR = 1 / Math.sin(YA_RADIANS);\n\n// to make the appropriate post-rotation x offset,\n// you need both x and y offsets\nvar YSHIFTX = Math.cos(YA_RADIANS);\nvar YSHIFTY = Math.sin(YA_RADIANS);\n\n// size and display constants for hover text\nvar HOVERARROWSIZE = constants.HOVERARROWSIZE;\nvar HOVERTEXTPAD = constants.HOVERTEXTPAD;\n\nvar multipleHoverPoints = {\n    box: true,\n    ohlc: true,\n    violin: true,\n    candlestick: true\n};\n\nvar cartesianScatterPoints = {\n    scatter: true,\n    scattergl: true,\n    splom: true\n};\n\n// fx.hover: highlight data on hover\n// evt can be a mousemove event, or an object with data about what points\n//   to hover on\n//      {xpx,ypx[,hovermode]} - pixel locations from top left\n//          (with optional overriding hovermode)\n//      {xval,yval[,hovermode]} - data values\n//      [{curveNumber,(pointNumber|xval and/or yval)}] -\n//              array of specific points to highlight\n//          pointNumber is a single integer if gd.data[curveNumber] is 1D,\n//              or a two-element array if it's 2D\n//          xval and yval are data values,\n//              1D data may specify either or both,\n//              2D data must specify both\n// subplot is an id string (default \"xy\")\n// makes use of gl.hovermode, which can be:\n//      x (find the points with the closest x values, ie a column),\n//      closest (find the single closest point)\n//    internally there are two more that occasionally get used:\n//      y (pick out a row - only used for multiple horizontal bar charts)\n//      array (used when the user specifies an explicit\n//          array of points to hover on)\n//\n// We wrap the hovers in a timer, to limit their frequency.\n// The actual rendering is done by private function _hover.\nexports.hover = function hover(gd, evt, subplot, noHoverEvent) {\n    gd = Lib.getGraphDiv(gd);\n    // The 'target' property changes when bubbling out of Shadow DOM.\n    // Throttling can delay reading the target, so we save the current value.\n    var eventTarget = evt.target;\n    Lib.throttle(\n        gd._fullLayout._uid + constants.HOVERID,\n        constants.HOVERMINTIME,\n        function() { _hover(gd, evt, subplot, noHoverEvent, eventTarget); }\n    );\n};\n\n/*\n * Draw a single hover item or an array of hover item in a pre-existing svg container somewhere\n * hoverItem should have keys:\n *    - x and y (or x0, x1, y0, and y1):\n *      the pixel position to mark, relative to opts.container\n *    - xLabel, yLabel, zLabel, text, and name:\n *      info to go in the label\n *    - color:\n *      the background color for the label.\n *    - idealAlign (optional):\n *      'left' or 'right' for which side of the x/y box to try to put this on first\n *    - borderColor (optional):\n *      color for the border, defaults to strongest contrast with color\n *    - fontFamily (optional):\n *      string, the font for this label, defaults to constants.HOVERFONT\n *    - fontSize (optional):\n *      the label font size, defaults to constants.HOVERFONTSIZE\n *    - fontColor (optional):\n *      defaults to borderColor\n * opts should have keys:\n *    - bgColor:\n *      the background color this is against, used if the trace is\n *      non-opaque, and for the name, which goes outside the box\n *    - container:\n *      a <svg> or <g> element to add the hover label to\n *    - outerContainer:\n *      normally a parent of `container`, sets the bounding box to use to\n *      constrain the hover label and determine whether to show it on the left or right\n * opts can have optional keys:\n *    - anchorIndex:\n        the index of the hover item used as an anchor for positioning.\n        The other hover items will be pushed up or down to prevent overlap.\n */\nexports.loneHover = function loneHover(hoverItems, opts) {\n    var multiHover = true;\n    if(!Array.isArray(hoverItems)) {\n        multiHover = false;\n        hoverItems = [hoverItems];\n    }\n\n    var gd = opts.gd;\n    var gTop = getTopOffset(gd);\n    var gLeft = getLeftOffset(gd);\n\n    var pointsData = hoverItems.map(function(hoverItem) {\n        var _x0 = hoverItem._x0 || hoverItem.x0 || hoverItem.x || 0;\n        var _x1 = hoverItem._x1 || hoverItem.x1 || hoverItem.x || 0;\n        var _y0 = hoverItem._y0 || hoverItem.y0 || hoverItem.y || 0;\n        var _y1 = hoverItem._y1 || hoverItem.y1 || hoverItem.y || 0;\n\n        var eventData = hoverItem.eventData;\n        if(eventData) {\n            var x0 = Math.min(_x0, _x1);\n            var x1 = Math.max(_x0, _x1);\n            var y0 = Math.min(_y0, _y1);\n            var y1 = Math.max(_y0, _y1);\n\n            var trace = hoverItem.trace;\n            if(Registry.traceIs(trace, 'gl3d')) {\n                var container = gd._fullLayout[trace.scene]._scene.container;\n                var dx = container.offsetLeft;\n                var dy = container.offsetTop;\n                x0 += dx;\n                x1 += dx;\n                y0 += dy;\n                y1 += dy;\n            } // TODO: handle heatmapgl\n\n            eventData.bbox = {\n                x0: x0 + gLeft,\n                x1: x1 + gLeft,\n                y0: y0 + gTop,\n                y1: y1 + gTop\n            };\n\n            if(opts.inOut_bbox) {\n                opts.inOut_bbox.push(eventData.bbox);\n            }\n        } else {\n            eventData = false;\n        }\n\n        return {\n            color: hoverItem.color || Color.defaultLine,\n            x0: hoverItem.x0 || hoverItem.x || 0,\n            x1: hoverItem.x1 || hoverItem.x || 0,\n            y0: hoverItem.y0 || hoverItem.y || 0,\n            y1: hoverItem.y1 || hoverItem.y || 0,\n            xLabel: hoverItem.xLabel,\n            yLabel: hoverItem.yLabel,\n            zLabel: hoverItem.zLabel,\n            text: hoverItem.text,\n            name: hoverItem.name,\n            idealAlign: hoverItem.idealAlign,\n\n            // optional extra bits of styling\n            borderColor: hoverItem.borderColor,\n            fontFamily: hoverItem.fontFamily,\n            fontSize: hoverItem.fontSize,\n            fontColor: hoverItem.fontColor,\n            nameLength: hoverItem.nameLength,\n            textAlign: hoverItem.textAlign,\n\n            // filler to make createHoverText happy\n            trace: hoverItem.trace || {\n                index: 0,\n                hoverinfo: ''\n            },\n            xa: {_offset: 0},\n            ya: {_offset: 0},\n            index: 0,\n\n            hovertemplate: hoverItem.hovertemplate || false,\n            hovertemplateLabels: hoverItem.hovertemplateLabels || false,\n\n            eventData: eventData\n        };\n    });\n\n    var rotateLabels = false;\n\n    var hoverText = createHoverText(pointsData, {\n        gd: gd,\n        hovermode: 'closest',\n        rotateLabels: rotateLabels,\n        bgColor: opts.bgColor || Color.background,\n        container: d3.select(opts.container),\n        outerContainer: opts.outerContainer || opts.container\n    });\n    var hoverLabel = hoverText.hoverLabels;\n\n    // Fix vertical overlap\n    var tooltipSpacing = 5;\n    var lastBottomY = 0;\n    var anchor = 0;\n    hoverLabel\n        .sort(function(a, b) {return a.y0 - b.y0;})\n        .each(function(d, i) {\n            var topY = d.y0 - d.by / 2;\n\n            if((topY - tooltipSpacing) < lastBottomY) {\n                d.offset = (lastBottomY - topY) + tooltipSpacing;\n            } else {\n                d.offset = 0;\n            }\n\n            lastBottomY = topY + d.by + d.offset;\n\n            if(i === opts.anchorIndex || 0) anchor = d.offset;\n        })\n        .each(function(d) {\n            d.offset -= anchor;\n        });\n\n    var scaleX = gd._fullLayout._invScaleX;\n    var scaleY = gd._fullLayout._invScaleY;\n    alignHoverText(hoverLabel, rotateLabels, scaleX, scaleY);\n\n    return multiHover ? hoverLabel : hoverLabel.node();\n};\n\n// The actual implementation is here:\nfunction _hover(gd, evt, subplot, noHoverEvent, eventTarget) {\n    if(!subplot) subplot = 'xy';\n\n    // if the user passed in an array of subplots,\n    // use those instead of finding overlayed plots\n    var subplots = Array.isArray(subplot) ? subplot : [subplot];\n\n    var fullLayout = gd._fullLayout;\n    var plots = fullLayout._plots || [];\n    var plotinfo = plots[subplot];\n    var hasCartesian = fullLayout._has('cartesian');\n\n    // list of all overlaid subplots to look at\n    if(plotinfo) {\n        var overlayedSubplots = plotinfo.overlays.map(function(pi) {\n            return pi.id;\n        });\n\n        subplots = subplots.concat(overlayedSubplots);\n    }\n\n    var len = subplots.length;\n    var xaArray = new Array(len);\n    var yaArray = new Array(len);\n    var supportsCompare = false;\n\n    for(var i = 0; i < len; i++) {\n        var spId = subplots[i];\n\n        if(plots[spId]) {\n            // 'cartesian' case\n            supportsCompare = true;\n            xaArray[i] = plots[spId].xaxis;\n            yaArray[i] = plots[spId].yaxis;\n        } else if(fullLayout[spId] && fullLayout[spId]._subplot) {\n            // other subplot types\n            var _subplot = fullLayout[spId]._subplot;\n            xaArray[i] = _subplot.xaxis;\n            yaArray[i] = _subplot.yaxis;\n        } else {\n            Lib.warn('Unrecognized subplot: ' + spId);\n            return;\n        }\n    }\n\n    var hovermode = evt.hovermode || fullLayout.hovermode;\n\n    if(hovermode && !supportsCompare) hovermode = 'closest';\n\n    if(['x', 'y', 'closest', 'x unified', 'y unified'].indexOf(hovermode) === -1 || !gd.calcdata ||\n            gd.querySelector('.zoombox') || gd._dragging) {\n        return dragElement.unhoverRaw(gd, evt);\n    }\n\n    var hoverdistance = fullLayout.hoverdistance;\n    if(hoverdistance === -1) hoverdistance = Infinity;\n\n    var spikedistance = fullLayout.spikedistance;\n    if(spikedistance === -1) spikedistance = Infinity;\n\n    // hoverData: the set of candidate points we've found to highlight\n    var hoverData = [];\n\n    // searchData: the data to search in. Mostly this is just a copy of\n    // gd.calcdata, filtered to the subplot and overlays we're on\n    // but if a point array is supplied it will be a mapping\n    // of indicated curves\n    var searchData = [];\n\n    // [x|y]valArray: the axis values of the hover event\n    // mapped onto each of the currently selected overlaid subplots\n    var xvalArray, yvalArray;\n\n    var itemnum, curvenum, cd, trace, subplotId, subploti, _mode,\n        xval, yval, pointData, closedataPreviousLength;\n\n    // spikePoints: the set of candidate points we've found to draw spikes to\n    var spikePoints = {\n        hLinePoint: null,\n        vLinePoint: null\n    };\n\n    // does subplot have one (or more) horizontal traces?\n    // This is used to determine whether we rotate the labels or not\n    var hasOneHorizontalTrace = false;\n\n    // Figure out what we're hovering on:\n    // mouse location or user-supplied data\n\n    if(Array.isArray(evt)) {\n        // user specified an array of points to highlight\n        hovermode = 'array';\n        for(itemnum = 0; itemnum < evt.length; itemnum++) {\n            cd = gd.calcdata[evt[itemnum].curveNumber || 0];\n            if(cd) {\n                trace = cd[0].trace;\n                if(cd[0].trace.hoverinfo !== 'skip') {\n                    searchData.push(cd);\n                    if(trace.orientation === 'h') {\n                        hasOneHorizontalTrace = true;\n                    }\n                }\n            }\n        }\n    } else {\n        for(curvenum = 0; curvenum < gd.calcdata.length; curvenum++) {\n            cd = gd.calcdata[curvenum];\n            trace = cd[0].trace;\n            if(trace.hoverinfo !== 'skip' && helpers.isTraceInSubplots(trace, subplots)) {\n                searchData.push(cd);\n                if(trace.orientation === 'h') {\n                    hasOneHorizontalTrace = true;\n                }\n            }\n        }\n\n        // [x|y]px: the pixels (from top left) of the mouse location\n        // on the currently selected plot area\n        // add pointerX|Y property for drawing the spikes in spikesnap 'cursor' situation\n        var hasUserCalledHover = !eventTarget;\n        var xpx, ypx;\n\n        if(hasUserCalledHover) {\n            if('xpx' in evt) xpx = evt.xpx;\n            else xpx = xaArray[0]._length / 2;\n\n            if('ypx' in evt) ypx = evt.ypx;\n            else ypx = yaArray[0]._length / 2;\n        } else {\n            // fire the beforehover event and quit if it returns false\n            // note that we're only calling this on real mouse events, so\n            // manual calls to fx.hover will always run.\n            if(Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n                return;\n            }\n\n            var dbb = eventTarget.getBoundingClientRect();\n\n            xpx = evt.clientX - dbb.left;\n            ypx = evt.clientY - dbb.top;\n\n            fullLayout._calcInverseTransform(gd);\n            var transformedCoords = Lib.apply3DTransform(fullLayout._invTransform)(xpx, ypx);\n\n            xpx = transformedCoords[0];\n            ypx = transformedCoords[1];\n\n            // in case hover was called from mouseout into hovertext,\n            // it's possible you're not actually over the plot anymore\n            if(xpx < 0 || xpx > xaArray[0]._length || ypx < 0 || ypx > yaArray[0]._length) {\n                return dragElement.unhoverRaw(gd, evt);\n            }\n        }\n\n        evt.pointerX = xpx + xaArray[0]._offset;\n        evt.pointerY = ypx + yaArray[0]._offset;\n\n        if('xval' in evt) xvalArray = helpers.flat(subplots, evt.xval);\n        else xvalArray = helpers.p2c(xaArray, xpx);\n\n        if('yval' in evt) yvalArray = helpers.flat(subplots, evt.yval);\n        else yvalArray = helpers.p2c(yaArray, ypx);\n\n        if(!isNumeric(xvalArray[0]) || !isNumeric(yvalArray[0])) {\n            Lib.warn('Fx.hover failed', evt, gd);\n            return dragElement.unhoverRaw(gd, evt);\n        }\n    }\n\n    // the pixel distance to beat as a matching point\n    // in 'x' or 'y' mode this resets for each trace\n    var distance = Infinity;\n\n    // find the closest point in each trace\n    // this is minimum dx and/or dy, depending on mode\n    // and the pixel position for the label (labelXpx, labelYpx)\n    function findHoverPoints(customXVal, customYVal) {\n        for(curvenum = 0; curvenum < searchData.length; curvenum++) {\n            cd = searchData[curvenum];\n\n            // filter out invisible or broken data\n            if(!cd || !cd[0] || !cd[0].trace) continue;\n\n            trace = cd[0].trace;\n\n            if(trace.visible !== true || trace._length === 0) continue;\n\n            // Explicitly bail out for these two. I don't know how to otherwise prevent\n            // the rest of this function from running and failing\n            if(['carpet', 'contourcarpet'].indexOf(trace._module.name) !== -1) continue;\n\n            if(trace.type === 'splom') {\n                // splom traces do not generate overlay subplots,\n                // it is safe to assume here splom traces correspond to the 0th subplot\n                subploti = 0;\n                subplotId = subplots[subploti];\n            } else {\n                subplotId = helpers.getSubplot(trace);\n                subploti = subplots.indexOf(subplotId);\n            }\n\n            // within one trace mode can sometimes be overridden\n            _mode = hovermode;\n            if(helpers.isUnifiedHover(_mode)) {\n                _mode = _mode.charAt(0);\n            }\n\n            // container for new point, also used to pass info into module.hoverPoints\n            pointData = {\n                // trace properties\n                cd: cd,\n                trace: trace,\n                xa: xaArray[subploti],\n                ya: yaArray[subploti],\n\n                // max distances for hover and spikes - for points that want to show but do not\n                // want to override other points, set distance/spikeDistance equal to max*Distance\n                // and it will not get filtered out but it will be guaranteed to have a greater\n                // distance than any point that calculated a real distance.\n                maxHoverDistance: hoverdistance,\n                maxSpikeDistance: spikedistance,\n\n                // point properties - override all of these\n                index: false, // point index in trace - only used by plotly.js hoverdata consumers\n                distance: Math.min(distance, hoverdistance), // pixel distance or pseudo-distance\n\n                // distance/pseudo-distance for spikes. This distance should always be calculated\n                // as if in \"closest\" mode, and should only be set if this point should\n                // generate a spike.\n                spikeDistance: Infinity,\n\n                // in some cases the spikes have different positioning from the hover label\n                // they don't need x0/x1, just one position\n                xSpike: undefined,\n                ySpike: undefined,\n\n                // where and how to display the hover label\n                color: Color.defaultLine, // trace color\n                name: trace.name,\n                x0: undefined,\n                x1: undefined,\n                y0: undefined,\n                y1: undefined,\n                xLabelVal: undefined,\n                yLabelVal: undefined,\n                zLabelVal: undefined,\n                text: undefined\n            };\n\n            // add ref to subplot object (non-cartesian case)\n            if(fullLayout[subplotId]) {\n                pointData.subplot = fullLayout[subplotId]._subplot;\n            }\n            // add ref to splom scene\n            if(fullLayout._splomScenes && fullLayout._splomScenes[trace.uid]) {\n                pointData.scene = fullLayout._splomScenes[trace.uid];\n            }\n\n            closedataPreviousLength = hoverData.length;\n\n            // for a highlighting array, figure out what\n            // we're searching for with this element\n            if(_mode === 'array') {\n                var selection = evt[curvenum];\n                if('pointNumber' in selection) {\n                    pointData.index = selection.pointNumber;\n                    _mode = 'closest';\n                } else {\n                    _mode = '';\n                    if('xval' in selection) {\n                        xval = selection.xval;\n                        _mode = 'x';\n                    }\n                    if('yval' in selection) {\n                        yval = selection.yval;\n                        _mode = _mode ? 'closest' : 'y';\n                    }\n                }\n            } else if(customXVal !== undefined && customYVal !== undefined) {\n                xval = customXVal;\n                yval = customYVal;\n            } else {\n                xval = xvalArray[subploti];\n                yval = yvalArray[subploti];\n            }\n\n            // Now if there is range to look in, find the points to hover.\n            if(hoverdistance !== 0) {\n                if(trace._module && trace._module.hoverPoints) {\n                    var newPoints = trace._module.hoverPoints(pointData, xval, yval, _mode, {\n                        finiteRange: true,\n                        hoverLayer: fullLayout._hoverlayer\n                    });\n\n                    if(newPoints) {\n                        var newPoint;\n                        for(var newPointNum = 0; newPointNum < newPoints.length; newPointNum++) {\n                            newPoint = newPoints[newPointNum];\n                            if(isNumeric(newPoint.x0) && isNumeric(newPoint.y0)) {\n                                hoverData.push(cleanPoint(newPoint, hovermode));\n                            }\n                        }\n                    }\n                } else {\n                    Lib.log('Unrecognized trace type in hover:', trace);\n                }\n            }\n\n            // in closest mode, remove any existing (farther) points\n            // and don't look any farther than this latest point (or points, some\n            // traces like box & violin make multiple hover labels at once)\n            if(hovermode === 'closest' && hoverData.length > closedataPreviousLength) {\n                hoverData.splice(0, closedataPreviousLength);\n                distance = hoverData[0].distance;\n            }\n\n            // Now if there is range to look in, find the points to draw the spikelines\n            // Do it only if there is no hoverData\n            if(hasCartesian && (spikedistance !== 0)) {\n                if(hoverData.length === 0) {\n                    pointData.distance = spikedistance;\n                    pointData.index = false;\n                    var closestPoints = trace._module.hoverPoints(pointData, xval, yval, 'closest', {\n                        hoverLayer: fullLayout._hoverlayer\n                    });\n                    if(closestPoints) {\n                        closestPoints = closestPoints.filter(function(point) {\n                            // some hover points, like scatter fills, do not allow spikes,\n                            // so will generate a hover point but without a valid spikeDistance\n                            return point.spikeDistance <= spikedistance;\n                        });\n                    }\n                    if(closestPoints && closestPoints.length) {\n                        var tmpPoint;\n                        var closestVPoints = closestPoints.filter(function(point) {\n                            return point.xa.showspikes && point.xa.spikesnap !== 'hovered data';\n                        });\n                        if(closestVPoints.length) {\n                            var closestVPt = closestVPoints[0];\n                            if(isNumeric(closestVPt.x0) && isNumeric(closestVPt.y0)) {\n                                tmpPoint = fillSpikePoint(closestVPt);\n                                if(!spikePoints.vLinePoint || (spikePoints.vLinePoint.spikeDistance > tmpPoint.spikeDistance)) {\n                                    spikePoints.vLinePoint = tmpPoint;\n                                }\n                            }\n                        }\n\n                        var closestHPoints = closestPoints.filter(function(point) {\n                            return point.ya.showspikes && point.ya.spikesnap !== 'hovered data';\n                        });\n                        if(closestHPoints.length) {\n                            var closestHPt = closestHPoints[0];\n                            if(isNumeric(closestHPt.x0) && isNumeric(closestHPt.y0)) {\n                                tmpPoint = fillSpikePoint(closestHPt);\n                                if(!spikePoints.hLinePoint || (spikePoints.hLinePoint.spikeDistance > tmpPoint.spikeDistance)) {\n                                    spikePoints.hLinePoint = tmpPoint;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    findHoverPoints();\n\n    function selectClosestPoint(pointsData, spikedistance, spikeOnWinning) {\n        var resultPoint = null;\n        var minDistance = Infinity;\n        var thisSpikeDistance;\n\n        for(var i = 0; i < pointsData.length; i++) {\n            thisSpikeDistance = pointsData[i].spikeDistance;\n            if(spikeOnWinning && i === 0) thisSpikeDistance = -Infinity;\n\n            if(thisSpikeDistance <= minDistance && thisSpikeDistance <= spikedistance) {\n                resultPoint = pointsData[i];\n                minDistance = thisSpikeDistance;\n            }\n        }\n        return resultPoint;\n    }\n\n    function fillSpikePoint(point) {\n        if(!point) return null;\n        return {\n            xa: point.xa,\n            ya: point.ya,\n            x: point.xSpike !== undefined ? point.xSpike : (point.x0 + point.x1) / 2,\n            y: point.ySpike !== undefined ? point.ySpike : (point.y0 + point.y1) / 2,\n            distance: point.distance,\n            spikeDistance: point.spikeDistance,\n            curveNumber: point.trace.index,\n            color: point.color,\n            pointNumber: point.index\n        };\n    }\n\n    var spikelineOpts = {\n        fullLayout: fullLayout,\n        container: fullLayout._hoverlayer,\n        event: evt\n    };\n    var oldspikepoints = gd._spikepoints;\n    var newspikepoints = {\n        vLinePoint: spikePoints.vLinePoint,\n        hLinePoint: spikePoints.hLinePoint\n    };\n    gd._spikepoints = newspikepoints;\n\n    var sortHoverData = function() {\n        hoverData.sort(function(d1, d2) { return d1.distance - d2.distance; });\n\n        // move period positioned points and box/bar-like traces to the end of the list\n        hoverData = orderRangePoints(hoverData, hovermode);\n    };\n    sortHoverData();\n\n    var axLetter = hovermode.charAt(0);\n    var spikeOnWinning = (axLetter === 'x' || axLetter === 'y') && hoverData[0] && cartesianScatterPoints[hoverData[0].trace.type];\n\n    // Now if it is not restricted by spikedistance option, set the points to draw the spikelines\n    if(hasCartesian && (spikedistance !== 0)) {\n        if(hoverData.length !== 0) {\n            var tmpHPointData = hoverData.filter(function(point) {\n                return point.ya.showspikes;\n            });\n            var tmpHPoint = selectClosestPoint(tmpHPointData, spikedistance, spikeOnWinning);\n            spikePoints.hLinePoint = fillSpikePoint(tmpHPoint);\n\n            var tmpVPointData = hoverData.filter(function(point) {\n                return point.xa.showspikes;\n            });\n            var tmpVPoint = selectClosestPoint(tmpVPointData, spikedistance, spikeOnWinning);\n            spikePoints.vLinePoint = fillSpikePoint(tmpVPoint);\n        }\n    }\n\n    // if hoverData is empty check for the spikes to draw and quit if there are none\n    if(hoverData.length === 0) {\n        var result = dragElement.unhoverRaw(gd, evt);\n        if(hasCartesian && ((spikePoints.hLinePoint !== null) || (spikePoints.vLinePoint !== null))) {\n            if(spikesChanged(oldspikepoints)) {\n                createSpikelines(gd, spikePoints, spikelineOpts);\n            }\n        }\n        return result;\n    }\n\n    if(hasCartesian) {\n        if(spikesChanged(oldspikepoints)) {\n            createSpikelines(gd, spikePoints, spikelineOpts);\n        }\n    }\n\n    if(\n        helpers.isXYhover(_mode) &&\n        hoverData[0].length !== 0 &&\n        hoverData[0].trace.type !== 'splom' // TODO: add support for splom\n    ) {\n        // pick winning point\n        var winningPoint = hoverData[0];\n        // discard other points\n        if(multipleHoverPoints[winningPoint.trace.type]) {\n            hoverData = hoverData.filter(function(d) {\n                return d.trace.index === winningPoint.trace.index;\n            });\n        } else {\n            hoverData = [winningPoint];\n        }\n        var initLen = hoverData.length;\n\n        var winX = getCoord('x', winningPoint, fullLayout);\n        var winY = getCoord('y', winningPoint, fullLayout);\n\n        // in compare mode, select every point at position\n        findHoverPoints(winX, winY);\n\n        var finalPoints = [];\n        var seen = {};\n        var id = 0;\n        var insert = function(newHd) {\n            var key = multipleHoverPoints[newHd.trace.type] ? hoverDataKey(newHd) : newHd.trace.index;\n            if(!seen[key]) {\n                id++;\n                seen[key] = id;\n                finalPoints.push(newHd);\n            } else {\n                var oldId = seen[key] - 1;\n                var oldHd = finalPoints[oldId];\n                if(oldId > 0 &&\n                    Math.abs(newHd.distance) <\n                    Math.abs(oldHd.distance)\n                ) {\n                    // replace with closest\n                    finalPoints[oldId] = newHd;\n                }\n            }\n        };\n\n        var k;\n        // insert the winnig point(s) first\n        for(k = 0; k < initLen; k++) {\n            insert(hoverData[k]);\n        }\n        // override from the end\n        for(k = hoverData.length - 1; k > initLen - 1; k--) {\n            insert(hoverData[k]);\n        }\n        hoverData = finalPoints;\n        sortHoverData();\n    }\n\n    // lastly, emit custom hover/unhover events\n    var oldhoverdata = gd._hoverdata;\n    var newhoverdata = [];\n\n    var gTop = getTopOffset(gd);\n    var gLeft = getLeftOffset(gd);\n\n    // pull out just the data that's useful to\n    // other people and send it to the event\n    for(itemnum = 0; itemnum < hoverData.length; itemnum++) {\n        var pt = hoverData[itemnum];\n        var eventData = helpers.makeEventData(pt, pt.trace, pt.cd);\n\n        if(pt.hovertemplate !== false) {\n            var ht = false;\n            if(pt.cd[pt.index] && pt.cd[pt.index].ht) {\n                ht = pt.cd[pt.index].ht;\n            }\n            pt.hovertemplate = ht || pt.trace.hovertemplate || false;\n        }\n\n        if(pt.xa && pt.ya) {\n            var _x0 = pt.x0 + pt.xa._offset;\n            var _x1 = pt.x1 + pt.xa._offset;\n            var _y0 = pt.y0 + pt.ya._offset;\n            var _y1 = pt.y1 + pt.ya._offset;\n\n            var x0 = Math.min(_x0, _x1);\n            var x1 = Math.max(_x0, _x1);\n            var y0 = Math.min(_y0, _y1);\n            var y1 = Math.max(_y0, _y1);\n\n            eventData.bbox = {\n                x0: x0 + gLeft,\n                x1: x1 + gLeft,\n                y0: y0 + gTop,\n                y1: y1 + gTop\n            };\n        }\n\n        pt.eventData = [eventData];\n        newhoverdata.push(eventData);\n    }\n\n    gd._hoverdata = newhoverdata;\n\n    var rotateLabels = (\n        (hovermode === 'y' && (searchData.length > 1 || hoverData.length > 1)) ||\n        (hovermode === 'closest' && hasOneHorizontalTrace && hoverData.length > 1)\n    );\n\n    var bgColor = Color.combine(\n        fullLayout.plot_bgcolor || Color.background,\n        fullLayout.paper_bgcolor\n    );\n\n    var hoverText = createHoverText(hoverData, {\n        gd: gd,\n        hovermode: hovermode,\n        rotateLabels: rotateLabels,\n        bgColor: bgColor,\n        container: fullLayout._hoverlayer,\n        outerContainer: fullLayout._paper.node(),\n        commonLabelOpts: fullLayout.hoverlabel,\n        hoverdistance: fullLayout.hoverdistance\n    });\n    var hoverLabels = hoverText.hoverLabels;\n\n    if(!helpers.isUnifiedHover(hovermode)) {\n        hoverAvoidOverlaps(hoverLabels, rotateLabels, fullLayout, hoverText.commonLabelBoundingBox);\n        alignHoverText(hoverLabels, rotateLabels, fullLayout._invScaleX, fullLayout._invScaleY);\n    }    // TODO: tagName hack is needed to appease geo.js's hack of using eventTarget=true\n    // we should improve the \"fx\" API so other plots can use it without these hack.\n    if(eventTarget && eventTarget.tagName) {\n        var hasClickToShow = Registry.getComponentMethod('annotations', 'hasClickToShow')(gd, newhoverdata);\n        overrideCursor(d3.select(eventTarget), hasClickToShow ? 'pointer' : '');\n    }\n\n    // don't emit events if called manually\n    if(!eventTarget || noHoverEvent || !hoverChanged(gd, evt, oldhoverdata)) return;\n\n    if(oldhoverdata) {\n        gd.emit('plotly_unhover', {\n            event: evt,\n            points: oldhoverdata\n        });\n    }\n\n    gd.emit('plotly_hover', {\n        event: evt,\n        points: gd._hoverdata,\n        xaxes: xaArray,\n        yaxes: yaArray,\n        xvals: xvalArray,\n        yvals: yvalArray\n    });\n}\n\nfunction hoverDataKey(d) {\n    return [d.trace.index, d.index, d.x0, d.y0, d.name, d.attr, d.xa ? d.xa._id : '', d.ya ? d.ya._id : ''].join(',');\n}\n\nvar EXTRA_STRING_REGEX = /<extra>([\\s\\S]*)<\\/extra>/;\n\nfunction createHoverText(hoverData, opts) {\n    var gd = opts.gd;\n    var fullLayout = gd._fullLayout;\n    var hovermode = opts.hovermode;\n    var rotateLabels = opts.rotateLabels;\n    var bgColor = opts.bgColor;\n    var container = opts.container;\n    var outerContainer = opts.outerContainer;\n    var commonLabelOpts = opts.commonLabelOpts || {};\n    // Early exit if no labels are drawn\n    if(hoverData.length === 0) return [[]];\n\n    // opts.fontFamily/Size are used for the common label\n    // and as defaults for each hover label, though the individual labels\n    // can override this.\n    var fontFamily = opts.fontFamily || constants.HOVERFONT;\n    var fontSize = opts.fontSize || constants.HOVERFONTSIZE;\n\n    var c0 = hoverData[0];\n    var xa = c0.xa;\n    var ya = c0.ya;\n    var axLetter = hovermode.charAt(0);\n    var axLabel = axLetter + 'Label';\n    var t0 = c0[axLabel];\n\n    // search in array for the label\n    if(t0 === undefined && xa.type === 'multicategory') {\n        for(var q = 0; q < hoverData.length; q++) {\n            t0 = hoverData[q][axLabel];\n            if(t0 !== undefined) break;\n        }\n    }\n\n    var outerContainerBB = getBoundingClientRect(gd, outerContainer);\n    var outerTop = outerContainerBB.top;\n    var outerWidth = outerContainerBB.width;\n    var outerHeight = outerContainerBB.height;\n\n    // show the common label, if any, on the axis\n    // never show a common label in array mode,\n    // even if sometimes there could be one\n    var showCommonLabel = (\n        (t0 !== undefined) &&\n        (c0.distance <= opts.hoverdistance) &&\n        (hovermode === 'x' || hovermode === 'y')\n    );\n\n    // all hover traces hoverinfo must contain the hovermode\n    // to have common labels\n    if(showCommonLabel) {\n        var allHaveZ = true;\n        var i, traceHoverinfo;\n        for(i = 0; i < hoverData.length; i++) {\n            if(allHaveZ && hoverData[i].zLabel === undefined) allHaveZ = false;\n\n            traceHoverinfo = hoverData[i].hoverinfo || hoverData[i].trace.hoverinfo;\n            if(traceHoverinfo) {\n                var parts = Array.isArray(traceHoverinfo) ? traceHoverinfo : traceHoverinfo.split('+');\n                if(parts.indexOf('all') === -1 &&\n                    parts.indexOf(hovermode) === -1) {\n                    showCommonLabel = false;\n                    break;\n                }\n            }\n        }\n\n        // xyz labels put all info in their main label, so have no need of a common label\n        if(allHaveZ) showCommonLabel = false;\n    }\n\n    var commonLabel = container.selectAll('g.axistext')\n        .data(showCommonLabel ? [0] : []);\n    commonLabel.enter().append('g')\n        .classed('axistext', true);\n    commonLabel.exit().remove();\n\n    // set rect (without arrow) behind label below for later collision detection\n    var commonLabelRect = {\n        minX: 0,\n        maxX: 0,\n        minY: 0,\n        maxY: 0\n    };\n    commonLabel.each(function() {\n        var label = d3.select(this);\n        var lpath = Lib.ensureSingle(label, 'path', '', function(s) {\n            s.style({'stroke-width': '1px'});\n        });\n        var ltext = Lib.ensureSingle(label, 'text', '', function(s) {\n            // prohibit tex interpretation until we can handle\n            // tex and regular text together\n            s.attr('data-notex', 1);\n        });\n\n        var commonBgColor = commonLabelOpts.bgcolor || Color.defaultLine;\n        var commonStroke = commonLabelOpts.bordercolor || Color.contrast(commonBgColor);\n        var contrastColor = Color.contrast(commonBgColor);\n        var commonLabelFont = {\n            family: commonLabelOpts.font.family || fontFamily,\n            size: commonLabelOpts.font.size || fontSize,\n            color: commonLabelOpts.font.color || contrastColor\n        };\n\n        lpath.style({\n            fill: commonBgColor,\n            stroke: commonStroke\n        });\n\n        ltext.text(t0)\n            .call(Drawing.font, commonLabelFont)\n            .call(svgTextUtils.positionText, 0, 0)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        label.attr('transform', '');\n\n        var tbb = getBoundingClientRect(gd, ltext.node());\n        var lx, ly;\n\n        if(hovermode === 'x') {\n            var topsign = xa.side === 'top' ? '-' : '';\n\n            ltext.attr('text-anchor', 'middle')\n                .call(svgTextUtils.positionText, 0, (xa.side === 'top' ?\n                    (outerTop - tbb.bottom - HOVERARROWSIZE - HOVERTEXTPAD) :\n                    (outerTop - tbb.top + HOVERARROWSIZE + HOVERTEXTPAD)));\n\n            lx = xa._offset + (c0.x0 + c0.x1) / 2;\n            ly = ya._offset + (xa.side === 'top' ? 0 : ya._length);\n\n            var halfWidth = tbb.width / 2 + HOVERTEXTPAD;\n\n            if(lx < halfWidth) {\n                lx = halfWidth;\n\n                lpath.attr('d', 'M-' + (halfWidth - HOVERARROWSIZE) + ',0' +\n                    'L-' + (halfWidth - HOVERARROWSIZE * 2) + ',' + topsign + HOVERARROWSIZE +\n                    'H' + (halfWidth) +\n                    'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                    'H-' + halfWidth +\n                    'V' + topsign + HOVERARROWSIZE +\n                    'Z');\n            } else if(lx > (fullLayout.width - halfWidth)) {\n                lx = fullLayout.width - halfWidth;\n\n                lpath.attr('d', 'M' + (halfWidth - HOVERARROWSIZE) + ',0' +\n                    'L' + halfWidth + ',' + topsign + HOVERARROWSIZE +\n                    'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                    'H-' + halfWidth +\n                    'V' + topsign + HOVERARROWSIZE +\n                    'H' + (halfWidth - HOVERARROWSIZE * 2) + 'Z');\n            } else {\n                lpath.attr('d', 'M0,0' +\n                    'L' + HOVERARROWSIZE + ',' + topsign + HOVERARROWSIZE +\n                    'H' + (halfWidth) +\n                    'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                    'H-' + (halfWidth) +\n                    'V' + topsign + HOVERARROWSIZE +\n                    'H-' + HOVERARROWSIZE + 'Z');\n            }\n\n            commonLabelRect.minX = lx - halfWidth;\n            commonLabelRect.maxX = lx + halfWidth;\n            if(xa.side === 'top') {\n                // label on negative y side\n                commonLabelRect.minY = ly - (HOVERTEXTPAD * 2 + tbb.height);\n                commonLabelRect.maxY = ly - HOVERTEXTPAD;\n            } else {\n                commonLabelRect.minY = ly + HOVERTEXTPAD;\n                commonLabelRect.maxY = ly + (HOVERTEXTPAD * 2 + tbb.height);\n            }\n        } else {\n            var anchor;\n            var sgn;\n            var leftsign;\n            if(ya.side === 'right') {\n                anchor = 'start';\n                sgn = 1;\n                leftsign = '';\n                lx = xa._offset + xa._length;\n            } else {\n                anchor = 'end';\n                sgn = -1;\n                leftsign = '-';\n                lx = xa._offset;\n            }\n\n            ly = ya._offset + (c0.y0 + c0.y1) / 2;\n\n            ltext.attr('text-anchor', anchor);\n\n            lpath.attr('d', 'M0,0' +\n                'L' + leftsign + HOVERARROWSIZE + ',' + HOVERARROWSIZE +\n                'V' + (HOVERTEXTPAD + tbb.height / 2) +\n                'h' + leftsign + (HOVERTEXTPAD * 2 + tbb.width) +\n                'V-' + (HOVERTEXTPAD + tbb.height / 2) +\n                'H' + leftsign + HOVERARROWSIZE + 'V-' + HOVERARROWSIZE + 'Z');\n\n            commonLabelRect.minY = ly - (HOVERTEXTPAD + tbb.height / 2);\n            commonLabelRect.maxY = ly + (HOVERTEXTPAD + tbb.height / 2);\n            if(ya.side === 'right') {\n                commonLabelRect.minX = lx + HOVERARROWSIZE;\n                commonLabelRect.maxX = lx + HOVERARROWSIZE + (HOVERTEXTPAD * 2 + tbb.width);\n            } else {\n                // label on negative x side\n                commonLabelRect.minX = lx - HOVERARROWSIZE - (HOVERTEXTPAD * 2 + tbb.width);\n                commonLabelRect.maxX = lx - HOVERARROWSIZE;\n            }\n\n            var halfHeight = tbb.height / 2;\n            var lty = outerTop - tbb.top - halfHeight;\n            var clipId = 'clip' + fullLayout._uid + 'commonlabel' + ya._id;\n            var clipPath;\n\n            if(lx < (tbb.width + 2 * HOVERTEXTPAD + HOVERARROWSIZE)) {\n                clipPath = 'M-' + (HOVERARROWSIZE + HOVERTEXTPAD) + '-' + halfHeight +\n                    'h-' + (tbb.width - HOVERTEXTPAD) +\n                    'V' + halfHeight +\n                    'h' + (tbb.width - HOVERTEXTPAD) + 'Z';\n\n                var ltx = tbb.width - lx + HOVERTEXTPAD;\n                svgTextUtils.positionText(ltext, ltx, lty);\n\n                // shift each line (except the longest) so that start-of-line\n                // is always visible\n                if(anchor === 'end') {\n                    ltext.selectAll('tspan').each(function() {\n                        var s = d3.select(this);\n                        var dummy = Drawing.tester.append('text')\n                            .text(s.text())\n                            .call(Drawing.font, commonLabelFont);\n                        var dummyBB = getBoundingClientRect(gd, dummy.node());\n                        if(Math.round(dummyBB.width) < Math.round(tbb.width)) {\n                            s.attr('x', ltx - dummyBB.width);\n                        }\n                        dummy.remove();\n                    });\n                }\n            } else {\n                svgTextUtils.positionText(ltext, sgn * (HOVERTEXTPAD + HOVERARROWSIZE), lty);\n                clipPath = null;\n            }\n\n            var textClip = fullLayout._topclips.selectAll('#' + clipId).data(clipPath ? [0] : []);\n            textClip.enter().append('clipPath').attr('id', clipId).append('path');\n            textClip.exit().remove();\n            textClip.select('path').attr('d', clipPath);\n            Drawing.setClipUrl(ltext, clipPath ? clipId : null, gd);\n        }\n\n        label.attr('transform', strTranslate(lx, ly));\n    });\n\n    // Show a single hover label\n    if(helpers.isUnifiedHover(hovermode)) {\n        // Delete leftover hover labels from other hovermodes\n        container.selectAll('g.hovertext').remove();\n        var groupedHoverData = hoverData.filter(function(data) {return data.hoverinfo !== 'none';});\n        // Return early if nothing is hovered on\n        if(groupedHoverData.length === 0) return;\n\n        // mock legend\n        var hoverlabel = fullLayout.hoverlabel;\n        var font = hoverlabel.font;\n        var mockLayoutIn = {\n            showlegend: true,\n            legend: {\n                title: {text: t0, font: font},\n                font: font,\n                bgcolor: hoverlabel.bgcolor,\n                bordercolor: hoverlabel.bordercolor,\n                borderwidth: 1,\n                tracegroupgap: 7,\n                traceorder: fullLayout.legend ? fullLayout.legend.traceorder : undefined,\n                orientation: 'v'\n            }\n        };\n        var mockLayoutOut = {\n            font: font\n        };\n        legendSupplyDefaults(mockLayoutIn, mockLayoutOut, gd._fullData);\n        var mockLegend = mockLayoutOut.legend;\n\n        // prepare items for the legend\n        mockLegend.entries = [];\n        for(var j = 0; j < groupedHoverData.length; j++) {\n            var pt = groupedHoverData[j];\n            if(pt.hoverinfo === 'none') continue;\n\n            var texts = getHoverLabelText(pt, true, hovermode, fullLayout, t0);\n            var text = texts[0];\n            var name = texts[1];\n\n            pt.name = name;\n            if(name !== '') {\n                pt.text = name + ' : ' + text;\n            } else {\n                pt.text = text;\n            }\n\n            // pass through marker's calcdata to style legend items\n            var cd = pt.cd[pt.index];\n            if(cd) {\n                if(cd.mc) pt.mc = cd.mc;\n                if(cd.mcc) pt.mc = cd.mcc;\n                if(cd.mlc) pt.mlc = cd.mlc;\n                if(cd.mlcc) pt.mlc = cd.mlcc;\n                if(cd.mlw) pt.mlw = cd.mlw;\n                if(cd.mrc) pt.mrc = cd.mrc;\n                if(cd.dir) pt.dir = cd.dir;\n            }\n            pt._distinct = true;\n\n            mockLegend.entries.push([pt]);\n        }\n        mockLegend.entries.sort(function(a, b) { return a[0].trace.index - b[0].trace.index;});\n        mockLegend.layer = container;\n\n        // Draw unified hover label\n        mockLegend._inHover = true;\n        mockLegend._groupTitleFont = hoverlabel.grouptitlefont;\n\n        legendDraw(gd, mockLegend);\n\n        // Position the hover\n        var legendContainer = container.select('g.legend');\n        var tbb = getBoundingClientRect(gd, legendContainer.node());\n        var tWidth = tbb.width + 2 * HOVERTEXTPAD;\n        var tHeight = tbb.height + 2 * HOVERTEXTPAD;\n        var winningPoint = groupedHoverData[0];\n        var avgX = (winningPoint.x0 + winningPoint.x1) / 2;\n        var avgY = (winningPoint.y0 + winningPoint.y1) / 2;\n        // When a scatter (or e.g. heatmap) point wins, it's OK for the hovelabel to occlude the bar and other points.\n        var pointWon = !(\n            Registry.traceIs(winningPoint.trace, 'bar-like') ||\n            Registry.traceIs(winningPoint.trace, 'box-violin')\n        );\n\n        var lyBottom, lyTop;\n        if(axLetter === 'y') {\n            if(pointWon) {\n                lyTop = avgY - HOVERTEXTPAD;\n                lyBottom = avgY + HOVERTEXTPAD;\n            } else {\n                lyTop = Math.min.apply(null, groupedHoverData.map(function(c) { return Math.min(c.y0, c.y1); }));\n                lyBottom = Math.max.apply(null, groupedHoverData.map(function(c) { return Math.max(c.y0, c.y1); }));\n            }\n        } else {\n            lyTop = lyBottom = Lib.mean(groupedHoverData.map(function(c) { return (c.y0 + c.y1) / 2; })) - tHeight / 2;\n        }\n\n        var lxRight, lxLeft;\n        if(axLetter === 'x') {\n            if(pointWon) {\n                lxRight = avgX + HOVERTEXTPAD;\n                lxLeft = avgX - HOVERTEXTPAD;\n            } else {\n                lxRight = Math.max.apply(null, groupedHoverData.map(function(c) { return Math.max(c.x0, c.x1); }));\n                lxLeft = Math.min.apply(null, groupedHoverData.map(function(c) { return Math.min(c.x0, c.x1); }));\n            }\n        } else {\n            lxRight = lxLeft = Lib.mean(groupedHoverData.map(function(c) { return (c.x0 + c.x1) / 2; })) - tWidth / 2;\n        }\n\n        var xOffset = xa._offset;\n        var yOffset = ya._offset;\n        lyBottom += yOffset;\n        lxRight += xOffset;\n        lxLeft += xOffset - tWidth;\n        lyTop += yOffset - tHeight;\n\n        var lx, ly; // top and left positions of the hover box\n\n        // horizontal alignment to end up on screen\n        if(lxRight + tWidth < outerWidth && lxRight >= 0) {\n            lx = lxRight;\n        } else if(lxLeft + tWidth < outerWidth && lxLeft >= 0) {\n            lx = lxLeft;\n        } else if(xOffset + tWidth < outerWidth) {\n            lx = xOffset; // subplot left corner\n        } else {\n            // closest left or right side of the paper\n            if(lxRight - avgX < avgX - lxLeft + tWidth) {\n                lx = outerWidth - tWidth;\n            } else {\n                lx = 0;\n            }\n        }\n        lx += HOVERTEXTPAD;\n\n        // vertical alignement to end up on screen\n        if(lyBottom + tHeight < outerHeight && lyBottom >= 0) {\n            ly = lyBottom;\n        } else if(lyTop + tHeight < outerHeight && lyTop >= 0) {\n            ly = lyTop;\n        } else if(yOffset + tHeight < outerHeight) {\n            ly = yOffset; // subplot top corner\n        } else {\n            // closest top or bottom side of the paper\n            if(lyBottom - avgY < avgY - lyTop + tHeight) {\n                ly = outerHeight - tHeight;\n            } else {\n                ly = 0;\n            }\n        }\n        ly += HOVERTEXTPAD;\n\n        legendContainer.attr('transform', strTranslate(lx - 1, ly - 1));\n        return legendContainer;\n    }\n\n    // show all the individual labels\n\n    // first create the objects\n    var hoverLabels = container.selectAll('g.hovertext')\n        .data(hoverData, function(d) {\n            // N.B. when multiple items have the same result key-function value,\n            // only the first of those items in hoverData gets rendered\n            return hoverDataKey(d);\n        });\n    hoverLabels.enter().append('g')\n        .classed('hovertext', true)\n        .each(function() {\n            var g = d3.select(this);\n            // trace name label (rect and text.name)\n            g.append('rect')\n                .call(Color.fill, Color.addOpacity(bgColor, 0.8));\n            g.append('text').classed('name', true);\n            // trace data label (path and text.nums)\n            g.append('path')\n                .style('stroke-width', '1px');\n            g.append('text').classed('nums', true)\n                .call(Drawing.font, fontFamily, fontSize);\n        });\n    hoverLabels.exit().remove();\n\n    // then put the text in, position the pointer to the data,\n    // and figure out sizes\n    hoverLabels.each(function(d) {\n        var g = d3.select(this).attr('transform', '');\n\n        var dColor = d.color;\n        if(Array.isArray(dColor)) {\n            dColor = dColor[d.eventData[0].pointNumber];\n        }\n\n        // combine possible non-opaque trace color with bgColor\n        var color0 = d.bgcolor || dColor;\n        // color for 'nums' part of the label\n        var numsColor = Color.combine(\n            Color.opacity(color0) ? color0 : Color.defaultLine,\n            bgColor\n        );\n        // color for 'name' part of the label\n        var nameColor = Color.combine(\n            Color.opacity(dColor) ? dColor : Color.defaultLine,\n            bgColor\n        );\n        // find a contrasting color for border and text\n        var contrastColor = d.borderColor || Color.contrast(numsColor);\n\n        var texts = getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g);\n        var text = texts[0];\n        var name = texts[1];\n\n        // main label\n        var tx = g.select('text.nums')\n            .call(Drawing.font,\n                d.fontFamily || fontFamily,\n                d.fontSize || fontSize,\n                d.fontColor || contrastColor)\n            .text(text)\n            .attr('data-notex', 1)\n            .call(svgTextUtils.positionText, 0, 0)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        var tx2 = g.select('text.name');\n        var tx2width = 0;\n        var tx2height = 0;\n\n        // secondary label for non-empty 'name'\n        if(name && name !== text) {\n            tx2.call(Drawing.font,\n                    d.fontFamily || fontFamily,\n                    d.fontSize || fontSize,\n                    nameColor)\n                .text(name)\n                .attr('data-notex', 1)\n                .call(svgTextUtils.positionText, 0, 0)\n                .call(svgTextUtils.convertToTspans, gd);\n\n            var t2bb = getBoundingClientRect(gd, tx2.node());\n            tx2width = t2bb.width + 2 * HOVERTEXTPAD;\n            tx2height = t2bb.height + 2 * HOVERTEXTPAD;\n        } else {\n            tx2.remove();\n            g.select('rect').remove();\n        }\n\n        g.select('path').style({\n            fill: numsColor,\n            stroke: contrastColor\n        });\n\n        var htx = d.xa._offset + (d.x0 + d.x1) / 2;\n        var hty = d.ya._offset + (d.y0 + d.y1) / 2;\n        var dx = Math.abs(d.x1 - d.x0);\n        var dy = Math.abs(d.y1 - d.y0);\n\n        var tbb = getBoundingClientRect(gd, tx.node());\n        var tbbWidth = tbb.width / fullLayout._invScaleX;\n        var tbbHeight = tbb.height / fullLayout._invScaleY;\n\n        d.ty0 = (outerTop - tbb.top) / fullLayout._invScaleY;\n        d.bx = tbbWidth + 2 * HOVERTEXTPAD;\n        d.by = Math.max(tbbHeight + 2 * HOVERTEXTPAD, tx2height);\n        d.anchor = 'start';\n        d.txwidth = tbbWidth;\n        d.tx2width = tx2width;\n        d.offset = 0;\n\n        var txTotalWidth = (tbbWidth + HOVERARROWSIZE + HOVERTEXTPAD + tx2width) * fullLayout._invScaleX;\n        var anchorStartOK, anchorEndOK;\n\n        if(rotateLabels) {\n            d.pos = htx;\n            anchorStartOK = hty + dy / 2 + txTotalWidth <= outerHeight;\n            anchorEndOK = hty - dy / 2 - txTotalWidth >= 0;\n            if((d.idealAlign === 'top' || !anchorStartOK) && anchorEndOK) {\n                hty -= dy / 2;\n                d.anchor = 'end';\n            } else if(anchorStartOK) {\n                hty += dy / 2;\n                d.anchor = 'start';\n            } else {\n                d.anchor = 'middle';\n            }\n            d.crossPos = hty;\n        } else {\n            d.pos = hty;\n            anchorStartOK = htx + dx / 2 + txTotalWidth <= outerWidth;\n            anchorEndOK = htx - dx / 2 - txTotalWidth >= 0;\n\n            if((d.idealAlign === 'left' || !anchorStartOK) && anchorEndOK) {\n                htx -= dx / 2;\n                d.anchor = 'end';\n            } else if(anchorStartOK) {\n                htx += dx / 2;\n                d.anchor = 'start';\n            } else {\n                d.anchor = 'middle';\n\n                var txHalfWidth = txTotalWidth / 2;\n                var overflowR = htx + txHalfWidth - outerWidth;\n                var overflowL = htx - txHalfWidth;\n                if(overflowR > 0) htx -= overflowR;\n                if(overflowL < 0) htx += -overflowL;\n            }\n            d.crossPos = htx;\n        }\n\n        tx.attr('text-anchor', d.anchor);\n        if(tx2width) tx2.attr('text-anchor', d.anchor);\n        g.attr('transform', strTranslate(htx, hty) +\n            (rotateLabels ? strRotate(YANGLE) : ''));\n    });\n\n    return {\n        hoverLabels: hoverLabels,\n        commonLabelBoundingBox: commonLabelRect\n    };\n}\n\nfunction getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g) {\n    var name = '';\n    var text = '';\n    // to get custom 'name' labels pass cleanPoint\n    if(d.nameOverride !== undefined) d.name = d.nameOverride;\n\n    if(d.name) {\n        if(d.trace._meta) {\n            d.name = Lib.templateString(d.name, d.trace._meta);\n        }\n        name = plainText(d.name, d.nameLength);\n    }\n\n    var h0 = hovermode.charAt(0);\n    var h1 = h0 === 'x' ? 'y' : 'x';\n\n    if(d.zLabel !== undefined) {\n        if(d.xLabel !== undefined) text += 'x: ' + d.xLabel + '<br>';\n        if(d.yLabel !== undefined) text += 'y: ' + d.yLabel + '<br>';\n        if(d.trace.type !== 'choropleth' && d.trace.type !== 'choroplethmapbox') {\n            text += (text ? 'z: ' : '') + d.zLabel;\n        }\n    } else if(showCommonLabel && d[h0 + 'Label'] === t0) {\n        text = d[h1 + 'Label'] || '';\n    } else if(d.xLabel === undefined) {\n        if(d.yLabel !== undefined && d.trace.type !== 'scattercarpet') {\n            text = d.yLabel;\n        }\n    } else if(d.yLabel === undefined) text = d.xLabel;\n    else text = '(' + d.xLabel + ', ' + d.yLabel + ')';\n\n    if((d.text || d.text === 0) && !Array.isArray(d.text)) {\n        text += (text ? '<br>' : '') + d.text;\n    }\n\n    // used by other modules (initially just ternary) that\n    // manage their own hoverinfo independent of cleanPoint\n    // the rest of this will still apply, so such modules\n    // can still put things in (x|y|z)Label, text, and name\n    // and hoverinfo will still determine their visibility\n    if(d.extraText !== undefined) text += (text ? '<br>' : '') + d.extraText;\n\n    // if 'text' is empty at this point,\n    // and hovertemplate is not defined,\n    // put 'name' in main label and don't show secondary label\n    if(g && text === '' && !d.hovertemplate) {\n        // if 'name' is also empty, remove entire label\n        if(name === '') g.remove();\n        text = name;\n    }\n\n    // hovertemplate\n    var hovertemplate = d.hovertemplate || false;\n    if(hovertemplate) {\n        var labels = d.hovertemplateLabels || d;\n\n        if(d[h0 + 'Label'] !== t0) {\n            labels[h0 + 'other'] = labels[h0 + 'Val'];\n            labels[h0 + 'otherLabel'] = labels[h0 + 'Label'];\n        }\n\n        text = Lib.hovertemplateString(\n            hovertemplate,\n            labels,\n            fullLayout._d3locale,\n            d.eventData[0] || {},\n            d.trace._meta\n        );\n\n        text = text.replace(EXTRA_STRING_REGEX, function(match, extra) {\n            // assign name for secondary text label\n            name = plainText(extra, d.nameLength);\n            // remove from main text label\n            return '';\n        });\n    }\n    return [text, name];\n}\n\n// Make groups of touching points, and within each group\n// move each point so that no labels overlap, but the average\n// label position is the same as it was before moving. Incidentally,\n// this is equivalent to saying all the labels are on equal linear\n// springs about their initial position. Initially, each point is\n// its own group, but as we find overlaps we will clump the points.\n//\n// Also, there are hard constraints at the edges of the graphs,\n// that push all groups to the middle so they are visible. I don't\n// know what happens if the group spans all the way from one edge to\n// the other, though it hardly matters - there's just too much\n// information then.\nfunction hoverAvoidOverlaps(hoverLabels, rotateLabels, fullLayout, commonLabelBoundingBox) {\n    var axKey = rotateLabels ? 'xa' : 'ya';\n    var crossAxKey = rotateLabels ? 'ya' : 'xa';\n    var nummoves = 0;\n    var axSign = 1;\n    var nLabels = hoverLabels.size();\n\n    // make groups of touching points\n    var pointgroups = new Array(nLabels);\n    var k = 0;\n\n    // get extent of axis hover label\n    var axisLabelMinX = commonLabelBoundingBox.minX;\n    var axisLabelMaxX = commonLabelBoundingBox.maxX;\n    var axisLabelMinY = commonLabelBoundingBox.minY;\n    var axisLabelMaxY = commonLabelBoundingBox.maxY;\n\n    var pX = function(x) { return x * fullLayout._invScaleX; };\n    var pY = function(y) { return y * fullLayout._invScaleY; };\n\n    hoverLabels.each(function(d) {\n        var ax = d[axKey];\n        var crossAx = d[crossAxKey];\n        var axIsX = ax._id.charAt(0) === 'x';\n        var rng = ax.range;\n\n        if(k === 0 && rng && ((rng[0] > rng[1]) !== axIsX)) {\n            axSign = -1;\n        }\n        var pmin = 0;\n        var pmax = (axIsX ? fullLayout.width : fullLayout.height);\n        // in hovermode avoid overlap between hover labels and axis label\n        if(fullLayout.hovermode === 'x' || fullLayout.hovermode === 'y') {\n            // extent of rect behind hover label on cross axis:\n            var offsets = getHoverLabelOffsets(d, rotateLabels);\n            var anchor = d.anchor;\n            var horzSign = anchor === 'end' ? -1 : 1;\n            var labelMin;\n            var labelMax;\n            if(anchor === 'middle') {\n                // use extent of centered rect either on x or y axis depending on current axis\n                labelMin = d.crossPos + (axIsX ? pY(offsets.y - d.by / 2) : pX(d.bx / 2 + d.tx2width / 2));\n                labelMax = labelMin + (axIsX ? pY(d.by) : pX(d.bx));\n            } else {\n                // use extend of path (see alignHoverText function) without arrow\n                if(axIsX) {\n                    labelMin = d.crossPos + pY(HOVERARROWSIZE + offsets.y) - pY(d.by / 2 - HOVERARROWSIZE);\n                    labelMax = labelMin + pY(d.by);\n                } else {\n                    var startX = pX(horzSign * HOVERARROWSIZE + offsets.x);\n                    var endX = startX + pX(horzSign * d.bx);\n                    labelMin = d.crossPos + Math.min(startX, endX);\n                    labelMax = d.crossPos + Math.max(startX, endX);\n                }\n            }\n\n            if(axIsX) {\n                if(axisLabelMinY !== undefined && axisLabelMaxY !== undefined && Math.min(labelMax, axisLabelMaxY) - Math.max(labelMin, axisLabelMinY) > 1) {\n                    // has at least 1 pixel overlap with axis label\n                    if(crossAx.side === 'left') {\n                        pmin = crossAx._mainLinePosition;\n                        pmax = fullLayout.width;\n                    } else {\n                        pmax = crossAx._mainLinePosition;\n                    }\n                }\n            } else {\n                if(axisLabelMinX !== undefined && axisLabelMaxX !== undefined && Math.min(labelMax, axisLabelMaxX) - Math.max(labelMin, axisLabelMinX) > 1) {\n                    // has at least 1 pixel overlap with axis label\n                    if(crossAx.side === 'top') {\n                        pmin = crossAx._mainLinePosition;\n                        pmax = fullLayout.height;\n                    } else {\n                        pmax = crossAx._mainLinePosition;\n                    }\n                }\n            }\n        }\n\n        pointgroups[k++] = [{\n            datum: d,\n            traceIndex: d.trace.index,\n            dp: 0,\n            pos: d.pos,\n            posref: d.posref,\n            size: d.by * (axIsX ? YFACTOR : 1) / 2,\n            pmin: pmin,\n            pmax: pmax\n        }];\n    });\n\n    pointgroups.sort(function(a, b) {\n        return (a[0].posref - b[0].posref) ||\n            // for equal positions, sort trace indices increasing or decreasing\n            // depending on whether the axis is reversed or not... so stacked\n            // traces will generally keep their order even if one trace adds\n            // nothing to the stack.\n            (axSign * (b[0].traceIndex - a[0].traceIndex));\n    });\n\n    var donepositioning, topOverlap, bottomOverlap, i, j, pti, sumdp;\n\n    function constrainGroup(grp) {\n        var minPt = grp[0];\n        var maxPt = grp[grp.length - 1];\n\n        // overlap with the top - positive vals are overlaps\n        topOverlap = minPt.pmin - minPt.pos - minPt.dp + minPt.size;\n\n        // overlap with the bottom - positive vals are overlaps\n        bottomOverlap = maxPt.pos + maxPt.dp + maxPt.size - minPt.pmax;\n\n        // check for min overlap first, so that we always\n        // see the largest labels\n        // allow for .01px overlap, so we don't get an\n        // infinite loop from rounding errors\n        if(topOverlap > 0.01) {\n            for(j = grp.length - 1; j >= 0; j--) grp[j].dp += topOverlap;\n            donepositioning = false;\n        }\n        if(bottomOverlap < 0.01) return;\n        if(topOverlap < -0.01) {\n            // make sure we're not pushing back and forth\n            for(j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n            donepositioning = false;\n        }\n        if(!donepositioning) return;\n\n        // no room to fix positioning, delete off-screen points\n\n        // first see how many points we need to delete\n        var deleteCount = 0;\n        for(i = 0; i < grp.length; i++) {\n            pti = grp[i];\n            if(pti.pos + pti.dp + pti.size > minPt.pmax) deleteCount++;\n        }\n\n        // start by deleting points whose data is off screen\n        for(i = grp.length - 1; i >= 0; i--) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n\n            // pos has already been constrained to [pmin,pmax]\n            // so look for points close to that to delete\n            if(pti.pos > minPt.pmax - 1) {\n                pti.del = true;\n                deleteCount--;\n            }\n        }\n        for(i = 0; i < grp.length; i++) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n\n            // pos has already been constrained to [pmin,pmax]\n            // so look for points close to that to delete\n            if(pti.pos < minPt.pmin + 1) {\n                pti.del = true;\n                deleteCount--;\n\n                // shift the whole group minus into this new space\n                bottomOverlap = pti.size * 2;\n                for(j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n            }\n        }\n        // then delete points that go off the bottom\n        for(i = grp.length - 1; i >= 0; i--) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n            if(pti.pos + pti.dp + pti.size > minPt.pmax) {\n                pti.del = true;\n                deleteCount--;\n            }\n        }\n    }\n\n    // loop through groups, combining them if they overlap,\n    // until nothing moves\n    while(!donepositioning && nummoves <= nLabels) {\n        // to avoid infinite loops, don't move more times\n        // than there are traces\n        nummoves++;\n\n        // assume nothing will move in this iteration,\n        // reverse this if it does\n        donepositioning = true;\n        i = 0;\n        while(i < pointgroups.length - 1) {\n            // the higher (g0) and lower (g1) point group\n            var g0 = pointgroups[i];\n            var g1 = pointgroups[i + 1];\n\n            // the lowest point in the higher group (p0)\n            // the highest point in the lower group (p1)\n            var p0 = g0[g0.length - 1];\n            var p1 = g1[0];\n            topOverlap = p0.pos + p0.dp + p0.size - p1.pos - p1.dp + p1.size;\n\n            // Only group points that lie on the same axes\n            if(topOverlap > 0.01 && (p0.pmin === p1.pmin) && (p0.pmax === p1.pmax)) {\n                // push the new point(s) added to this group out of the way\n                for(j = g1.length - 1; j >= 0; j--) g1[j].dp += topOverlap;\n\n                // add them to the group\n                g0.push.apply(g0, g1);\n                pointgroups.splice(i + 1, 1);\n\n                // adjust for minimum average movement\n                sumdp = 0;\n                for(j = g0.length - 1; j >= 0; j--) sumdp += g0[j].dp;\n                bottomOverlap = sumdp / g0.length;\n                for(j = g0.length - 1; j >= 0; j--) g0[j].dp -= bottomOverlap;\n                donepositioning = false;\n            } else i++;\n        }\n\n        // check if we're going off the plot on either side and fix\n        pointgroups.forEach(constrainGroup);\n    }\n\n    // now put these offsets into hoverData\n    for(i = pointgroups.length - 1; i >= 0; i--) {\n        var grp = pointgroups[i];\n        for(j = grp.length - 1; j >= 0; j--) {\n            var pt = grp[j];\n            var hoverPt = pt.datum;\n            hoverPt.offset = pt.dp;\n            hoverPt.del = pt.del;\n        }\n    }\n}\n\nfunction getHoverLabelOffsets(hoverLabel, rotateLabels) {\n    var offsetX = 0;\n    var offsetY = hoverLabel.offset;\n\n    if(rotateLabels) {\n        offsetY *= -YSHIFTY;\n        offsetX = hoverLabel.offset * YSHIFTX;\n    }\n\n    return {\n        x: offsetX,\n        y: offsetY\n    };\n}\n\n/**\n * Calculate the shift in x for text and text2 elements\n */\nfunction getTextShiftX(hoverLabel) {\n    var alignShift = {start: 1, end: -1, middle: 0}[hoverLabel.anchor];\n    var textShiftX = alignShift * (HOVERARROWSIZE + HOVERTEXTPAD);\n    var text2ShiftX = textShiftX + alignShift * (hoverLabel.txwidth + HOVERTEXTPAD);\n\n    var isMiddle = hoverLabel.anchor === 'middle';\n    if(isMiddle) {\n        textShiftX -= hoverLabel.tx2width / 2;\n        text2ShiftX += hoverLabel.txwidth / 2 + HOVERTEXTPAD;\n    }\n\n    return {\n        alignShift: alignShift,\n        textShiftX: textShiftX,\n        text2ShiftX: text2ShiftX\n    };\n}\n\nfunction alignHoverText(hoverLabels, rotateLabels, scaleX, scaleY) {\n    var pX = function(x) { return x * scaleX; };\n    var pY = function(y) { return y * scaleY; };\n\n    // finally set the text positioning relative to the data and draw the\n    // box around it\n    hoverLabels.each(function(d) {\n        var g = d3.select(this);\n        if(d.del) return g.remove();\n\n        var tx = g.select('text.nums');\n        var anchor = d.anchor;\n        var horzSign = anchor === 'end' ? -1 : 1;\n        var shiftX = getTextShiftX(d);\n        var offsets = getHoverLabelOffsets(d, rotateLabels);\n        var offsetX = offsets.x;\n        var offsetY = offsets.y;\n\n        var isMiddle = anchor === 'middle';\n\n        g.select('path')\n            .attr('d', isMiddle ?\n            // middle aligned: rect centered on data\n            ('M-' + pX(d.bx / 2 + d.tx2width / 2) + ',' + pY(offsetY - d.by / 2) +\n              'h' + pX(d.bx) + 'v' + pY(d.by) + 'h-' + pX(d.bx) + 'Z') :\n            // left or right aligned: side rect with arrow to data\n            ('M0,0L' + pX(horzSign * HOVERARROWSIZE + offsetX) + ',' + pY(HOVERARROWSIZE + offsetY) +\n                'v' + pY(d.by / 2 - HOVERARROWSIZE) +\n                'h' + pX(horzSign * d.bx) +\n                'v-' + pY(d.by) +\n                'H' + pX(horzSign * HOVERARROWSIZE + offsetX) +\n                'V' + pY(offsetY - HOVERARROWSIZE) +\n                'Z'));\n\n        var posX = offsetX + shiftX.textShiftX;\n        var posY = offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD;\n        var textAlign = d.textAlign || 'auto';\n\n        if(textAlign !== 'auto') {\n            if(textAlign === 'left' && anchor !== 'start') {\n                tx.attr('text-anchor', 'start');\n                posX = isMiddle ?\n                    -d.bx / 2 - d.tx2width / 2 + HOVERTEXTPAD :\n                    -d.bx - HOVERTEXTPAD;\n            } else if(textAlign === 'right' && anchor !== 'end') {\n                tx.attr('text-anchor', 'end');\n                posX = isMiddle ?\n                    d.bx / 2 - d.tx2width / 2 - HOVERTEXTPAD :\n                    d.bx + HOVERTEXTPAD;\n            }\n        }\n\n        tx.call(svgTextUtils.positionText, pX(posX), pY(posY));\n\n        if(d.tx2width) {\n            g.select('text.name')\n                .call(svgTextUtils.positionText,\n                    pX(shiftX.text2ShiftX + shiftX.alignShift * HOVERTEXTPAD + offsetX),\n                    pY(offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD));\n            g.select('rect')\n                .call(Drawing.setRect,\n                    pX(shiftX.text2ShiftX + (shiftX.alignShift - 1) * d.tx2width / 2 + offsetX),\n                    pY(offsetY - d.by / 2 - 1),\n                    pX(d.tx2width), pY(d.by + 2));\n        }\n    });\n}\n\nfunction cleanPoint(d, hovermode) {\n    var index = d.index;\n    var trace = d.trace || {};\n    var cd0 = d.cd[0];\n    var cd = d.cd[index] || {};\n\n    function pass(v) {\n        return v || (isNumeric(v) && v === 0);\n    }\n\n    var getVal = Array.isArray(index) ?\n        function(calcKey, traceKey) {\n            var v = Lib.castOption(cd0, index, calcKey);\n            return pass(v) ? v : Lib.extractOption({}, trace, '', traceKey);\n        } :\n        function(calcKey, traceKey) {\n            return Lib.extractOption(cd, trace, calcKey, traceKey);\n        };\n\n    function fill(key, calcKey, traceKey) {\n        var val = getVal(calcKey, traceKey);\n        if(pass(val)) d[key] = val;\n    }\n\n    fill('hoverinfo', 'hi', 'hoverinfo');\n    fill('bgcolor', 'hbg', 'hoverlabel.bgcolor');\n    fill('borderColor', 'hbc', 'hoverlabel.bordercolor');\n    fill('fontFamily', 'htf', 'hoverlabel.font.family');\n    fill('fontSize', 'hts', 'hoverlabel.font.size');\n    fill('fontColor', 'htc', 'hoverlabel.font.color');\n    fill('nameLength', 'hnl', 'hoverlabel.namelength');\n    fill('textAlign', 'hta', 'hoverlabel.align');\n\n    d.posref = (hovermode === 'y' || (hovermode === 'closest' && trace.orientation === 'h')) ?\n        (d.xa._offset + (d.x0 + d.x1) / 2) :\n        (d.ya._offset + (d.y0 + d.y1) / 2);\n\n    // then constrain all the positions to be on the plot\n    d.x0 = Lib.constrain(d.x0, 0, d.xa._length);\n    d.x1 = Lib.constrain(d.x1, 0, d.xa._length);\n    d.y0 = Lib.constrain(d.y0, 0, d.ya._length);\n    d.y1 = Lib.constrain(d.y1, 0, d.ya._length);\n\n    // and convert the x and y label values into formatted text\n    if(d.xLabelVal !== undefined) {\n        d.xLabel = ('xLabel' in d) ? d.xLabel : Axes.hoverLabelText(d.xa, d.xLabelVal, trace.xhoverformat);\n        d.xVal = d.xa.c2d(d.xLabelVal);\n    }\n    if(d.yLabelVal !== undefined) {\n        d.yLabel = ('yLabel' in d) ? d.yLabel : Axes.hoverLabelText(d.ya, d.yLabelVal, trace.yhoverformat);\n        d.yVal = d.ya.c2d(d.yLabelVal);\n    }\n\n    // Traces like heatmaps generate the zLabel in their hoverPoints function\n    if(d.zLabelVal !== undefined && d.zLabel === undefined) {\n        d.zLabel = String(d.zLabelVal);\n    }\n\n    // for box means and error bars, add the range to the label\n    if(!isNaN(d.xerr) && !(d.xa.type === 'log' && d.xerr <= 0)) {\n        var xeText = Axes.tickText(d.xa, d.xa.c2l(d.xerr), 'hover').text;\n        if(d.xerrneg !== undefined) {\n            d.xLabel += ' +' + xeText + ' / -' +\n                Axes.tickText(d.xa, d.xa.c2l(d.xerrneg), 'hover').text;\n        } else d.xLabel += ' ± ' + xeText;\n\n        // small distance penalty for error bars, so that if there are\n        // traces with errors and some without, the error bar label will\n        // hoist up to the point\n        if(hovermode === 'x') d.distance += 1;\n    }\n    if(!isNaN(d.yerr) && !(d.ya.type === 'log' && d.yerr <= 0)) {\n        var yeText = Axes.tickText(d.ya, d.ya.c2l(d.yerr), 'hover').text;\n        if(d.yerrneg !== undefined) {\n            d.yLabel += ' +' + yeText + ' / -' +\n                Axes.tickText(d.ya, d.ya.c2l(d.yerrneg), 'hover').text;\n        } else d.yLabel += ' ± ' + yeText;\n\n        if(hovermode === 'y') d.distance += 1;\n    }\n\n    var infomode = d.hoverinfo || d.trace.hoverinfo;\n\n    if(infomode && infomode !== 'all') {\n        infomode = Array.isArray(infomode) ? infomode : infomode.split('+');\n        if(infomode.indexOf('x') === -1) d.xLabel = undefined;\n        if(infomode.indexOf('y') === -1) d.yLabel = undefined;\n        if(infomode.indexOf('z') === -1) d.zLabel = undefined;\n        if(infomode.indexOf('text') === -1) d.text = undefined;\n        if(infomode.indexOf('name') === -1) d.name = undefined;\n    }\n\n    return d;\n}\n\nfunction createSpikelines(gd, closestPoints, opts) {\n    var container = opts.container;\n    var fullLayout = opts.fullLayout;\n    var gs = fullLayout._size;\n    var evt = opts.event;\n    var showY = !!closestPoints.hLinePoint;\n    var showX = !!closestPoints.vLinePoint;\n\n    var xa, ya;\n\n    // Remove old spikeline items\n    container.selectAll('.spikeline').remove();\n\n    if(!(showX || showY)) return;\n\n    var contrastColor = Color.combine(fullLayout.plot_bgcolor, fullLayout.paper_bgcolor);\n\n    // Horizontal line (to y-axis)\n    if(showY) {\n        var hLinePoint = closestPoints.hLinePoint;\n        var hLinePointX, hLinePointY;\n\n        xa = hLinePoint && hLinePoint.xa;\n        ya = hLinePoint && hLinePoint.ya;\n        var ySnap = ya.spikesnap;\n\n        if(ySnap === 'cursor') {\n            hLinePointX = evt.pointerX;\n            hLinePointY = evt.pointerY;\n        } else {\n            hLinePointX = xa._offset + hLinePoint.x;\n            hLinePointY = ya._offset + hLinePoint.y;\n        }\n        var dfltHLineColor = tinycolor.readability(hLinePoint.color, contrastColor) < 1.5 ?\n            Color.contrast(contrastColor) : hLinePoint.color;\n        var yMode = ya.spikemode;\n        var yThickness = ya.spikethickness;\n        var yColor = ya.spikecolor || dfltHLineColor;\n        var xEdge = Axes.getPxPosition(gd, ya);\n        var xBase, xEndSpike;\n\n        if(yMode.indexOf('toaxis') !== -1 || yMode.indexOf('across') !== -1) {\n            if(yMode.indexOf('toaxis') !== -1) {\n                xBase = xEdge;\n                xEndSpike = hLinePointX;\n            }\n            if(yMode.indexOf('across') !== -1) {\n                var xAcross0 = ya._counterDomainMin;\n                var xAcross1 = ya._counterDomainMax;\n                if(ya.anchor === 'free') {\n                    xAcross0 = Math.min(xAcross0, ya.position);\n                    xAcross1 = Math.max(xAcross1, ya.position);\n                }\n                xBase = gs.l + xAcross0 * gs.w;\n                xEndSpike = gs.l + xAcross1 * gs.w;\n            }\n\n            // Foreground horizontal line (to y-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: xBase,\n                    x2: xEndSpike,\n                    y1: hLinePointY,\n                    y2: hLinePointY,\n                    'stroke-width': yThickness,\n                    stroke: yColor,\n                    'stroke-dasharray': Drawing.dashStyle(ya.spikedash, yThickness)\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n\n            // Background horizontal Line (to y-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: xBase,\n                    x2: xEndSpike,\n                    y1: hLinePointY,\n                    y2: hLinePointY,\n                    'stroke-width': yThickness + 2,\n                    stroke: contrastColor\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n        }\n        // Y axis marker\n        if(yMode.indexOf('marker') !== -1) {\n            container.insert('circle', ':first-child')\n                .attr({\n                    cx: xEdge + (ya.side !== 'right' ? yThickness : -yThickness),\n                    cy: hLinePointY,\n                    r: yThickness,\n                    fill: yColor\n                })\n                .classed('spikeline', true);\n        }\n    }\n\n    if(showX) {\n        var vLinePoint = closestPoints.vLinePoint;\n        var vLinePointX, vLinePointY;\n\n        xa = vLinePoint && vLinePoint.xa;\n        ya = vLinePoint && vLinePoint.ya;\n        var xSnap = xa.spikesnap;\n\n        if(xSnap === 'cursor') {\n            vLinePointX = evt.pointerX;\n            vLinePointY = evt.pointerY;\n        } else {\n            vLinePointX = xa._offset + vLinePoint.x;\n            vLinePointY = ya._offset + vLinePoint.y;\n        }\n        var dfltVLineColor = tinycolor.readability(vLinePoint.color, contrastColor) < 1.5 ?\n            Color.contrast(contrastColor) : vLinePoint.color;\n        var xMode = xa.spikemode;\n        var xThickness = xa.spikethickness;\n        var xColor = xa.spikecolor || dfltVLineColor;\n        var yEdge = Axes.getPxPosition(gd, xa);\n        var yBase, yEndSpike;\n\n        if(xMode.indexOf('toaxis') !== -1 || xMode.indexOf('across') !== -1) {\n            if(xMode.indexOf('toaxis') !== -1) {\n                yBase = yEdge;\n                yEndSpike = vLinePointY;\n            }\n            if(xMode.indexOf('across') !== -1) {\n                var yAcross0 = xa._counterDomainMin;\n                var yAcross1 = xa._counterDomainMax;\n                if(xa.anchor === 'free') {\n                    yAcross0 = Math.min(yAcross0, xa.position);\n                    yAcross1 = Math.max(yAcross1, xa.position);\n                }\n                yBase = gs.t + (1 - yAcross1) * gs.h;\n                yEndSpike = gs.t + (1 - yAcross0) * gs.h;\n            }\n\n            // Foreground vertical line (to x-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: vLinePointX,\n                    x2: vLinePointX,\n                    y1: yBase,\n                    y2: yEndSpike,\n                    'stroke-width': xThickness,\n                    stroke: xColor,\n                    'stroke-dasharray': Drawing.dashStyle(xa.spikedash, xThickness)\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n\n            // Background vertical line (to x-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: vLinePointX,\n                    x2: vLinePointX,\n                    y1: yBase,\n                    y2: yEndSpike,\n                    'stroke-width': xThickness + 2,\n                    stroke: contrastColor\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n        }\n\n        // X axis marker\n        if(xMode.indexOf('marker') !== -1) {\n            container.insert('circle', ':first-child')\n                .attr({\n                    cx: vLinePointX,\n                    cy: yEdge - (xa.side !== 'top' ? xThickness : -xThickness),\n                    r: xThickness,\n                    fill: xColor\n                })\n                .classed('spikeline', true);\n        }\n    }\n}\n\nfunction hoverChanged(gd, evt, oldhoverdata) {\n    // don't emit any events if nothing changed\n    if(!oldhoverdata || oldhoverdata.length !== gd._hoverdata.length) return true;\n\n    for(var i = oldhoverdata.length - 1; i >= 0; i--) {\n        var oldPt = oldhoverdata[i];\n        var newPt = gd._hoverdata[i];\n\n        if(oldPt.curveNumber !== newPt.curveNumber ||\n            String(oldPt.pointNumber) !== String(newPt.pointNumber) ||\n            String(oldPt.pointNumbers) !== String(newPt.pointNumbers)\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction spikesChanged(gd, oldspikepoints) {\n    // don't relayout the plot because of new spikelines if spikelines points didn't change\n    if(!oldspikepoints) return true;\n    if(oldspikepoints.vLinePoint !== gd._spikepoints.vLinePoint ||\n        oldspikepoints.hLinePoint !== gd._spikepoints.hLinePoint\n    ) return true;\n    return false;\n}\n\nfunction plainText(s, len) {\n    return svgTextUtils.plainText(s || '', {\n        len: len,\n        allowedTags: ['br', 'sub', 'sup', 'b', 'i', 'em']\n    });\n}\n\nfunction orderRangePoints(hoverData, hovermode) {\n    var axLetter = hovermode.charAt(0);\n\n    var first = [];\n    var second = [];\n    var last = [];\n\n    for(var i = 0; i < hoverData.length; i++) {\n        var d = hoverData[i];\n\n        if(\n            Registry.traceIs(d.trace, 'bar-like') ||\n            Registry.traceIs(d.trace, 'box-violin')\n        ) {\n            last.push(d);\n        } else if(d.trace[axLetter + 'period']) {\n            second.push(d);\n        } else {\n            first.push(d);\n        }\n    }\n\n    return first.concat(second).concat(last);\n}\n\nfunction getCoord(axLetter, winningPoint, fullLayout) {\n    var ax = winningPoint[axLetter + 'a'];\n    var val = winningPoint[axLetter + 'Val'];\n\n    var cd0 = winningPoint.cd[0];\n\n    if(ax.type === 'category' || ax.type === 'multicategory') val = ax._categoriesMap[val];\n    else if(ax.type === 'date') {\n        var periodalignment = winningPoint.trace[axLetter + 'periodalignment'];\n        if(periodalignment) {\n            var d = winningPoint.cd[winningPoint.index];\n\n            var start = d[axLetter + 'Start'];\n            if(start === undefined) start = d[axLetter];\n\n            var end = d[axLetter + 'End'];\n            if(end === undefined) end = d[axLetter];\n\n            var diff = end - start;\n\n            if(periodalignment === 'end') {\n                val += diff;\n            } else if(periodalignment === 'middle') {\n                val += diff / 2;\n            }\n        }\n\n        val = ax.d2c(val);\n    }\n\n    if(cd0 && cd0.t && cd0.t.posLetter === ax._id) {\n        if(\n            fullLayout.boxmode === 'group' ||\n            fullLayout.violinmode === 'group'\n        ) {\n            val += cd0.t.dPos;\n        }\n    }\n\n    return val;\n}\n\n// Top/left hover offsets relative to graph div. As long as hover content is\n// a sibling of the graph div, it will be positioned correctly relative to\n// the offset parent, whatever that may be.\nfunction getTopOffset(gd) { return gd.offsetTop + gd.clientTop; }\nfunction getLeftOffset(gd) { return gd.offsetLeft + gd.clientLeft; }\n\nfunction getBoundingClientRect(gd, node) {\n    var fullLayout = gd._fullLayout;\n\n    var rect = node.getBoundingClientRect();\n\n    var x0 = rect.left;\n    var y0 = rect.top;\n    var x1 = x0 + rect.width;\n    var y1 = y0 + rect.height;\n\n    var A = Lib.apply3DTransform(fullLayout._invTransform)(x0, y0);\n    var B = Lib.apply3DTransform(fullLayout._invTransform)(x1, y1);\n\n    var Ax = A[0];\n    var Ay = A[1];\n    var Bx = B[0];\n    var By = B[1];\n\n    return {\n        x: Ax,\n        y: Ay,\n        width: Bx - Ax,\n        height: By - Ay,\n        top: Math.min(Ay, By),\n        left: Math.min(Ax, Bx),\n        right: Math.max(Ax, Bx),\n        bottom: Math.max(Ay, By),\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}