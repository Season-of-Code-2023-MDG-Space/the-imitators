{"ast":null,"code":"'use strict';\n\nvar createSurface = require('../../../stackgl_modules').gl_surface3d;\nvar ndarray = require('../../../stackgl_modules').ndarray;\nvar ndarrayInterp2d = require('../../../stackgl_modules').ndarray_linear_interpolate.d2;\nvar interp2d = require('../heatmap/interp2d');\nvar findEmpties = require('../heatmap/find_empties');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nfunction SurfaceTrace(scene, surface, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.surface = surface;\n  this.data = null;\n  this.showContour = [false, false, false];\n  this.contourStart = [null, null, null];\n  this.contourEnd = [null, null, null];\n  this.contourSize = [0, 0, 0];\n  this.minValues = [Infinity, Infinity, Infinity];\n  this.maxValues = [-Infinity, -Infinity, -Infinity];\n  this.dataScaleX = 1.0;\n  this.dataScaleY = 1.0;\n  this.refineData = true;\n  this.objectOffset = [0, 0, 0];\n}\nvar proto = SurfaceTrace.prototype;\nproto.getXat = function (a, b, calendar, axis) {\n  var v = !isArrayOrTypedArray(this.data.x) ? a : isArrayOrTypedArray(this.data.x[0]) ? this.data.x[b][a] : this.data.x[a];\n  return calendar === undefined ? v : axis.d2l(v, 0, calendar);\n};\nproto.getYat = function (a, b, calendar, axis) {\n  var v = !isArrayOrTypedArray(this.data.y) ? b : isArrayOrTypedArray(this.data.y[0]) ? this.data.y[b][a] : this.data.y[b];\n  return calendar === undefined ? v : axis.d2l(v, 0, calendar);\n};\nproto.getZat = function (a, b, calendar, axis) {\n  var v = this.data.z[b][a];\n  if (v === null && this.data.connectgaps && this.data._interpolatedZ) {\n    v = this.data._interpolatedZ[b][a];\n  }\n  return calendar === undefined ? v : axis.d2l(v, 0, calendar);\n};\nproto.handlePick = function (selection) {\n  if (selection.object === this.surface) {\n    var xRatio = (selection.data.index[0] - 1) / this.dataScaleX - 1;\n    var yRatio = (selection.data.index[1] - 1) / this.dataScaleY - 1;\n    var j = Math.max(Math.min(Math.round(xRatio), this.data.z[0].length - 1), 0);\n    var k = Math.max(Math.min(Math.round(yRatio), this.data._ylength - 1), 0);\n    selection.index = [j, k];\n    selection.traceCoordinate = [this.getXat(j, k), this.getYat(j, k), this.getZat(j, k)];\n    selection.dataCoordinate = [this.getXat(j, k, this.data.xcalendar, this.scene.fullSceneLayout.xaxis), this.getYat(j, k, this.data.ycalendar, this.scene.fullSceneLayout.yaxis), this.getZat(j, k, this.data.zcalendar, this.scene.fullSceneLayout.zaxis)];\n    for (var i = 0; i < 3; i++) {\n      var v = selection.dataCoordinate[i];\n      if (v !== null && v !== undefined) {\n        selection.dataCoordinate[i] *= this.scene.dataScale[i];\n      }\n    }\n    var text = this.data.hovertext || this.data.text;\n    if (Array.isArray(text) && text[k] && text[k][j] !== undefined) {\n      selection.textLabel = text[k][j];\n    } else if (text) {\n      selection.textLabel = text;\n    } else {\n      selection.textLabel = '';\n    }\n    selection.data.dataCoordinate = selection.dataCoordinate.slice();\n    this.surface.highlight(selection.data);\n\n    // Snap spikes to data coordinate\n    this.scene.glplot.spikes.position = selection.dataCoordinate;\n    return true;\n  }\n};\nfunction isColormapCircular(colormap) {\n  var first = colormap[0].rgb;\n  var last = colormap[colormap.length - 1].rgb;\n  return first[0] === last[0] && first[1] === last[1] && first[2] === last[2] && first[3] === last[3];\n}\nvar shortPrimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999];\nfunction getPow(a, b) {\n  if (a < b) return 0;\n  var n = 0;\n  while (Math.floor(a % b) === 0) {\n    a /= b;\n    n++;\n  }\n  return n;\n}\nfunction getFactors(a) {\n  var powers = [];\n  for (var i = 0; i < shortPrimes.length; i++) {\n    var b = shortPrimes[i];\n    powers.push(getPow(a, b));\n  }\n  return powers;\n}\nfunction smallestDivisor(a) {\n  var A = getFactors(a);\n  var result = a;\n  for (var i = 0; i < shortPrimes.length; i++) {\n    if (A[i] > 0) {\n      result = shortPrimes[i];\n      break;\n    }\n  }\n  return result;\n}\nfunction leastCommonMultiple(a, b) {\n  if (a < 1 || b < 1) return undefined;\n  var A = getFactors(a);\n  var B = getFactors(b);\n  var n = 1;\n  for (var i = 0; i < shortPrimes.length; i++) {\n    n *= Math.pow(shortPrimes[i], Math.max(A[i], B[i]));\n  }\n  return n;\n}\nfunction arrayLCM(A) {\n  if (A.length === 0) return undefined;\n  var n = 1;\n  for (var i = 0; i < A.length; i++) {\n    n = leastCommonMultiple(n, A[i]);\n  }\n  return n;\n}\nproto.calcXnums = function (xlen) {\n  var i;\n  var nums = [];\n  for (i = 1; i < xlen; i++) {\n    var a = this.getXat(i - 1, 0);\n    var b = this.getXat(i, 0);\n    if (b !== a && a !== undefined && a !== null && b !== undefined && b !== null) {\n      nums[i - 1] = Math.abs(b - a);\n    } else {\n      nums[i - 1] = 0;\n    }\n  }\n  var totalDist = 0;\n  for (i = 1; i < xlen; i++) {\n    totalDist += nums[i - 1];\n  }\n  for (i = 1; i < xlen; i++) {\n    if (nums[i - 1] === 0) {\n      nums[i - 1] = 1;\n    } else {\n      nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n    }\n  }\n  return nums;\n};\nproto.calcYnums = function (ylen) {\n  var i;\n  var nums = [];\n  for (i = 1; i < ylen; i++) {\n    var a = this.getYat(0, i - 1);\n    var b = this.getYat(0, i);\n    if (b !== a && a !== undefined && a !== null && b !== undefined && b !== null) {\n      nums[i - 1] = Math.abs(b - a);\n    } else {\n      nums[i - 1] = 0;\n    }\n  }\n  var totalDist = 0;\n  for (i = 1; i < ylen; i++) {\n    totalDist += nums[i - 1];\n  }\n  for (i = 1; i < ylen; i++) {\n    if (nums[i - 1] === 0) {\n      nums[i - 1] = 1;\n    } else {\n      nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n    }\n  }\n  return nums;\n};\nvar highlyComposites = [1, 2, 4, 6, 12, 24, 36, 48, 60, 120, 180, 240, 360, 720, 840, 1260];\nvar MIN_RESOLUTION = highlyComposites[9];\nvar MAX_RESOLUTION = highlyComposites[13];\nproto.estimateScale = function (resSrc, axis) {\n  var nums = axis === 0 ? this.calcXnums(resSrc) : this.calcYnums(resSrc);\n  var resDst = 1 + arrayLCM(nums);\n  while (resDst < MIN_RESOLUTION) {\n    resDst *= 2;\n  }\n  while (resDst > MAX_RESOLUTION) {\n    resDst--;\n    resDst /= smallestDivisor(resDst);\n    resDst++;\n    if (resDst < MIN_RESOLUTION) {\n      // resDst = MIN_RESOLUTION; // option 1: use min resolution\n      resDst = MAX_RESOLUTION; // option 2: use max resolution\n    }\n  }\n\n  var scale = Math.round(resDst / resSrc);\n  return scale > 1 ? scale : 1;\n};\n\n// based on Mikola Lysenko's ndarray-homography\n// see https://github.com/scijs/ndarray-homography\n\nfunction fnHomography(out, inp, X) {\n  var w = X[8] + X[2] * inp[0] + X[5] * inp[1];\n  out[0] = (X[6] + X[0] * inp[0] + X[3] * inp[1]) / w;\n  out[1] = (X[7] + X[1] * inp[0] + X[4] * inp[1]) / w;\n  return out;\n}\nfunction homography(dest, src, X) {\n  warp(dest, src, fnHomography, X);\n  return dest;\n}\n\n// based on Mikola Lysenko's ndarray-warp\n// see https://github.com/scijs/ndarray-warp\n\nfunction warp(dest, src, func, X) {\n  var warped = [0, 0];\n  var ni = dest.shape[0];\n  var nj = dest.shape[1];\n  for (var i = 0; i < ni; i++) {\n    for (var j = 0; j < nj; j++) {\n      func(warped, [i, j], X);\n      dest.set(i, j, ndarrayInterp2d(src, warped[0], warped[1]));\n    }\n  }\n  return dest;\n}\nproto.refineCoords = function (coords) {\n  var scaleW = this.dataScaleX;\n  var scaleH = this.dataScaleY;\n  var width = coords[0].shape[0];\n  var height = coords[0].shape[1];\n  var newWidth = Math.floor(coords[0].shape[0] * scaleW + 1) | 0;\n  var newHeight = Math.floor(coords[0].shape[1] * scaleH + 1) | 0;\n\n  // Pad coords by +1\n  var padWidth = 1 + width + 1;\n  var padHeight = 1 + height + 1;\n  var padImg = ndarray(new Float32Array(padWidth * padHeight), [padWidth, padHeight]);\n  var X = [1 / scaleW, 0, 0, 0, 1 / scaleH, 0, 0, 0, 1];\n  for (var i = 0; i < coords.length; ++i) {\n    this.surface.padField(padImg, coords[i]);\n    var scaledImg = ndarray(new Float32Array(newWidth * newHeight), [newWidth, newHeight]);\n    homography(scaledImg, padImg, X);\n    coords[i] = scaledImg;\n  }\n};\nfunction insertIfNewLevel(arr, newValue) {\n  var found = false;\n  for (var k = 0; k < arr.length; k++) {\n    if (newValue === arr[k]) {\n      found = true;\n      break;\n    }\n  }\n  if (found === false) arr.push(newValue);\n}\nproto.setContourLevels = function () {\n  var newLevels = [[], [], []];\n  var useNewLevels = [false, false, false];\n  var needsUpdate = false;\n  var i, j, value;\n  for (i = 0; i < 3; ++i) {\n    if (this.showContour[i]) {\n      needsUpdate = true;\n      if (this.contourSize[i] > 0 && this.contourStart[i] !== null && this.contourEnd[i] !== null && this.contourEnd[i] > this.contourStart[i]) {\n        useNewLevels[i] = true;\n        for (j = this.contourStart[i]; j < this.contourEnd[i]; j += this.contourSize[i]) {\n          value = j * this.scene.dataScale[i];\n          insertIfNewLevel(newLevels[i], value);\n        }\n      }\n    }\n  }\n  if (needsUpdate) {\n    var allLevels = [[], [], []];\n    for (i = 0; i < 3; ++i) {\n      if (this.showContour[i]) {\n        allLevels[i] = useNewLevels[i] ? newLevels[i] : this.scene.contourLevels[i];\n      }\n    }\n    this.surface.update({\n      levels: allLevels\n    });\n  }\n};\nproto.update = function (data) {\n  var scene = this.scene;\n  var sceneLayout = scene.fullSceneLayout;\n  var surface = this.surface;\n  var colormap = parseColorScale(data);\n  var scaleFactor = scene.dataScale;\n  var xlen = data.z[0].length;\n  var ylen = data._ylength;\n  var contourLevels = scene.contourLevels;\n\n  // Save data\n  this.data = data;\n\n  /*\n   * Fill and transpose zdata.\n   * Consistent with 'heatmap' and 'contour', plotly 'surface'\n   * 'z' are such that sub-arrays correspond to y-coords\n   * and that the sub-array entries correspond to a x-coords,\n   * which is the transpose of 'gl-surface-plot'.\n   */\n\n  var i, j, k, v;\n  var rawCoords = [];\n  for (i = 0; i < 3; i++) {\n    rawCoords[i] = [];\n    for (j = 0; j < xlen; j++) {\n      rawCoords[i][j] = [];\n      /*\n      for(k = 0; k < ylen; k++) {\n          rawCoords[i][j][k] = undefined;\n      }\n      */\n    }\n  }\n\n  // coords x, y & z\n  for (j = 0; j < xlen; j++) {\n    for (k = 0; k < ylen; k++) {\n      rawCoords[0][j][k] = this.getXat(j, k, data.xcalendar, sceneLayout.xaxis);\n      rawCoords[1][j][k] = this.getYat(j, k, data.ycalendar, sceneLayout.yaxis);\n      rawCoords[2][j][k] = this.getZat(j, k, data.zcalendar, sceneLayout.zaxis);\n    }\n  }\n  if (data.connectgaps) {\n    data._emptypoints = findEmpties(rawCoords[2]);\n    interp2d(rawCoords[2], data._emptypoints);\n    data._interpolatedZ = [];\n    for (j = 0; j < xlen; j++) {\n      data._interpolatedZ[j] = [];\n      for (k = 0; k < ylen; k++) {\n        data._interpolatedZ[j][k] = rawCoords[2][j][k];\n      }\n    }\n  }\n\n  // Note: log axes are not defined in surfaces yet.\n  // but they could be defined here...\n\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        v = rawCoords[i][j][k];\n        if (v === null || v === undefined) {\n          rawCoords[i][j][k] = NaN;\n        } else {\n          v = rawCoords[i][j][k] *= scaleFactor[i];\n        }\n      }\n    }\n  }\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        v = rawCoords[i][j][k];\n        if (v !== null && v !== undefined) {\n          if (this.minValues[i] > v) {\n            this.minValues[i] = v;\n          }\n          if (this.maxValues[i] < v) {\n            this.maxValues[i] = v;\n          }\n        }\n      }\n    }\n  }\n  for (i = 0; i < 3; i++) {\n    this.objectOffset[i] = 0.5 * (this.minValues[i] + this.maxValues[i]);\n  }\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        v = rawCoords[i][j][k];\n        if (v !== null && v !== undefined) {\n          rawCoords[i][j][k] -= this.objectOffset[i];\n        }\n      }\n    }\n  }\n\n  // convert processed raw data to Float32 matrices\n  var coords = [ndarray(new Float32Array(xlen * ylen), [xlen, ylen]), ndarray(new Float32Array(xlen * ylen), [xlen, ylen]), ndarray(new Float32Array(xlen * ylen), [xlen, ylen])];\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        coords[i].set(j, k, rawCoords[i][j][k]);\n      }\n    }\n  }\n  rawCoords = []; // free memory\n\n  var params = {\n    colormap: colormap,\n    levels: [[], [], []],\n    showContour: [true, true, true],\n    showSurface: !data.hidesurface,\n    contourProject: [[false, false, false], [false, false, false], [false, false, false]],\n    contourWidth: [1, 1, 1],\n    contourColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n    contourTint: [1, 1, 1],\n    dynamicColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n    dynamicWidth: [1, 1, 1],\n    dynamicTint: [1, 1, 1],\n    opacityscale: data.opacityscale,\n    opacity: data.opacity\n  };\n  var cOpts = extractOpts(data);\n  params.intensityBounds = [cOpts.min, cOpts.max];\n\n  // Refine surface color if necessary\n  if (data.surfacecolor) {\n    var intensity = ndarray(new Float32Array(xlen * ylen), [xlen, ylen]);\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        intensity.set(j, k, data.surfacecolor[k][j]);\n      }\n    }\n    coords.push(intensity);\n  } else {\n    // when 'z' is used as 'intensity',\n    // we must scale its value\n    params.intensityBounds[0] *= scaleFactor[2];\n    params.intensityBounds[1] *= scaleFactor[2];\n  }\n  if (MAX_RESOLUTION < coords[0].shape[0] || MAX_RESOLUTION < coords[0].shape[1]) {\n    this.refineData = false;\n  }\n  if (this.refineData === true) {\n    this.dataScaleX = this.estimateScale(coords[0].shape[0], 0);\n    this.dataScaleY = this.estimateScale(coords[0].shape[1], 1);\n    if (this.dataScaleX !== 1 || this.dataScaleY !== 1) {\n      this.refineCoords(coords);\n    }\n  }\n  if (data.surfacecolor) {\n    params.intensity = coords.pop();\n  }\n  var highlightEnable = [true, true, true];\n  var axis = ['x', 'y', 'z'];\n  for (i = 0; i < 3; ++i) {\n    var contourParams = data.contours[axis[i]];\n    highlightEnable[i] = contourParams.highlight;\n    params.showContour[i] = contourParams.show || contourParams.highlight;\n    if (!params.showContour[i]) continue;\n    params.contourProject[i] = [contourParams.project.x, contourParams.project.y, contourParams.project.z];\n    if (contourParams.show) {\n      this.showContour[i] = true;\n      params.levels[i] = contourLevels[i];\n      surface.highlightColor[i] = params.contourColor[i] = str2RgbaArray(contourParams.color);\n      if (contourParams.usecolormap) {\n        surface.highlightTint[i] = params.contourTint[i] = 0;\n      } else {\n        surface.highlightTint[i] = params.contourTint[i] = 1;\n      }\n      params.contourWidth[i] = contourParams.width;\n      this.contourStart[i] = contourParams.start;\n      this.contourEnd[i] = contourParams.end;\n      this.contourSize[i] = contourParams.size;\n    } else {\n      this.showContour[i] = false;\n      this.contourStart[i] = null;\n      this.contourEnd[i] = null;\n      this.contourSize[i] = 0;\n    }\n    if (contourParams.highlight) {\n      params.dynamicColor[i] = str2RgbaArray(contourParams.highlightcolor);\n      params.dynamicWidth[i] = contourParams.highlightwidth;\n    }\n  }\n\n  // see https://github.com/plotly/plotly.js/issues/940\n  if (isColormapCircular(colormap)) {\n    params.vertexColor = true;\n  }\n  params.objectOffset = this.objectOffset;\n  params.coords = coords;\n  surface.update(params);\n  surface.visible = data.visible;\n  surface.enableDynamic = highlightEnable;\n  surface.enableHighlight = highlightEnable;\n  surface.snapToData = true;\n  if ('lighting' in data) {\n    surface.ambientLight = data.lighting.ambient;\n    surface.diffuseLight = data.lighting.diffuse;\n    surface.specularLight = data.lighting.specular;\n    surface.roughness = data.lighting.roughness;\n    surface.fresnel = data.lighting.fresnel;\n  }\n  if ('lightposition' in data) {\n    surface.lightPosition = [data.lightposition.x, data.lightposition.y, data.lightposition.z];\n  }\n};\nproto.dispose = function () {\n  this.scene.glplot.remove(this.surface);\n  this.surface.dispose();\n};\nfunction createSurfaceTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var surface = createSurface({\n    gl: gl\n  });\n  var result = new SurfaceTrace(scene, surface, data.uid);\n  surface._trace = result;\n  result.update(data);\n  scene.glplot.add(surface);\n  return result;\n}\nmodule.exports = createSurfaceTrace;","map":{"version":3,"names":["createSurface","require","gl_surface3d","ndarray","ndarrayInterp2d","ndarray_linear_interpolate","d2","interp2d","findEmpties","isArrayOrTypedArray","parseColorScale","str2RgbaArray","extractOpts","SurfaceTrace","scene","surface","uid","data","showContour","contourStart","contourEnd","contourSize","minValues","Infinity","maxValues","dataScaleX","dataScaleY","refineData","objectOffset","proto","prototype","getXat","a","b","calendar","axis","v","x","undefined","d2l","getYat","y","getZat","z","connectgaps","_interpolatedZ","handlePick","selection","object","xRatio","index","yRatio","j","Math","max","min","round","length","k","_ylength","traceCoordinate","dataCoordinate","xcalendar","fullSceneLayout","xaxis","ycalendar","yaxis","zcalendar","zaxis","i","dataScale","text","hovertext","Array","isArray","textLabel","slice","highlight","glplot","spikes","position","isColormapCircular","colormap","first","rgb","last","shortPrimes","getPow","n","floor","getFactors","powers","push","smallestDivisor","A","result","leastCommonMultiple","B","pow","arrayLCM","calcXnums","xlen","nums","abs","totalDist","calcYnums","ylen","highlyComposites","MIN_RESOLUTION","MAX_RESOLUTION","estimateScale","resSrc","resDst","scale","fnHomography","out","inp","X","w","homography","dest","src","warp","func","warped","ni","shape","nj","set","refineCoords","coords","scaleW","scaleH","width","height","newWidth","newHeight","padWidth","padHeight","padImg","Float32Array","padField","scaledImg","insertIfNewLevel","arr","newValue","found","setContourLevels","newLevels","useNewLevels","needsUpdate","value","allLevels","contourLevels","update","levels","sceneLayout","scaleFactor","rawCoords","_emptypoints","NaN","params","showSurface","hidesurface","contourProject","contourWidth","contourColor","contourTint","dynamicColor","dynamicWidth","dynamicTint","opacityscale","opacity","cOpts","intensityBounds","surfacecolor","intensity","pop","highlightEnable","contourParams","contours","show","project","highlightColor","color","usecolormap","highlightTint","start","end","size","highlightcolor","highlightwidth","vertexColor","visible","enableDynamic","enableHighlight","snapToData","ambientLight","lighting","ambient","diffuseLight","diffuse","specularLight","specular","roughness","fresnel","lightPosition","lightposition","dispose","remove","createSurfaceTrace","gl","_trace","add","module","exports"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/surface/convert.js"],"sourcesContent":["'use strict';\n\nvar createSurface = require('../../../stackgl_modules').gl_surface3d;\n\nvar ndarray = require('../../../stackgl_modules').ndarray;\nvar ndarrayInterp2d = require('../../../stackgl_modules').ndarray_linear_interpolate.d2;\n\nvar interp2d = require('../heatmap/interp2d');\nvar findEmpties = require('../heatmap/find_empties');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\n\nfunction SurfaceTrace(scene, surface, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.surface = surface;\n    this.data = null;\n    this.showContour = [false, false, false];\n    this.contourStart = [null, null, null];\n    this.contourEnd = [null, null, null];\n    this.contourSize = [0, 0, 0];\n    this.minValues = [Infinity, Infinity, Infinity];\n    this.maxValues = [-Infinity, -Infinity, -Infinity];\n    this.dataScaleX = 1.0;\n    this.dataScaleY = 1.0;\n    this.refineData = true;\n    this.objectOffset = [0, 0, 0];\n}\n\nvar proto = SurfaceTrace.prototype;\n\nproto.getXat = function(a, b, calendar, axis) {\n    var v = (\n       (!isArrayOrTypedArray(this.data.x)) ?\n            a :\n       (isArrayOrTypedArray(this.data.x[0])) ?\n            this.data.x[b][a] :\n            this.data.x[a]\n    );\n\n    return (calendar === undefined) ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.getYat = function(a, b, calendar, axis) {\n    var v = (\n       (!isArrayOrTypedArray(this.data.y)) ?\n            b :\n       (isArrayOrTypedArray(this.data.y[0])) ?\n            this.data.y[b][a] :\n            this.data.y[b]\n    );\n\n    return (calendar === undefined) ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.getZat = function(a, b, calendar, axis) {\n    var v = this.data.z[b][a];\n\n    if(v === null && this.data.connectgaps && this.data._interpolatedZ) {\n        v = this.data._interpolatedZ[b][a];\n    }\n\n    return (calendar === undefined) ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.handlePick = function(selection) {\n    if(selection.object === this.surface) {\n        var xRatio = (selection.data.index[0] - 1) / this.dataScaleX - 1;\n        var yRatio = (selection.data.index[1] - 1) / this.dataScaleY - 1;\n\n        var j = Math.max(Math.min(Math.round(xRatio), this.data.z[0].length - 1), 0);\n        var k = Math.max(Math.min(Math.round(yRatio), this.data._ylength - 1), 0);\n\n        selection.index = [j, k];\n\n        selection.traceCoordinate = [\n            this.getXat(j, k),\n            this.getYat(j, k),\n            this.getZat(j, k)\n        ];\n\n        selection.dataCoordinate = [\n            this.getXat(j, k, this.data.xcalendar, this.scene.fullSceneLayout.xaxis),\n            this.getYat(j, k, this.data.ycalendar, this.scene.fullSceneLayout.yaxis),\n            this.getZat(j, k, this.data.zcalendar, this.scene.fullSceneLayout.zaxis)\n        ];\n\n        for(var i = 0; i < 3; i++) {\n            var v = selection.dataCoordinate[i];\n            if(v !== null && v !== undefined) {\n                selection.dataCoordinate[i] *= this.scene.dataScale[i];\n            }\n        }\n\n        var text = this.data.hovertext || this.data.text;\n        if(Array.isArray(text) && text[k] && text[k][j] !== undefined) {\n            selection.textLabel = text[k][j];\n        } else if(text) {\n            selection.textLabel = text;\n        } else {\n            selection.textLabel = '';\n        }\n\n        selection.data.dataCoordinate = selection.dataCoordinate.slice();\n\n        this.surface.highlight(selection.data);\n\n        // Snap spikes to data coordinate\n        this.scene.glplot.spikes.position = selection.dataCoordinate;\n\n        return true;\n    }\n};\n\nfunction isColormapCircular(colormap) {\n    var first = colormap[0].rgb;\n    var last = colormap[colormap.length - 1].rgb;\n\n    return (\n        first[0] === last[0] &&\n        first[1] === last[1] &&\n        first[2] === last[2] &&\n        first[3] === last[3]\n    );\n}\n\nvar shortPrimes = [\n    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,\n    101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n    211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,\n    307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\n    401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\n    503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\n    601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\n    701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797,\n    809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\n    907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,\n    1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\n    1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193,\n    1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297,\n    1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399,\n    1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499,\n    1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597,\n    1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699,\n    1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789,\n    1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889,\n    1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999,\n    2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099,\n    2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179,\n    2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297,\n    2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399,\n    2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477,\n    2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593,\n    2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699,\n    2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797,\n    2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897,\n    2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999\n];\n\nfunction getPow(a, b) {\n    if(a < b) return 0;\n    var n = 0;\n    while(Math.floor(a % b) === 0) {\n        a /= b;\n        n++;\n    }\n    return n;\n}\n\nfunction getFactors(a) {\n    var powers = [];\n    for(var i = 0; i < shortPrimes.length; i++) {\n        var b = shortPrimes[i];\n        powers.push(\n            getPow(a, b)\n        );\n    }\n    return powers;\n}\n\nfunction smallestDivisor(a) {\n    var A = getFactors(a);\n    var result = a;\n    for(var i = 0; i < shortPrimes.length; i++) {\n        if(A[i] > 0) {\n            result = shortPrimes[i];\n            break;\n        }\n    }\n    return result;\n}\n\nfunction leastCommonMultiple(a, b) {\n    if(a < 1 || b < 1) return undefined;\n    var A = getFactors(a);\n    var B = getFactors(b);\n    var n = 1;\n    for(var i = 0; i < shortPrimes.length; i++) {\n        n *= Math.pow(\n            shortPrimes[i], Math.max(A[i], B[i])\n        );\n    }\n    return n;\n}\n\nfunction arrayLCM(A) {\n    if(A.length === 0) return undefined;\n    var n = 1;\n    for(var i = 0; i < A.length; i++) {\n        n = leastCommonMultiple(n, A[i]);\n    }\n    return n;\n}\n\nproto.calcXnums = function(xlen) {\n    var i;\n    var nums = [];\n    for(i = 1; i < xlen; i++) {\n        var a = this.getXat(i - 1, 0);\n        var b = this.getXat(i, 0);\n\n        if(b !== a &&\n            a !== undefined && a !== null &&\n            b !== undefined && b !== null) {\n            nums[i - 1] = Math.abs(b - a);\n        } else {\n            nums[i - 1] = 0;\n        }\n    }\n\n    var totalDist = 0;\n    for(i = 1; i < xlen; i++) {\n        totalDist += nums[i - 1];\n    }\n\n    for(i = 1; i < xlen; i++) {\n        if(nums[i - 1] === 0) {\n            nums[i - 1] = 1;\n        } else {\n            nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n        }\n    }\n\n    return nums;\n};\n\nproto.calcYnums = function(ylen) {\n    var i;\n    var nums = [];\n    for(i = 1; i < ylen; i++) {\n        var a = this.getYat(0, i - 1);\n        var b = this.getYat(0, i);\n\n        if(b !== a &&\n            a !== undefined && a !== null &&\n            b !== undefined && b !== null) {\n            nums[i - 1] = Math.abs(b - a);\n        } else {\n            nums[i - 1] = 0;\n        }\n    }\n\n    var totalDist = 0;\n    for(i = 1; i < ylen; i++) {\n        totalDist += nums[i - 1];\n    }\n\n    for(i = 1; i < ylen; i++) {\n        if(nums[i - 1] === 0) {\n            nums[i - 1] = 1;\n        } else {\n            nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n        }\n    }\n\n    return nums;\n};\n\nvar highlyComposites = [1, 2, 4, 6, 12, 24, 36, 48, 60, 120, 180, 240, 360, 720, 840, 1260];\n\nvar MIN_RESOLUTION = highlyComposites[9];\nvar MAX_RESOLUTION = highlyComposites[13];\n\nproto.estimateScale = function(resSrc, axis) {\n    var nums = (axis === 0) ?\n        this.calcXnums(resSrc) :\n        this.calcYnums(resSrc);\n\n    var resDst = 1 + arrayLCM(nums);\n\n    while(resDst < MIN_RESOLUTION) {\n        resDst *= 2;\n    }\n\n    while(resDst > MAX_RESOLUTION) {\n        resDst--;\n        resDst /= smallestDivisor(resDst);\n        resDst++;\n\n        if(resDst < MIN_RESOLUTION) {\n         // resDst = MIN_RESOLUTION; // option 1: use min resolution\n            resDst = MAX_RESOLUTION; // option 2: use max resolution\n        }\n    }\n\n    var scale = Math.round(resDst / resSrc);\n    return (scale > 1) ? scale : 1;\n};\n\n// based on Mikola Lysenko's ndarray-homography\n// see https://github.com/scijs/ndarray-homography\n\nfunction fnHomography(out, inp, X) {\n    var w = X[8] + X[2] * inp[0] + X[5] * inp[1];\n    out[0] = (X[6] + X[0] * inp[0] + X[3] * inp[1]) / w;\n    out[1] = (X[7] + X[1] * inp[0] + X[4] * inp[1]) / w;\n    return out;\n}\n\nfunction homography(dest, src, X) {\n    warp(dest, src, fnHomography, X);\n    return dest;\n}\n\n// based on Mikola Lysenko's ndarray-warp\n// see https://github.com/scijs/ndarray-warp\n\nfunction warp(dest, src, func, X) {\n    var warped = [0, 0];\n    var ni = dest.shape[0];\n    var nj = dest.shape[1];\n    for(var i = 0; i < ni; i++) {\n        for(var j = 0; j < nj; j++) {\n            func(warped, [i, j], X);\n            dest.set(i, j, ndarrayInterp2d(src, warped[0], warped[1]));\n        }\n    }\n    return dest;\n}\n\nproto.refineCoords = function(coords) {\n    var scaleW = this.dataScaleX;\n    var scaleH = this.dataScaleY;\n\n    var width = coords[0].shape[0];\n    var height = coords[0].shape[1];\n\n    var newWidth = Math.floor(coords[0].shape[0] * scaleW + 1) | 0;\n    var newHeight = Math.floor(coords[0].shape[1] * scaleH + 1) | 0;\n\n    // Pad coords by +1\n    var padWidth = 1 + width + 1;\n    var padHeight = 1 + height + 1;\n    var padImg = ndarray(new Float32Array(padWidth * padHeight), [padWidth, padHeight]);\n    var X = [\n        1 / scaleW, 0, 0,\n        0, 1 / scaleH, 0,\n        0, 0, 1\n    ];\n\n    for(var i = 0; i < coords.length; ++i) {\n        this.surface.padField(padImg, coords[i]);\n\n        var scaledImg = ndarray(new Float32Array(newWidth * newHeight), [newWidth, newHeight]);\n        homography(scaledImg, padImg, X);\n        coords[i] = scaledImg;\n    }\n};\n\nfunction insertIfNewLevel(arr, newValue) {\n    var found = false;\n    for(var k = 0; k < arr.length; k++) {\n        if(newValue === arr[k]) {\n            found = true;\n            break;\n        }\n    }\n    if(found === false) arr.push(newValue);\n}\n\nproto.setContourLevels = function() {\n    var newLevels = [[], [], []];\n    var useNewLevels = [false, false, false];\n    var needsUpdate = false;\n\n    var i, j, value;\n\n    for(i = 0; i < 3; ++i) {\n        if(this.showContour[i]) {\n            needsUpdate = true;\n\n            if(\n                this.contourSize[i] > 0 &&\n                this.contourStart[i] !== null &&\n                this.contourEnd[i] !== null &&\n                this.contourEnd[i] > this.contourStart[i]\n            ) {\n                useNewLevels[i] = true;\n\n                for(j = this.contourStart[i]; j < this.contourEnd[i]; j += this.contourSize[i]) {\n                    value = j * this.scene.dataScale[i];\n\n                    insertIfNewLevel(newLevels[i], value);\n                }\n            }\n        }\n    }\n\n    if(needsUpdate) {\n        var allLevels = [[], [], []];\n        for(i = 0; i < 3; ++i) {\n            if(this.showContour[i]) {\n                allLevels[i] = useNewLevels[i] ? newLevels[i] : this.scene.contourLevels[i];\n            }\n        }\n        this.surface.update({ levels: allLevels });\n    }\n};\n\nproto.update = function(data) {\n    var scene = this.scene;\n    var sceneLayout = scene.fullSceneLayout;\n    var surface = this.surface;\n    var colormap = parseColorScale(data);\n    var scaleFactor = scene.dataScale;\n    var xlen = data.z[0].length;\n    var ylen = data._ylength;\n    var contourLevels = scene.contourLevels;\n\n    // Save data\n    this.data = data;\n\n    /*\n     * Fill and transpose zdata.\n     * Consistent with 'heatmap' and 'contour', plotly 'surface'\n     * 'z' are such that sub-arrays correspond to y-coords\n     * and that the sub-array entries correspond to a x-coords,\n     * which is the transpose of 'gl-surface-plot'.\n     */\n\n    var i, j, k, v;\n    var rawCoords = [];\n    for(i = 0; i < 3; i++) {\n        rawCoords[i] = [];\n        for(j = 0; j < xlen; j++) {\n            rawCoords[i][j] = [];\n            /*\n            for(k = 0; k < ylen; k++) {\n                rawCoords[i][j][k] = undefined;\n            }\n            */\n        }\n    }\n\n    // coords x, y & z\n    for(j = 0; j < xlen; j++) {\n        for(k = 0; k < ylen; k++) {\n            rawCoords[0][j][k] = this.getXat(j, k, data.xcalendar, sceneLayout.xaxis);\n            rawCoords[1][j][k] = this.getYat(j, k, data.ycalendar, sceneLayout.yaxis);\n            rawCoords[2][j][k] = this.getZat(j, k, data.zcalendar, sceneLayout.zaxis);\n        }\n    }\n\n    if(data.connectgaps) {\n        data._emptypoints = findEmpties(rawCoords[2]);\n        interp2d(rawCoords[2], data._emptypoints);\n\n        data._interpolatedZ = [];\n        for(j = 0; j < xlen; j++) {\n            data._interpolatedZ[j] = [];\n            for(k = 0; k < ylen; k++) {\n                data._interpolatedZ[j][k] = rawCoords[2][j][k];\n            }\n        }\n    }\n\n    // Note: log axes are not defined in surfaces yet.\n    // but they could be defined here...\n\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                v = rawCoords[i][j][k];\n                if(v === null || v === undefined) {\n                    rawCoords[i][j][k] = NaN;\n                } else {\n                    v = rawCoords[i][j][k] *= scaleFactor[i];\n                }\n            }\n        }\n    }\n\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                v = rawCoords[i][j][k];\n                if(v !== null && v !== undefined) {\n                    if(this.minValues[i] > v) {\n                        this.minValues[i] = v;\n                    }\n                    if(this.maxValues[i] < v) {\n                        this.maxValues[i] = v;\n                    }\n                }\n            }\n        }\n    }\n\n    for(i = 0; i < 3; i++) {\n        this.objectOffset[i] = 0.5 * (this.minValues[i] + this.maxValues[i]);\n    }\n\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                v = rawCoords[i][j][k];\n                if(v !== null && v !== undefined) {\n                    rawCoords[i][j][k] -= this.objectOffset[i];\n                }\n            }\n        }\n    }\n\n    // convert processed raw data to Float32 matrices\n    var coords = [\n        ndarray(new Float32Array(xlen * ylen), [xlen, ylen]),\n        ndarray(new Float32Array(xlen * ylen), [xlen, ylen]),\n        ndarray(new Float32Array(xlen * ylen), [xlen, ylen])\n    ];\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                coords[i].set(j, k, rawCoords[i][j][k]);\n            }\n        }\n    }\n    rawCoords = []; // free memory\n\n    var params = {\n        colormap: colormap,\n        levels: [[], [], []],\n        showContour: [true, true, true],\n        showSurface: !data.hidesurface,\n        contourProject: [\n            [false, false, false],\n            [false, false, false],\n            [false, false, false]\n        ],\n        contourWidth: [1, 1, 1],\n        contourColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n        contourTint: [1, 1, 1],\n        dynamicColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n        dynamicWidth: [1, 1, 1],\n        dynamicTint: [1, 1, 1],\n        opacityscale: data.opacityscale,\n        opacity: data.opacity\n    };\n\n    var cOpts = extractOpts(data);\n    params.intensityBounds = [cOpts.min, cOpts.max];\n\n    // Refine surface color if necessary\n    if(data.surfacecolor) {\n        var intensity = ndarray(new Float32Array(xlen * ylen), [xlen, ylen]);\n\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                intensity.set(j, k, data.surfacecolor[k][j]);\n            }\n        }\n\n        coords.push(intensity);\n    } else {\n        // when 'z' is used as 'intensity',\n        // we must scale its value\n        params.intensityBounds[0] *= scaleFactor[2];\n        params.intensityBounds[1] *= scaleFactor[2];\n    }\n\n    if(MAX_RESOLUTION < coords[0].shape[0] ||\n        MAX_RESOLUTION < coords[0].shape[1]) {\n        this.refineData = false;\n    }\n\n    if(this.refineData === true) {\n        this.dataScaleX = this.estimateScale(coords[0].shape[0], 0);\n        this.dataScaleY = this.estimateScale(coords[0].shape[1], 1);\n        if(this.dataScaleX !== 1 || this.dataScaleY !== 1) {\n            this.refineCoords(coords);\n        }\n    }\n\n    if(data.surfacecolor) {\n        params.intensity = coords.pop();\n    }\n\n    var highlightEnable = [true, true, true];\n    var axis = ['x', 'y', 'z'];\n\n    for(i = 0; i < 3; ++i) {\n        var contourParams = data.contours[axis[i]];\n        highlightEnable[i] = contourParams.highlight;\n\n        params.showContour[i] = contourParams.show || contourParams.highlight;\n        if(!params.showContour[i]) continue;\n\n        params.contourProject[i] = [\n            contourParams.project.x,\n            contourParams.project.y,\n            contourParams.project.z\n        ];\n\n        if(contourParams.show) {\n            this.showContour[i] = true;\n            params.levels[i] = contourLevels[i];\n            surface.highlightColor[i] = params.contourColor[i] = str2RgbaArray(contourParams.color);\n\n            if(contourParams.usecolormap) {\n                surface.highlightTint[i] = params.contourTint[i] = 0;\n            } else {\n                surface.highlightTint[i] = params.contourTint[i] = 1;\n            }\n            params.contourWidth[i] = contourParams.width;\n\n            this.contourStart[i] = contourParams.start;\n            this.contourEnd[i] = contourParams.end;\n            this.contourSize[i] = contourParams.size;\n        } else {\n            this.showContour[i] = false;\n\n            this.contourStart[i] = null;\n            this.contourEnd[i] = null;\n            this.contourSize[i] = 0;\n        }\n\n        if(contourParams.highlight) {\n            params.dynamicColor[i] = str2RgbaArray(contourParams.highlightcolor);\n            params.dynamicWidth[i] = contourParams.highlightwidth;\n        }\n    }\n\n    // see https://github.com/plotly/plotly.js/issues/940\n    if(isColormapCircular(colormap)) {\n        params.vertexColor = true;\n    }\n\n    params.objectOffset = this.objectOffset;\n\n    params.coords = coords;\n    surface.update(params);\n\n    surface.visible = data.visible;\n    surface.enableDynamic = highlightEnable;\n    surface.enableHighlight = highlightEnable;\n\n    surface.snapToData = true;\n\n    if('lighting' in data) {\n        surface.ambientLight = data.lighting.ambient;\n        surface.diffuseLight = data.lighting.diffuse;\n        surface.specularLight = data.lighting.specular;\n        surface.roughness = data.lighting.roughness;\n        surface.fresnel = data.lighting.fresnel;\n    }\n\n    if('lightposition' in data) {\n        surface.lightPosition = [data.lightposition.x, data.lightposition.y, data.lightposition.z];\n    }\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.surface);\n    this.surface.dispose();\n};\n\nfunction createSurfaceTrace(scene, data) {\n    var gl = scene.glplot.gl;\n    var surface = createSurface({ gl: gl });\n    var result = new SurfaceTrace(scene, surface, data.uid);\n    surface._trace = result;\n    result.update(data);\n    scene.glplot.add(surface);\n    return result;\n}\n\nmodule.exports = createSurfaceTrace;\n"],"mappings":"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G,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACnF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACxF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAChE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACpG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACxF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC5E,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC1D,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACxF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACxF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC1D,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAChE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACxF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CACnE;AAED,SAASC,MAAMA,CAACvD,CAAC,EAAEC,CAAC,EAAE;EAClB,IAAGD,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC;EAClB,IAAIuD,CAAC,GAAG,CAAC;EACT,OAAMnC,IAAI,CAACoC,KAAK,CAACzD,CAAC,GAAGC,CAAC,CAAC,KAAK,CAAC,EAAE;IAC3BD,CAAC,IAAIC,CAAC;IACNuD,CAAC,EAAE;EACP;EACA,OAAOA,CAAC;AACZ;AAEA,SAASE,UAAUA,CAAC1D,CAAC,EAAE;EACnB,IAAI2D,MAAM,GAAG,EAAE;EACf,KAAI,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,WAAW,CAAC7B,MAAM,EAAEY,CAAC,EAAE,EAAE;IACxC,IAAIpC,CAAC,GAAGqD,WAAW,CAACjB,CAAC,CAAC;IACtBsB,MAAM,CAACC,IAAI,CACPL,MAAM,CAACvD,CAAC,EAAEC,CAAC,CAAC,CACf;EACL;EACA,OAAO0D,MAAM;AACjB;AAEA,SAASE,eAAeA,CAAC7D,CAAC,EAAE;EACxB,IAAI8D,CAAC,GAAGJ,UAAU,CAAC1D,CAAC,CAAC;EACrB,IAAI+D,MAAM,GAAG/D,CAAC;EACd,KAAI,IAAIqC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,WAAW,CAAC7B,MAAM,EAAEY,CAAC,EAAE,EAAE;IACxC,IAAGyB,CAAC,CAACzB,CAAC,CAAC,GAAG,CAAC,EAAE;MACT0B,MAAM,GAAGT,WAAW,CAACjB,CAAC,CAAC;MACvB;IACJ;EACJ;EACA,OAAO0B,MAAM;AACjB;AAEA,SAASC,mBAAmBA,CAAChE,CAAC,EAAEC,CAAC,EAAE;EAC/B,IAAGD,CAAC,GAAG,CAAC,IAAIC,CAAC,GAAG,CAAC,EAAE,OAAOK,SAAS;EACnC,IAAIwD,CAAC,GAAGJ,UAAU,CAAC1D,CAAC,CAAC;EACrB,IAAIiE,CAAC,GAAGP,UAAU,CAACzD,CAAC,CAAC;EACrB,IAAIuD,CAAC,GAAG,CAAC;EACT,KAAI,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,WAAW,CAAC7B,MAAM,EAAEY,CAAC,EAAE,EAAE;IACxCmB,CAAC,IAAInC,IAAI,CAAC6C,GAAG,CACTZ,WAAW,CAACjB,CAAC,CAAC,EAAEhB,IAAI,CAACC,GAAG,CAACwC,CAAC,CAACzB,CAAC,CAAC,EAAE4B,CAAC,CAAC5B,CAAC,CAAC,CAAC,CACvC;EACL;EACA,OAAOmB,CAAC;AACZ;AAEA,SAASW,QAAQA,CAACL,CAAC,EAAE;EACjB,IAAGA,CAAC,CAACrC,MAAM,KAAK,CAAC,EAAE,OAAOnB,SAAS;EACnC,IAAIkD,CAAC,GAAG,CAAC;EACT,KAAI,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyB,CAAC,CAACrC,MAAM,EAAEY,CAAC,EAAE,EAAE;IAC9BmB,CAAC,GAAGQ,mBAAmB,CAACR,CAAC,EAAEM,CAAC,CAACzB,CAAC,CAAC,CAAC;EACpC;EACA,OAAOmB,CAAC;AACZ;AAEA3D,KAAK,CAACuE,SAAS,GAAG,UAASC,IAAI,EAAE;EAC7B,IAAIhC,CAAC;EACL,IAAIiC,IAAI,GAAG,EAAE;EACb,KAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,IAAI,EAAEhC,CAAC,EAAE,EAAE;IACtB,IAAIrC,CAAC,GAAG,IAAI,CAACD,MAAM,CAACsC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,IAAIpC,CAAC,GAAG,IAAI,CAACF,MAAM,CAACsC,CAAC,EAAE,CAAC,CAAC;IAEzB,IAAGpC,CAAC,KAAKD,CAAC,IACNA,CAAC,KAAKM,SAAS,IAAIN,CAAC,KAAK,IAAI,IAC7BC,CAAC,KAAKK,SAAS,IAAIL,CAAC,KAAK,IAAI,EAAE;MAC/BqE,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAGhB,IAAI,CAACkD,GAAG,CAACtE,CAAC,GAAGD,CAAC,CAAC;IACjC,CAAC,MAAM;MACHsE,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnB;EACJ;EAEA,IAAImC,SAAS,GAAG,CAAC;EACjB,KAAInC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,IAAI,EAAEhC,CAAC,EAAE,EAAE;IACtBmC,SAAS,IAAIF,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC;EAC5B;EAEA,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,IAAI,EAAEhC,CAAC,EAAE,EAAE;IACtB,IAAGiC,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;MAClBiC,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnB,CAAC,MAAM;MACHiC,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAGhB,IAAI,CAACG,KAAK,CAACgD,SAAS,GAAGF,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD;EACJ;EAEA,OAAOiC,IAAI;AACf,CAAC;AAEDzE,KAAK,CAAC4E,SAAS,GAAG,UAASC,IAAI,EAAE;EAC7B,IAAIrC,CAAC;EACL,IAAIiC,IAAI,GAAG,EAAE;EACb,KAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,IAAI,EAAErC,CAAC,EAAE,EAAE;IACtB,IAAIrC,CAAC,GAAG,IAAI,CAACQ,MAAM,CAAC,CAAC,EAAE6B,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAIpC,CAAC,GAAG,IAAI,CAACO,MAAM,CAAC,CAAC,EAAE6B,CAAC,CAAC;IAEzB,IAAGpC,CAAC,KAAKD,CAAC,IACNA,CAAC,KAAKM,SAAS,IAAIN,CAAC,KAAK,IAAI,IAC7BC,CAAC,KAAKK,SAAS,IAAIL,CAAC,KAAK,IAAI,EAAE;MAC/BqE,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAGhB,IAAI,CAACkD,GAAG,CAACtE,CAAC,GAAGD,CAAC,CAAC;IACjC,CAAC,MAAM;MACHsE,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnB;EACJ;EAEA,IAAImC,SAAS,GAAG,CAAC;EACjB,KAAInC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,IAAI,EAAErC,CAAC,EAAE,EAAE;IACtBmC,SAAS,IAAIF,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC;EAC5B;EAEA,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,IAAI,EAAErC,CAAC,EAAE,EAAE;IACtB,IAAGiC,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;MAClBiC,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnB,CAAC,MAAM;MACHiC,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,GAAGhB,IAAI,CAACG,KAAK,CAACgD,SAAS,GAAGF,IAAI,CAACjC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD;EACJ;EAEA,OAAOiC,IAAI;AACf,CAAC;AAED,IAAIK,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;AAE3F,IAAIC,cAAc,GAAGD,gBAAgB,CAAC,CAAC,CAAC;AACxC,IAAIE,cAAc,GAAGF,gBAAgB,CAAC,EAAE,CAAC;AAEzC9E,KAAK,CAACiF,aAAa,GAAG,UAASC,MAAM,EAAE5E,IAAI,EAAE;EACzC,IAAImE,IAAI,GAAInE,IAAI,KAAK,CAAC,GAClB,IAAI,CAACiE,SAAS,CAACW,MAAM,CAAC,GACtB,IAAI,CAACN,SAAS,CAACM,MAAM,CAAC;EAE1B,IAAIC,MAAM,GAAG,CAAC,GAAGb,QAAQ,CAACG,IAAI,CAAC;EAE/B,OAAMU,MAAM,GAAGJ,cAAc,EAAE;IAC3BI,MAAM,IAAI,CAAC;EACf;EAEA,OAAMA,MAAM,GAAGH,cAAc,EAAE;IAC3BG,MAAM,EAAE;IACRA,MAAM,IAAInB,eAAe,CAACmB,MAAM,CAAC;IACjCA,MAAM,EAAE;IAER,IAAGA,MAAM,GAAGJ,cAAc,EAAE;MAC3B;MACGI,MAAM,GAAGH,cAAc,CAAC,CAAC;IAC7B;EACJ;;EAEA,IAAII,KAAK,GAAG5D,IAAI,CAACG,KAAK,CAACwD,MAAM,GAAGD,MAAM,CAAC;EACvC,OAAQE,KAAK,GAAG,CAAC,GAAIA,KAAK,GAAG,CAAC;AAClC,CAAC;;AAED;AACA;;AAEA,SAASC,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAEC,CAAC,EAAE;EAC/B,IAAIC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC;EAC5CD,GAAG,CAAC,CAAC,CAAC,GAAG,CAACE,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,IAAIE,CAAC;EACnDH,GAAG,CAAC,CAAC,CAAC,GAAG,CAACE,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,IAAIE,CAAC;EACnD,OAAOH,GAAG;AACd;AAEA,SAASI,UAAUA,CAACC,IAAI,EAAEC,GAAG,EAAEJ,CAAC,EAAE;EAC9BK,IAAI,CAACF,IAAI,EAAEC,GAAG,EAAEP,YAAY,EAAEG,CAAC,CAAC;EAChC,OAAOG,IAAI;AACf;;AAEA;AACA;;AAEA,SAASE,IAAIA,CAACF,IAAI,EAAEC,GAAG,EAAEE,IAAI,EAAEN,CAAC,EAAE;EAC9B,IAAIO,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACnB,IAAIC,EAAE,GAAGL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;EACtB,IAAIC,EAAE,GAAGP,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;EACtB,KAAI,IAAIzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwD,EAAE,EAAExD,CAAC,EAAE,EAAE;IACxB,KAAI,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2E,EAAE,EAAE3E,CAAC,EAAE,EAAE;MACxBuE,IAAI,CAACC,MAAM,EAAE,CAACvD,CAAC,EAAEjB,CAAC,CAAC,EAAEiE,CAAC,CAAC;MACvBG,IAAI,CAACQ,GAAG,CAAC3D,CAAC,EAAEjB,CAAC,EAAEhD,eAAe,CAACqH,GAAG,EAAEG,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D;EACJ;EACA,OAAOJ,IAAI;AACf;AAEA3F,KAAK,CAACoG,YAAY,GAAG,UAASC,MAAM,EAAE;EAClC,IAAIC,MAAM,GAAG,IAAI,CAAC1G,UAAU;EAC5B,IAAI2G,MAAM,GAAG,IAAI,CAAC1G,UAAU;EAE5B,IAAI2G,KAAK,GAAGH,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC;EAC9B,IAAIQ,MAAM,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC;EAE/B,IAAIS,QAAQ,GAAGlF,IAAI,CAACoC,KAAK,CAACyC,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,GAAGK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;EAC9D,IAAIK,SAAS,GAAGnF,IAAI,CAACoC,KAAK,CAACyC,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,GAAGM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;;EAE/D;EACA,IAAIK,QAAQ,GAAG,CAAC,GAAGJ,KAAK,GAAG,CAAC;EAC5B,IAAIK,SAAS,GAAG,CAAC,GAAGJ,MAAM,GAAG,CAAC;EAC9B,IAAIK,MAAM,GAAGxI,OAAO,CAAC,IAAIyI,YAAY,CAACH,QAAQ,GAAGC,SAAS,CAAC,EAAE,CAACD,QAAQ,EAAEC,SAAS,CAAC,CAAC;EACnF,IAAIrB,CAAC,GAAG,CACJ,CAAC,GAAGc,MAAM,EAAE,CAAC,EAAE,CAAC,EAChB,CAAC,EAAE,CAAC,GAAGC,MAAM,EAAE,CAAC,EAChB,CAAC,EAAE,CAAC,EAAE,CAAC,CACV;EAED,KAAI,IAAI/D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6D,MAAM,CAACzE,MAAM,EAAE,EAAEY,CAAC,EAAE;IACnC,IAAI,CAACtD,OAAO,CAAC8H,QAAQ,CAACF,MAAM,EAAET,MAAM,CAAC7D,CAAC,CAAC,CAAC;IAExC,IAAIyE,SAAS,GAAG3I,OAAO,CAAC,IAAIyI,YAAY,CAACL,QAAQ,GAAGC,SAAS,CAAC,EAAE,CAACD,QAAQ,EAAEC,SAAS,CAAC,CAAC;IACtFjB,UAAU,CAACuB,SAAS,EAAEH,MAAM,EAAEtB,CAAC,CAAC;IAChCa,MAAM,CAAC7D,CAAC,CAAC,GAAGyE,SAAS;EACzB;AACJ,CAAC;AAED,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,QAAQ,EAAE;EACrC,IAAIC,KAAK,GAAG,KAAK;EACjB,KAAI,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,GAAG,CAACvF,MAAM,EAAEC,CAAC,EAAE,EAAE;IAChC,IAAGuF,QAAQ,KAAKD,GAAG,CAACtF,CAAC,CAAC,EAAE;MACpBwF,KAAK,GAAG,IAAI;MACZ;IACJ;EACJ;EACA,IAAGA,KAAK,KAAK,KAAK,EAAEF,GAAG,CAACpD,IAAI,CAACqD,QAAQ,CAAC;AAC1C;AAEApH,KAAK,CAACsH,gBAAgB,GAAG,YAAW;EAChC,IAAIC,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5B,IAAIC,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACxC,IAAIC,WAAW,GAAG,KAAK;EAEvB,IAAIjF,CAAC,EAAEjB,CAAC,EAAEmG,KAAK;EAEf,KAAIlF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IACnB,IAAG,IAAI,CAACnD,WAAW,CAACmD,CAAC,CAAC,EAAE;MACpBiF,WAAW,GAAG,IAAI;MAElB,IACI,IAAI,CAACjI,WAAW,CAACgD,CAAC,CAAC,GAAG,CAAC,IACvB,IAAI,CAAClD,YAAY,CAACkD,CAAC,CAAC,KAAK,IAAI,IAC7B,IAAI,CAACjD,UAAU,CAACiD,CAAC,CAAC,KAAK,IAAI,IAC3B,IAAI,CAACjD,UAAU,CAACiD,CAAC,CAAC,GAAG,IAAI,CAAClD,YAAY,CAACkD,CAAC,CAAC,EAC3C;QACEgF,YAAY,CAAChF,CAAC,CAAC,GAAG,IAAI;QAEtB,KAAIjB,CAAC,GAAG,IAAI,CAACjC,YAAY,CAACkD,CAAC,CAAC,EAAEjB,CAAC,GAAG,IAAI,CAAChC,UAAU,CAACiD,CAAC,CAAC,EAAEjB,CAAC,IAAI,IAAI,CAAC/B,WAAW,CAACgD,CAAC,CAAC,EAAE;UAC5EkF,KAAK,GAAGnG,CAAC,GAAG,IAAI,CAACtC,KAAK,CAACwD,SAAS,CAACD,CAAC,CAAC;UAEnC0E,gBAAgB,CAACK,SAAS,CAAC/E,CAAC,CAAC,EAAEkF,KAAK,CAAC;QACzC;MACJ;IACJ;EACJ;EAEA,IAAGD,WAAW,EAAE;IACZ,IAAIE,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5B,KAAInF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;MACnB,IAAG,IAAI,CAACnD,WAAW,CAACmD,CAAC,CAAC,EAAE;QACpBmF,SAAS,CAACnF,CAAC,CAAC,GAAGgF,YAAY,CAAChF,CAAC,CAAC,GAAG+E,SAAS,CAAC/E,CAAC,CAAC,GAAG,IAAI,CAACvD,KAAK,CAAC2I,aAAa,CAACpF,CAAC,CAAC;MAC/E;IACJ;IACA,IAAI,CAACtD,OAAO,CAAC2I,MAAM,CAAC;MAAEC,MAAM,EAAEH;IAAU,CAAC,CAAC;EAC9C;AACJ,CAAC;AAED3H,KAAK,CAAC6H,MAAM,GAAG,UAASzI,IAAI,EAAE;EAC1B,IAAIH,KAAK,GAAG,IAAI,CAACA,KAAK;EACtB,IAAI8I,WAAW,GAAG9I,KAAK,CAACiD,eAAe;EACvC,IAAIhD,OAAO,GAAG,IAAI,CAACA,OAAO;EAC1B,IAAImE,QAAQ,GAAGxE,eAAe,CAACO,IAAI,CAAC;EACpC,IAAI4I,WAAW,GAAG/I,KAAK,CAACwD,SAAS;EACjC,IAAI+B,IAAI,GAAGpF,IAAI,CAAC0B,CAAC,CAAC,CAAC,CAAC,CAACc,MAAM;EAC3B,IAAIiD,IAAI,GAAGzF,IAAI,CAAC0C,QAAQ;EACxB,IAAI8F,aAAa,GAAG3I,KAAK,CAAC2I,aAAa;;EAEvC;EACA,IAAI,CAACxI,IAAI,GAAGA,IAAI;;EAEhB;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,IAAIoD,CAAC,EAAEjB,CAAC,EAAEM,CAAC,EAAEtB,CAAC;EACd,IAAI0H,SAAS,GAAG,EAAE;EAClB,KAAIzF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnByF,SAAS,CAACzF,CAAC,CAAC,GAAG,EAAE;IACjB,KAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtB0G,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,GAAG,EAAE;MACpB;AACZ;AACA;AACA;AACA;IACQ;EACJ;;EAEA;EACA,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;IACtB,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;MACtBoG,SAAS,CAAC,CAAC,CAAC,CAAC1G,CAAC,CAAC,CAACM,CAAC,CAAC,GAAG,IAAI,CAAC3B,MAAM,CAACqB,CAAC,EAAEM,CAAC,EAAEzC,IAAI,CAAC6C,SAAS,EAAE8F,WAAW,CAAC5F,KAAK,CAAC;MACzE8F,SAAS,CAAC,CAAC,CAAC,CAAC1G,CAAC,CAAC,CAACM,CAAC,CAAC,GAAG,IAAI,CAAClB,MAAM,CAACY,CAAC,EAAEM,CAAC,EAAEzC,IAAI,CAACgD,SAAS,EAAE2F,WAAW,CAAC1F,KAAK,CAAC;MACzE4F,SAAS,CAAC,CAAC,CAAC,CAAC1G,CAAC,CAAC,CAACM,CAAC,CAAC,GAAG,IAAI,CAAChB,MAAM,CAACU,CAAC,EAAEM,CAAC,EAAEzC,IAAI,CAACkD,SAAS,EAAEyF,WAAW,CAACxF,KAAK,CAAC;IAC7E;EACJ;EAEA,IAAGnD,IAAI,CAAC2B,WAAW,EAAE;IACjB3B,IAAI,CAAC8I,YAAY,GAAGvJ,WAAW,CAACsJ,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7CvJ,QAAQ,CAACuJ,SAAS,CAAC,CAAC,CAAC,EAAE7I,IAAI,CAAC8I,YAAY,CAAC;IAEzC9I,IAAI,CAAC4B,cAAc,GAAG,EAAE;IACxB,KAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtBnC,IAAI,CAAC4B,cAAc,CAACO,CAAC,CAAC,GAAG,EAAE;MAC3B,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;QACtBzC,IAAI,CAAC4B,cAAc,CAACO,CAAC,CAAC,CAACM,CAAC,CAAC,GAAGoG,SAAS,CAAC,CAAC,CAAC,CAAC1G,CAAC,CAAC,CAACM,CAAC,CAAC;MAClD;IACJ;EACJ;;EAEA;EACA;;EAEA,KAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnB,KAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtB,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;QACtBtB,CAAC,GAAG0H,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC;QACtB,IAAGtB,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKE,SAAS,EAAE;UAC9BwH,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC,GAAGsG,GAAG;QAC5B,CAAC,MAAM;UACH5H,CAAC,GAAG0H,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC,IAAImG,WAAW,CAACxF,CAAC,CAAC;QAC5C;MACJ;IACJ;EACJ;EAEA,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnB,KAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtB,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;QACtBtB,CAAC,GAAG0H,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC;QACtB,IAAGtB,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKE,SAAS,EAAE;UAC9B,IAAG,IAAI,CAAChB,SAAS,CAAC+C,CAAC,CAAC,GAAGjC,CAAC,EAAE;YACtB,IAAI,CAACd,SAAS,CAAC+C,CAAC,CAAC,GAAGjC,CAAC;UACzB;UACA,IAAG,IAAI,CAACZ,SAAS,CAAC6C,CAAC,CAAC,GAAGjC,CAAC,EAAE;YACtB,IAAI,CAACZ,SAAS,CAAC6C,CAAC,CAAC,GAAGjC,CAAC;UACzB;QACJ;MACJ;IACJ;EACJ;EAEA,KAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnB,IAAI,CAACzC,YAAY,CAACyC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC/C,SAAS,CAAC+C,CAAC,CAAC,GAAG,IAAI,CAAC7C,SAAS,CAAC6C,CAAC,CAAC,CAAC;EACxE;EAEA,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnB,KAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtB,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;QACtBtB,CAAC,GAAG0H,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC;QACtB,IAAGtB,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKE,SAAS,EAAE;UAC9BwH,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC,IAAI,IAAI,CAAC9B,YAAY,CAACyC,CAAC,CAAC;QAC9C;MACJ;IACJ;EACJ;;EAEA;EACA,IAAI6D,MAAM,GAAG,CACT/H,OAAO,CAAC,IAAIyI,YAAY,CAACvC,IAAI,GAAGK,IAAI,CAAC,EAAE,CAACL,IAAI,EAAEK,IAAI,CAAC,CAAC,EACpDvG,OAAO,CAAC,IAAIyI,YAAY,CAACvC,IAAI,GAAGK,IAAI,CAAC,EAAE,CAACL,IAAI,EAAEK,IAAI,CAAC,CAAC,EACpDvG,OAAO,CAAC,IAAIyI,YAAY,CAACvC,IAAI,GAAGK,IAAI,CAAC,EAAE,CAACL,IAAI,EAAEK,IAAI,CAAC,CAAC,CACvD;EACD,KAAIrC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnB,KAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtB,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;QACtBwE,MAAM,CAAC7D,CAAC,CAAC,CAAC2D,GAAG,CAAC5E,CAAC,EAAEM,CAAC,EAAEoG,SAAS,CAACzF,CAAC,CAAC,CAACjB,CAAC,CAAC,CAACM,CAAC,CAAC,CAAC;MAC3C;IACJ;EACJ;EACAoG,SAAS,GAAG,EAAE,CAAC,CAAC;;EAEhB,IAAIG,MAAM,GAAG;IACT/E,QAAQ,EAAEA,QAAQ;IAClByE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpBzI,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/BgJ,WAAW,EAAE,CAACjJ,IAAI,CAACkJ,WAAW;IAC9BC,cAAc,EAAE,CACZ,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACrB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACrB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CACxB;IACDC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvBC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxDC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACtBC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxDC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACtBC,YAAY,EAAE1J,IAAI,CAAC0J,YAAY;IAC/BC,OAAO,EAAE3J,IAAI,CAAC2J;EAClB,CAAC;EAED,IAAIC,KAAK,GAAGjK,WAAW,CAACK,IAAI,CAAC;EAC7BgJ,MAAM,CAACa,eAAe,GAAG,CAACD,KAAK,CAACtH,GAAG,EAAEsH,KAAK,CAACvH,GAAG,CAAC;;EAE/C;EACA,IAAGrC,IAAI,CAAC8J,YAAY,EAAE;IAClB,IAAIC,SAAS,GAAG7K,OAAO,CAAC,IAAIyI,YAAY,CAACvC,IAAI,GAAGK,IAAI,CAAC,EAAE,CAACL,IAAI,EAAEK,IAAI,CAAC,CAAC;IAEpE,KAAItD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,EAAEjD,CAAC,EAAE,EAAE;MACtB,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,IAAI,EAAEhD,CAAC,EAAE,EAAE;QACtBsH,SAAS,CAAChD,GAAG,CAAC5E,CAAC,EAAEM,CAAC,EAAEzC,IAAI,CAAC8J,YAAY,CAACrH,CAAC,CAAC,CAACN,CAAC,CAAC,CAAC;MAChD;IACJ;IAEA8E,MAAM,CAACtC,IAAI,CAACoF,SAAS,CAAC;EAC1B,CAAC,MAAM;IACH;IACA;IACAf,MAAM,CAACa,eAAe,CAAC,CAAC,CAAC,IAAIjB,WAAW,CAAC,CAAC,CAAC;IAC3CI,MAAM,CAACa,eAAe,CAAC,CAAC,CAAC,IAAIjB,WAAW,CAAC,CAAC,CAAC;EAC/C;EAEA,IAAGhD,cAAc,GAAGqB,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,IAClCjB,cAAc,GAAGqB,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE;IACrC,IAAI,CAACnG,UAAU,GAAG,KAAK;EAC3B;EAEA,IAAG,IAAI,CAACA,UAAU,KAAK,IAAI,EAAE;IACzB,IAAI,CAACF,UAAU,GAAG,IAAI,CAACqF,aAAa,CAACoB,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,IAAI,CAACpG,UAAU,GAAG,IAAI,CAACoF,aAAa,CAACoB,MAAM,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,IAAG,IAAI,CAACrG,UAAU,KAAK,CAAC,IAAI,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;MAC/C,IAAI,CAACuG,YAAY,CAACC,MAAM,CAAC;IAC7B;EACJ;EAEA,IAAGjH,IAAI,CAAC8J,YAAY,EAAE;IAClBd,MAAM,CAACe,SAAS,GAAG9C,MAAM,CAAC+C,GAAG,EAAE;EACnC;EAEA,IAAIC,eAAe,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACxC,IAAI/I,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAE1B,KAAIkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IACnB,IAAI8G,aAAa,GAAGlK,IAAI,CAACmK,QAAQ,CAACjJ,IAAI,CAACkC,CAAC,CAAC,CAAC;IAC1C6G,eAAe,CAAC7G,CAAC,CAAC,GAAG8G,aAAa,CAACtG,SAAS;IAE5CoF,MAAM,CAAC/I,WAAW,CAACmD,CAAC,CAAC,GAAG8G,aAAa,CAACE,IAAI,IAAIF,aAAa,CAACtG,SAAS;IACrE,IAAG,CAACoF,MAAM,CAAC/I,WAAW,CAACmD,CAAC,CAAC,EAAE;IAE3B4F,MAAM,CAACG,cAAc,CAAC/F,CAAC,CAAC,GAAG,CACvB8G,aAAa,CAACG,OAAO,CAACjJ,CAAC,EACvB8I,aAAa,CAACG,OAAO,CAAC7I,CAAC,EACvB0I,aAAa,CAACG,OAAO,CAAC3I,CAAC,CAC1B;IAED,IAAGwI,aAAa,CAACE,IAAI,EAAE;MACnB,IAAI,CAACnK,WAAW,CAACmD,CAAC,CAAC,GAAG,IAAI;MAC1B4F,MAAM,CAACN,MAAM,CAACtF,CAAC,CAAC,GAAGoF,aAAa,CAACpF,CAAC,CAAC;MACnCtD,OAAO,CAACwK,cAAc,CAAClH,CAAC,CAAC,GAAG4F,MAAM,CAACK,YAAY,CAACjG,CAAC,CAAC,GAAG1D,aAAa,CAACwK,aAAa,CAACK,KAAK,CAAC;MAEvF,IAAGL,aAAa,CAACM,WAAW,EAAE;QAC1B1K,OAAO,CAAC2K,aAAa,CAACrH,CAAC,CAAC,GAAG4F,MAAM,CAACM,WAAW,CAAClG,CAAC,CAAC,GAAG,CAAC;MACxD,CAAC,MAAM;QACHtD,OAAO,CAAC2K,aAAa,CAACrH,CAAC,CAAC,GAAG4F,MAAM,CAACM,WAAW,CAAClG,CAAC,CAAC,GAAG,CAAC;MACxD;MACA4F,MAAM,CAACI,YAAY,CAAChG,CAAC,CAAC,GAAG8G,aAAa,CAAC9C,KAAK;MAE5C,IAAI,CAAClH,YAAY,CAACkD,CAAC,CAAC,GAAG8G,aAAa,CAACQ,KAAK;MAC1C,IAAI,CAACvK,UAAU,CAACiD,CAAC,CAAC,GAAG8G,aAAa,CAACS,GAAG;MACtC,IAAI,CAACvK,WAAW,CAACgD,CAAC,CAAC,GAAG8G,aAAa,CAACU,IAAI;IAC5C,CAAC,MAAM;MACH,IAAI,CAAC3K,WAAW,CAACmD,CAAC,CAAC,GAAG,KAAK;MAE3B,IAAI,CAAClD,YAAY,CAACkD,CAAC,CAAC,GAAG,IAAI;MAC3B,IAAI,CAACjD,UAAU,CAACiD,CAAC,CAAC,GAAG,IAAI;MACzB,IAAI,CAAChD,WAAW,CAACgD,CAAC,CAAC,GAAG,CAAC;IAC3B;IAEA,IAAG8G,aAAa,CAACtG,SAAS,EAAE;MACxBoF,MAAM,CAACO,YAAY,CAACnG,CAAC,CAAC,GAAG1D,aAAa,CAACwK,aAAa,CAACW,cAAc,CAAC;MACpE7B,MAAM,CAACQ,YAAY,CAACpG,CAAC,CAAC,GAAG8G,aAAa,CAACY,cAAc;IACzD;EACJ;;EAEA;EACA,IAAG9G,kBAAkB,CAACC,QAAQ,CAAC,EAAE;IAC7B+E,MAAM,CAAC+B,WAAW,GAAG,IAAI;EAC7B;EAEA/B,MAAM,CAACrI,YAAY,GAAG,IAAI,CAACA,YAAY;EAEvCqI,MAAM,CAAC/B,MAAM,GAAGA,MAAM;EACtBnH,OAAO,CAAC2I,MAAM,CAACO,MAAM,CAAC;EAEtBlJ,OAAO,CAACkL,OAAO,GAAGhL,IAAI,CAACgL,OAAO;EAC9BlL,OAAO,CAACmL,aAAa,GAAGhB,eAAe;EACvCnK,OAAO,CAACoL,eAAe,GAAGjB,eAAe;EAEzCnK,OAAO,CAACqL,UAAU,GAAG,IAAI;EAEzB,IAAG,UAAU,IAAInL,IAAI,EAAE;IACnBF,OAAO,CAACsL,YAAY,GAAGpL,IAAI,CAACqL,QAAQ,CAACC,OAAO;IAC5CxL,OAAO,CAACyL,YAAY,GAAGvL,IAAI,CAACqL,QAAQ,CAACG,OAAO;IAC5C1L,OAAO,CAAC2L,aAAa,GAAGzL,IAAI,CAACqL,QAAQ,CAACK,QAAQ;IAC9C5L,OAAO,CAAC6L,SAAS,GAAG3L,IAAI,CAACqL,QAAQ,CAACM,SAAS;IAC3C7L,OAAO,CAAC8L,OAAO,GAAG5L,IAAI,CAACqL,QAAQ,CAACO,OAAO;EAC3C;EAEA,IAAG,eAAe,IAAI5L,IAAI,EAAE;IACxBF,OAAO,CAAC+L,aAAa,GAAG,CAAC7L,IAAI,CAAC8L,aAAa,CAAC1K,CAAC,EAAEpB,IAAI,CAAC8L,aAAa,CAACtK,CAAC,EAAExB,IAAI,CAAC8L,aAAa,CAACpK,CAAC,CAAC;EAC9F;AACJ,CAAC;AAEDd,KAAK,CAACmL,OAAO,GAAG,YAAW;EACvB,IAAI,CAAClM,KAAK,CAACgE,MAAM,CAACmI,MAAM,CAAC,IAAI,CAAClM,OAAO,CAAC;EACtC,IAAI,CAACA,OAAO,CAACiM,OAAO,EAAE;AAC1B,CAAC;AAED,SAASE,kBAAkBA,CAACpM,KAAK,EAAEG,IAAI,EAAE;EACrC,IAAIkM,EAAE,GAAGrM,KAAK,CAACgE,MAAM,CAACqI,EAAE;EACxB,IAAIpM,OAAO,GAAGf,aAAa,CAAC;IAAEmN,EAAE,EAAEA;EAAG,CAAC,CAAC;EACvC,IAAIpH,MAAM,GAAG,IAAIlF,YAAY,CAACC,KAAK,EAAEC,OAAO,EAAEE,IAAI,CAACD,GAAG,CAAC;EACvDD,OAAO,CAACqM,MAAM,GAAGrH,MAAM;EACvBA,MAAM,CAAC2D,MAAM,CAACzI,IAAI,CAAC;EACnBH,KAAK,CAACgE,MAAM,CAACuI,GAAG,CAACtM,OAAO,CAAC;EACzB,OAAOgF,MAAM;AACjB;AAEAuH,MAAM,CAACC,OAAO,GAAGL,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}