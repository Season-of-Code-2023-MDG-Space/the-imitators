{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\nvar histogram2dCalc = require('../histogram2d/calc');\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar convertColumnData = require('./convert_column_xyz');\nvar clean2dArray = require('./clean_2d_array');\nvar interp2d = require('./interp2d');\nvar findEmpties = require('./find_empties');\nvar makeBoundArray = require('./make_bound_array');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nmodule.exports = function calc(gd, trace) {\n  // prepare the raw data\n  // run makeCalcdata on x and y even for heatmaps, in case of category mappings\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var isContour = Registry.traceIs(trace, 'contour');\n  var isHist = Registry.traceIs(trace, 'histogram');\n  var isGL2D = Registry.traceIs(trace, 'gl2d');\n  var zsmooth = isContour ? 'best' : trace.zsmooth;\n  var x, x0, dx, origX;\n  var y, y0, dy, origY;\n  var z, i, binned;\n\n  // cancel minimum tick spacings (only applies to bars and boxes)\n  xa._minDtick = 0;\n  ya._minDtick = 0;\n  if (isHist) {\n    binned = histogram2dCalc(gd, trace);\n    origX = binned.orig_x;\n    x = binned.x;\n    x0 = binned.x0;\n    dx = binned.dx;\n    origY = binned.orig_y;\n    y = binned.y;\n    y0 = binned.y0;\n    dy = binned.dy;\n    z = binned.z;\n  } else {\n    var zIn = trace.z;\n    if (Lib.isArray1D(zIn)) {\n      convertColumnData(trace, xa, ya, 'x', 'y', ['z']);\n      x = trace._x;\n      y = trace._y;\n      zIn = trace._z;\n    } else {\n      origX = trace.x ? xa.makeCalcdata(trace, 'x') : [];\n      origY = trace.y ? ya.makeCalcdata(trace, 'y') : [];\n      x = alignPeriod(trace, xa, 'x', origX).vals;\n      y = alignPeriod(trace, ya, 'y', origY).vals;\n      trace._x = x;\n      trace._y = y;\n    }\n    x0 = trace.x0;\n    dx = trace.dx;\n    y0 = trace.y0;\n    dy = trace.dy;\n    z = clean2dArray(zIn, trace, xa, ya);\n  }\n  if (xa.rangebreaks || ya.rangebreaks) {\n    z = dropZonBreaks(x, y, z);\n    if (!isHist) {\n      x = skipBreaks(x);\n      y = skipBreaks(y);\n      trace._x = x;\n      trace._y = y;\n    }\n  }\n  if (!isHist && (isContour || trace.connectgaps)) {\n    trace._emptypoints = findEmpties(z);\n    interp2d(z, trace._emptypoints);\n  }\n  function noZsmooth(msg) {\n    zsmooth = trace._input.zsmooth = trace.zsmooth = false;\n    Lib.warn('cannot use zsmooth: \"fast\": ' + msg);\n  }\n\n  // check whether we really can smooth (ie all boxes are about the same size)\n  if (zsmooth === 'fast') {\n    if (xa.type === 'log' || ya.type === 'log') {\n      noZsmooth('log axis found');\n    } else if (!isHist) {\n      if (x.length) {\n        var avgdx = (x[x.length - 1] - x[0]) / (x.length - 1);\n        var maxErrX = Math.abs(avgdx / 100);\n        for (i = 0; i < x.length - 1; i++) {\n          if (Math.abs(x[i + 1] - x[i] - avgdx) > maxErrX) {\n            noZsmooth('x scale is not linear');\n            break;\n          }\n        }\n      }\n      if (y.length && zsmooth === 'fast') {\n        var avgdy = (y[y.length - 1] - y[0]) / (y.length - 1);\n        var maxErrY = Math.abs(avgdy / 100);\n        for (i = 0; i < y.length - 1; i++) {\n          if (Math.abs(y[i + 1] - y[i] - avgdy) > maxErrY) {\n            noZsmooth('y scale is not linear');\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // create arrays of brick boundaries, to be used by autorange and heatmap.plot\n  var xlen = Lib.maxRowLength(z);\n  var xIn = trace.xtype === 'scaled' ? '' : x;\n  var xArray = makeBoundArray(trace, xIn, x0, dx, xlen, xa);\n  var yIn = trace.ytype === 'scaled' ? '' : y;\n  var yArray = makeBoundArray(trace, yIn, y0, dy, z.length, ya);\n\n  // handled in gl2d convert step\n  if (!isGL2D) {\n    trace._extremes[xa._id] = Axes.findExtremes(xa, xArray);\n    trace._extremes[ya._id] = Axes.findExtremes(ya, yArray);\n  }\n  var cd0 = {\n    x: xArray,\n    y: yArray,\n    z: z,\n    text: trace._text || trace.text,\n    hovertext: trace._hovertext || trace.hovertext\n  };\n  if (trace.xperiodalignment && origX) {\n    cd0.orig_x = origX;\n  }\n  if (trace.yperiodalignment && origY) {\n    cd0.orig_y = origY;\n  }\n  if (xIn && xIn.length === xArray.length - 1) cd0.xCenter = xIn;\n  if (yIn && yIn.length === yArray.length - 1) cd0.yCenter = yIn;\n  if (isHist) {\n    cd0.xRanges = binned.xRanges;\n    cd0.yRanges = binned.yRanges;\n    cd0.pts = binned.pts;\n  }\n  if (!isContour) {\n    colorscaleCalc(gd, trace, {\n      vals: z,\n      cLetter: 'z'\n    });\n  }\n  if (isContour && trace.contours && trace.contours.coloring === 'heatmap') {\n    var dummyTrace = {\n      type: trace.type === 'contour' ? 'heatmap' : 'histogram2d',\n      xcalendar: trace.xcalendar,\n      ycalendar: trace.ycalendar\n    };\n    cd0.xfill = makeBoundArray(dummyTrace, xIn, x0, dx, xlen, xa);\n    cd0.yfill = makeBoundArray(dummyTrace, yIn, y0, dy, z.length, ya);\n  }\n  return [cd0];\n};\nfunction skipBreaks(a) {\n  var b = [];\n  var len = a.length;\n  for (var i = 0; i < len; i++) {\n    var v = a[i];\n    if (v !== BADNUM) b.push(v);\n  }\n  return b;\n}\nfunction dropZonBreaks(x, y, z) {\n  var newZ = [];\n  var k = -1;\n  for (var i = 0; i < z.length; i++) {\n    if (y[i] === BADNUM) continue;\n    k++;\n    newZ[k] = [];\n    for (var j = 0; j < z[i].length; j++) {\n      if (x[j] === BADNUM) continue;\n      newZ[k].push(z[i][j]);\n    }\n  }\n  return newZ;\n}","map":{"version":3,"names":["Registry","require","Lib","Axes","alignPeriod","histogram2dCalc","colorscaleCalc","convertColumnData","clean2dArray","interp2d","findEmpties","makeBoundArray","BADNUM","module","exports","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","isContour","traceIs","isHist","isGL2D","zsmooth","x","x0","dx","origX","y","y0","dy","origY","z","i","binned","_minDtick","orig_x","orig_y","zIn","isArray1D","_x","_y","_z","makeCalcdata","vals","rangebreaks","dropZonBreaks","skipBreaks","connectgaps","_emptypoints","noZsmooth","msg","_input","warn","type","length","avgdx","maxErrX","Math","abs","avgdy","maxErrY","xlen","maxRowLength","xIn","xtype","xArray","yIn","ytype","yArray","_extremes","_id","findExtremes","cd0","text","_text","hovertext","_hovertext","xperiodalignment","yperiodalignment","xCenter","yCenter","xRanges","yRanges","pts","cLetter","contours","coloring","dummyTrace","xcalendar","ycalendar","xfill","yfill","a","b","len","v","push","newZ","k","j"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/heatmap/calc.js"],"sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nvar histogram2dCalc = require('../histogram2d/calc');\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar convertColumnData = require('./convert_column_xyz');\nvar clean2dArray = require('./clean_2d_array');\nvar interp2d = require('./interp2d');\nvar findEmpties = require('./find_empties');\nvar makeBoundArray = require('./make_bound_array');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function calc(gd, trace) {\n    // prepare the raw data\n    // run makeCalcdata on x and y even for heatmaps, in case of category mappings\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var isContour = Registry.traceIs(trace, 'contour');\n    var isHist = Registry.traceIs(trace, 'histogram');\n    var isGL2D = Registry.traceIs(trace, 'gl2d');\n    var zsmooth = isContour ? 'best' : trace.zsmooth;\n    var x, x0, dx, origX;\n    var y, y0, dy, origY;\n    var z, i, binned;\n\n    // cancel minimum tick spacings (only applies to bars and boxes)\n    xa._minDtick = 0;\n    ya._minDtick = 0;\n\n    if(isHist) {\n        binned = histogram2dCalc(gd, trace);\n        origX = binned.orig_x;\n        x = binned.x;\n        x0 = binned.x0;\n        dx = binned.dx;\n\n        origY = binned.orig_y;\n        y = binned.y;\n        y0 = binned.y0;\n        dy = binned.dy;\n\n        z = binned.z;\n    } else {\n        var zIn = trace.z;\n        if(Lib.isArray1D(zIn)) {\n            convertColumnData(trace, xa, ya, 'x', 'y', ['z']);\n            x = trace._x;\n            y = trace._y;\n            zIn = trace._z;\n        } else {\n            origX = trace.x ? xa.makeCalcdata(trace, 'x') : [];\n            origY = trace.y ? ya.makeCalcdata(trace, 'y') : [];\n            x = alignPeriod(trace, xa, 'x', origX).vals;\n            y = alignPeriod(trace, ya, 'y', origY).vals;\n            trace._x = x;\n            trace._y = y;\n        }\n\n        x0 = trace.x0;\n        dx = trace.dx;\n        y0 = trace.y0;\n        dy = trace.dy;\n\n        z = clean2dArray(zIn, trace, xa, ya);\n    }\n\n    if(xa.rangebreaks || ya.rangebreaks) {\n        z = dropZonBreaks(x, y, z);\n\n        if(!isHist) {\n            x = skipBreaks(x);\n            y = skipBreaks(y);\n\n            trace._x = x;\n            trace._y = y;\n        }\n    }\n\n    if(!isHist && (isContour || trace.connectgaps)) {\n        trace._emptypoints = findEmpties(z);\n        interp2d(z, trace._emptypoints);\n    }\n\n    function noZsmooth(msg) {\n        zsmooth = trace._input.zsmooth = trace.zsmooth = false;\n        Lib.warn('cannot use zsmooth: \"fast\": ' + msg);\n    }\n\n    // check whether we really can smooth (ie all boxes are about the same size)\n    if(zsmooth === 'fast') {\n        if(xa.type === 'log' || ya.type === 'log') {\n            noZsmooth('log axis found');\n        } else if(!isHist) {\n            if(x.length) {\n                var avgdx = (x[x.length - 1] - x[0]) / (x.length - 1);\n                var maxErrX = Math.abs(avgdx / 100);\n                for(i = 0; i < x.length - 1; i++) {\n                    if(Math.abs(x[i + 1] - x[i] - avgdx) > maxErrX) {\n                        noZsmooth('x scale is not linear');\n                        break;\n                    }\n                }\n            }\n            if(y.length && zsmooth === 'fast') {\n                var avgdy = (y[y.length - 1] - y[0]) / (y.length - 1);\n                var maxErrY = Math.abs(avgdy / 100);\n                for(i = 0; i < y.length - 1; i++) {\n                    if(Math.abs(y[i + 1] - y[i] - avgdy) > maxErrY) {\n                        noZsmooth('y scale is not linear');\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    // create arrays of brick boundaries, to be used by autorange and heatmap.plot\n    var xlen = Lib.maxRowLength(z);\n    var xIn = trace.xtype === 'scaled' ? '' : x;\n    var xArray = makeBoundArray(trace, xIn, x0, dx, xlen, xa);\n    var yIn = trace.ytype === 'scaled' ? '' : y;\n    var yArray = makeBoundArray(trace, yIn, y0, dy, z.length, ya);\n\n    // handled in gl2d convert step\n    if(!isGL2D) {\n        trace._extremes[xa._id] = Axes.findExtremes(xa, xArray);\n        trace._extremes[ya._id] = Axes.findExtremes(ya, yArray);\n    }\n\n    var cd0 = {\n        x: xArray,\n        y: yArray,\n        z: z,\n        text: trace._text || trace.text,\n        hovertext: trace._hovertext || trace.hovertext\n    };\n\n    if(trace.xperiodalignment && origX) {\n        cd0.orig_x = origX;\n    }\n    if(trace.yperiodalignment && origY) {\n        cd0.orig_y = origY;\n    }\n\n    if(xIn && xIn.length === xArray.length - 1) cd0.xCenter = xIn;\n    if(yIn && yIn.length === yArray.length - 1) cd0.yCenter = yIn;\n\n    if(isHist) {\n        cd0.xRanges = binned.xRanges;\n        cd0.yRanges = binned.yRanges;\n        cd0.pts = binned.pts;\n    }\n\n    if(!isContour) {\n        colorscaleCalc(gd, trace, {vals: z, cLetter: 'z'});\n    }\n\n    if(isContour && trace.contours && trace.contours.coloring === 'heatmap') {\n        var dummyTrace = {\n            type: trace.type === 'contour' ? 'heatmap' : 'histogram2d',\n            xcalendar: trace.xcalendar,\n            ycalendar: trace.ycalendar\n        };\n        cd0.xfill = makeBoundArray(dummyTrace, xIn, x0, dx, xlen, xa);\n        cd0.yfill = makeBoundArray(dummyTrace, yIn, y0, dy, z.length, ya);\n    }\n\n    return [cd0];\n};\n\nfunction skipBreaks(a) {\n    var b = [];\n    var len = a.length;\n    for(var i = 0; i < len; i++) {\n        var v = a[i];\n        if(v !== BADNUM) b.push(v);\n    }\n    return b;\n}\n\nfunction dropZonBreaks(x, y, z) {\n    var newZ = [];\n    var k = -1;\n    for(var i = 0; i < z.length; i++) {\n        if(y[i] === BADNUM) continue;\n        k++;\n        newZ[k] = [];\n        for(var j = 0; j < z[i].length; j++) {\n            if(x[j] === BADNUM) continue;\n\n            newZ[k].push(z[i][j]);\n        }\n    }\n    return newZ;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}