{"ast":null,"code":"'use strict';\n\nvar createMesh = require('../../../stackgl_modules').gl_mesh3d;\nvar triangulate = require('../../../stackgl_modules').delaunay_triangulate;\nvar alphaShape = require('../../../stackgl_modules').alpha_shape;\nvar convexHull = require('../../../stackgl_modules').convex_hull;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\nfunction Mesh3DTrace(scene, mesh, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.mesh = mesh;\n  this.name = '';\n  this.color = '#fff';\n  this.data = null;\n  this.showContour = false;\n}\nvar proto = Mesh3DTrace.prototype;\nproto.handlePick = function (selection) {\n  if (selection.object === this.mesh) {\n    var selectIndex = selection.index = selection.data.index;\n    if (selection.data._cellCenter) {\n      selection.traceCoordinate = selection.data.dataCoordinate;\n    } else {\n      selection.traceCoordinate = [this.data.x[selectIndex], this.data.y[selectIndex], this.data.z[selectIndex]];\n    }\n    var text = this.data.hovertext || this.data.text;\n    if (Array.isArray(text) && text[selectIndex] !== undefined) {\n      selection.textLabel = text[selectIndex];\n    } else if (text) {\n      selection.textLabel = text;\n    }\n    return true;\n  }\n};\nfunction parseColorArray(colors) {\n  var b = [];\n  var len = colors.length;\n  for (var i = 0; i < len; i++) {\n    b[i] = str2RgbaArray(colors[i]);\n  }\n  return b;\n}\n\n// Unpack position data\nfunction toDataCoords(axis, coord, scale, calendar) {\n  var b = [];\n  var len = coord.length;\n  for (var i = 0; i < len; i++) {\n    b[i] = axis.d2l(coord[i], 0, calendar) * scale;\n  }\n  return b;\n}\n\n// Round indices if passed as floats\nfunction toRoundIndex(a) {\n  var b = [];\n  var len = a.length;\n  for (var i = 0; i < len; i++) {\n    b[i] = Math.round(a[i]);\n  }\n  return b;\n}\nfunction delaunayCells(delaunayaxis, positions) {\n  var d = ['x', 'y', 'z'].indexOf(delaunayaxis);\n  var b = [];\n  var len = positions.length;\n  for (var i = 0; i < len; i++) {\n    b[i] = [positions[i][(d + 1) % 3], positions[i][(d + 2) % 3]];\n  }\n  return triangulate(b);\n}\n\n// Validate indices\nfunction hasValidIndices(list, numVertices) {\n  var len = list.length;\n  for (var i = 0; i < len; i++) {\n    if (list[i] <= -0.5 || list[i] >= numVertices - 0.5) {\n      // Note: the indices would be rounded -0.49 is valid.\n      return false;\n    }\n  }\n  return true;\n}\nproto.update = function (data) {\n  var scene = this.scene;\n  var layout = scene.fullSceneLayout;\n  this.data = data;\n  var numVertices = data.x.length;\n  var positions = zip3(toDataCoords(layout.xaxis, data.x, scene.dataScale[0], data.xcalendar), toDataCoords(layout.yaxis, data.y, scene.dataScale[1], data.ycalendar), toDataCoords(layout.zaxis, data.z, scene.dataScale[2], data.zcalendar));\n  var cells;\n  if (data.i && data.j && data.k) {\n    if (data.i.length !== data.j.length || data.j.length !== data.k.length || !hasValidIndices(data.i, numVertices) || !hasValidIndices(data.j, numVertices) || !hasValidIndices(data.k, numVertices)) {\n      return;\n    }\n    cells = zip3(toRoundIndex(data.i), toRoundIndex(data.j), toRoundIndex(data.k));\n  } else if (data.alphahull === 0) {\n    cells = convexHull(positions);\n  } else if (data.alphahull > 0) {\n    cells = alphaShape(data.alphahull, positions);\n  } else {\n    cells = delaunayCells(data.delaunayaxis, positions);\n  }\n  var config = {\n    positions: positions,\n    cells: cells,\n    lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n    ambient: data.lighting.ambient,\n    diffuse: data.lighting.diffuse,\n    specular: data.lighting.specular,\n    roughness: data.lighting.roughness,\n    fresnel: data.lighting.fresnel,\n    vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n    faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n    opacity: data.opacity,\n    contourEnable: data.contour.show,\n    contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n    contourWidth: data.contour.width,\n    useFacetNormals: data.flatshading\n  };\n  if (data.intensity) {\n    var cOpts = extractOpts(data);\n    this.color = '#fff';\n    var mode = data.intensitymode;\n    config[mode + 'Intensity'] = data.intensity;\n    config[mode + 'IntensityBounds'] = [cOpts.min, cOpts.max];\n    config.colormap = parseColorScale(data);\n  } else if (data.vertexcolor) {\n    this.color = data.vertexcolor[0];\n    config.vertexColors = parseColorArray(data.vertexcolor);\n  } else if (data.facecolor) {\n    this.color = data.facecolor[0];\n    config.cellColors = parseColorArray(data.facecolor);\n  } else {\n    this.color = data.color;\n    config.meshColor = str2RgbaArray(data.color);\n  }\n\n  // Update mesh\n  this.mesh.update(config);\n};\nproto.dispose = function () {\n  this.scene.glplot.remove(this.mesh);\n  this.mesh.dispose();\n};\nfunction createMesh3DTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var mesh = createMesh({\n    gl: gl\n  });\n  var result = new Mesh3DTrace(scene, mesh, data.uid);\n  mesh._trace = result;\n  result.update(data);\n  scene.glplot.add(mesh);\n  return result;\n}\nmodule.exports = createMesh3DTrace;","map":{"version":3,"names":["createMesh","require","gl_mesh3d","triangulate","delaunay_triangulate","alphaShape","alpha_shape","convexHull","convex_hull","parseColorScale","str2RgbaArray","extractOpts","zip3","Mesh3DTrace","scene","mesh","uid","name","color","data","showContour","proto","prototype","handlePick","selection","object","selectIndex","index","_cellCenter","traceCoordinate","dataCoordinate","x","y","z","text","hovertext","Array","isArray","undefined","textLabel","parseColorArray","colors","b","len","length","i","toDataCoords","axis","coord","scale","calendar","d2l","toRoundIndex","a","Math","round","delaunayCells","delaunayaxis","positions","d","indexOf","hasValidIndices","list","numVertices","update","layout","fullSceneLayout","xaxis","dataScale","xcalendar","yaxis","ycalendar","zaxis","zcalendar","cells","j","k","alphahull","config","lightPosition","lightposition","ambient","lighting","diffuse","specular","roughness","fresnel","vertexNormalsEpsilon","vertexnormalsepsilon","faceNormalsEpsilon","facenormalsepsilon","opacity","contourEnable","contour","show","contourColor","slice","contourWidth","width","useFacetNormals","flatshading","intensity","cOpts","mode","intensitymode","min","max","colormap","vertexcolor","vertexColors","facecolor","cellColors","meshColor","dispose","glplot","remove","createMesh3DTrace","gl","result","_trace","add","module","exports"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/mesh3d/convert.js"],"sourcesContent":["'use strict';\n\nvar createMesh = require('../../../stackgl_modules').gl_mesh3d;\nvar triangulate = require('../../../stackgl_modules').delaunay_triangulate;\nvar alphaShape = require('../../../stackgl_modules').alpha_shape;\nvar convexHull = require('../../../stackgl_modules').convex_hull;\n\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\n\nfunction Mesh3DTrace(scene, mesh, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.mesh = mesh;\n    this.name = '';\n    this.color = '#fff';\n    this.data = null;\n    this.showContour = false;\n}\n\nvar proto = Mesh3DTrace.prototype;\n\nproto.handlePick = function(selection) {\n    if(selection.object === this.mesh) {\n        var selectIndex = selection.index = selection.data.index;\n\n        if(selection.data._cellCenter) {\n            selection.traceCoordinate = selection.data.dataCoordinate;\n        } else {\n            selection.traceCoordinate = [\n                this.data.x[selectIndex],\n                this.data.y[selectIndex],\n                this.data.z[selectIndex]\n            ];\n        }\n\n        var text = this.data.hovertext || this.data.text;\n        if(Array.isArray(text) && text[selectIndex] !== undefined) {\n            selection.textLabel = text[selectIndex];\n        } else if(text) {\n            selection.textLabel = text;\n        }\n\n        return true;\n    }\n};\n\nfunction parseColorArray(colors) {\n    var b = [];\n    var len = colors.length;\n    for(var i = 0; i < len; i++) {\n        b[i] = str2RgbaArray(colors[i]);\n    }\n    return b;\n}\n\n// Unpack position data\nfunction toDataCoords(axis, coord, scale, calendar) {\n    var b = [];\n    var len = coord.length;\n    for(var i = 0; i < len; i++) {\n        b[i] = axis.d2l(coord[i], 0, calendar) * scale;\n    }\n    return b;\n}\n\n// Round indices if passed as floats\nfunction toRoundIndex(a) {\n    var b = [];\n    var len = a.length;\n    for(var i = 0; i < len; i++) {\n        b[i] = Math.round(a[i]);\n    }\n    return b;\n}\n\nfunction delaunayCells(delaunayaxis, positions) {\n    var d = ['x', 'y', 'z'].indexOf(delaunayaxis);\n    var b = [];\n    var len = positions.length;\n    for(var i = 0; i < len; i++) {\n        b[i] = [positions[i][(d + 1) % 3], positions[i][(d + 2) % 3]];\n    }\n    return triangulate(b);\n}\n\n// Validate indices\nfunction hasValidIndices(list, numVertices) {\n    var len = list.length;\n    for(var i = 0; i < len; i++) {\n        if(list[i] <= -0.5 || list[i] >= numVertices - 0.5) { // Note: the indices would be rounded -0.49 is valid.\n            return false;\n        }\n    }\n    return true;\n}\n\nproto.update = function(data) {\n    var scene = this.scene;\n    var layout = scene.fullSceneLayout;\n\n    this.data = data;\n\n    var numVertices = data.x.length;\n\n    var positions = zip3(\n        toDataCoords(layout.xaxis, data.x, scene.dataScale[0], data.xcalendar),\n        toDataCoords(layout.yaxis, data.y, scene.dataScale[1], data.ycalendar),\n        toDataCoords(layout.zaxis, data.z, scene.dataScale[2], data.zcalendar)\n    );\n\n    var cells;\n    if(data.i && data.j && data.k) {\n        if(\n            data.i.length !== data.j.length ||\n            data.j.length !== data.k.length ||\n            !hasValidIndices(data.i, numVertices) ||\n            !hasValidIndices(data.j, numVertices) ||\n            !hasValidIndices(data.k, numVertices)\n        ) {\n            return;\n        }\n        cells = zip3(\n            toRoundIndex(data.i),\n            toRoundIndex(data.j),\n            toRoundIndex(data.k)\n        );\n    } else if(data.alphahull === 0) {\n        cells = convexHull(positions);\n    } else if(data.alphahull > 0) {\n        cells = alphaShape(data.alphahull, positions);\n    } else {\n        cells = delaunayCells(data.delaunayaxis, positions);\n    }\n\n    var config = {\n        positions: positions,\n        cells: cells,\n        lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n        ambient: data.lighting.ambient,\n        diffuse: data.lighting.diffuse,\n        specular: data.lighting.specular,\n        roughness: data.lighting.roughness,\n        fresnel: data.lighting.fresnel,\n        vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n        faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n        opacity: data.opacity,\n        contourEnable: data.contour.show,\n        contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n        contourWidth: data.contour.width,\n        useFacetNormals: data.flatshading\n    };\n\n    if(data.intensity) {\n        var cOpts = extractOpts(data);\n        this.color = '#fff';\n        var mode = data.intensitymode;\n        config[mode + 'Intensity'] = data.intensity;\n        config[mode + 'IntensityBounds'] = [cOpts.min, cOpts.max];\n        config.colormap = parseColorScale(data);\n    } else if(data.vertexcolor) {\n        this.color = data.vertexcolor[0];\n        config.vertexColors = parseColorArray(data.vertexcolor);\n    } else if(data.facecolor) {\n        this.color = data.facecolor[0];\n        config.cellColors = parseColorArray(data.facecolor);\n    } else {\n        this.color = data.color;\n        config.meshColor = str2RgbaArray(data.color);\n    }\n\n    // Update mesh\n    this.mesh.update(config);\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.mesh);\n    this.mesh.dispose();\n};\n\nfunction createMesh3DTrace(scene, data) {\n    var gl = scene.glplot.gl;\n    var mesh = createMesh({gl: gl});\n    var result = new Mesh3DTrace(scene, mesh, data.uid);\n    mesh._trace = result;\n    result.update(data);\n    scene.glplot.add(mesh);\n    return result;\n}\n\nmodule.exports = createMesh3DTrace;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}