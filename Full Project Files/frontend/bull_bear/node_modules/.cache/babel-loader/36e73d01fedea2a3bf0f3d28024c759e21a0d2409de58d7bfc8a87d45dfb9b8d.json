{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar dragElement = require('../dragelement');\nvar dragHelpers = require('../dragelement/helpers');\nvar drawMode = dragHelpers.drawMode;\nvar selectMode = dragHelpers.selectMode;\nvar Registry = require('../../registry');\nvar Color = require('../color');\nvar constants = require('./draw_newshape/constants');\nvar i000 = constants.i000;\nvar i090 = constants.i090;\nvar i180 = constants.i180;\nvar i270 = constants.i270;\nvar handleOutline = require('./handle_outline');\nvar clearOutlineControllers = handleOutline.clearOutlineControllers;\nvar helpers = require('./draw_newshape/helpers');\nvar pointsOnRectangle = helpers.pointsOnRectangle;\nvar pointsOnEllipse = helpers.pointsOnEllipse;\nvar writePaths = helpers.writePaths;\nvar newShapes = require('./draw_newshape/newshapes');\nvar newSelections = require('../selections/draw_newselection/newselections');\nmodule.exports = function displayOutlines(polygons, outlines, dragOptions, nCalls) {\n  if (!nCalls) nCalls = 0;\n  var gd = dragOptions.gd;\n  function redraw() {\n    // recursive call\n    displayOutlines(polygons, outlines, dragOptions, nCalls++);\n    if (pointsOnEllipse(polygons[0]) || dragOptions.hasText) {\n      update({\n        redrawing: true\n      });\n    }\n  }\n  function update(opts) {\n    var updateObject = {};\n    if (dragOptions.isActiveShape !== undefined) {\n      dragOptions.isActiveShape = false; // i.e. to disable shape controllers\n      updateObject = newShapes(outlines, dragOptions);\n    }\n    if (dragOptions.isActiveSelection !== undefined) {\n      dragOptions.isActiveSelection = false; // i.e. to disable selection controllers\n      updateObject = newSelections(outlines, dragOptions);\n      gd._fullLayout._reselect = true;\n    }\n    if (Object.keys(updateObject).length) {\n      Registry.call((opts || {}).redrawing ? 'relayout' : '_guiRelayout', gd, updateObject);\n    }\n  }\n  var fullLayout = gd._fullLayout;\n  var zoomLayer = fullLayout._zoomlayer;\n  var dragmode = dragOptions.dragmode;\n  var isDrawMode = drawMode(dragmode);\n  var isSelectMode = selectMode(dragmode);\n  if (isDrawMode || isSelectMode) {\n    gd._fullLayout._outlining = true;\n  }\n  clearOutlineControllers(gd);\n\n  // make outline\n  outlines.attr('d', writePaths(polygons));\n\n  // add controllers\n  var vertexDragOptions;\n  var groupDragOptions;\n  var indexI; // cell index\n  var indexJ; // vertex or cell-controller index\n  var copyPolygons;\n  if (!nCalls && (dragOptions.isActiveShape || dragOptions.isActiveSelection)) {\n    copyPolygons = recordPositions([], polygons);\n    var g = zoomLayer.append('g').attr('class', 'outline-controllers');\n    addVertexControllers(g);\n    addGroupControllers();\n  }\n  function startDragVertex(evt) {\n    indexI = +evt.srcElement.getAttribute('data-i');\n    indexJ = +evt.srcElement.getAttribute('data-j');\n    vertexDragOptions[indexI][indexJ].moveFn = moveVertexController;\n  }\n  function moveVertexController(dx, dy) {\n    if (!polygons.length) return;\n    var x0 = copyPolygons[indexI][indexJ][1];\n    var y0 = copyPolygons[indexI][indexJ][2];\n    var cell = polygons[indexI];\n    var len = cell.length;\n    if (pointsOnRectangle(cell)) {\n      var _dx = dx;\n      var _dy = dy;\n      if (dragOptions.isActiveSelection) {\n        // handle an edge contoller for rect selections\n        var nextPoint = getNextPoint(cell, indexJ);\n        if (nextPoint[1] === cell[indexJ][1]) {\n          // a vertical edge\n          _dy = 0;\n        } else {\n          // a horizontal edge\n          _dx = 0;\n        }\n      }\n      for (var q = 0; q < len; q++) {\n        if (q === indexJ) continue;\n\n        // move other corners of rectangle\n        var pos = cell[q];\n        if (pos[1] === cell[indexJ][1]) {\n          pos[1] = x0 + _dx;\n        }\n        if (pos[2] === cell[indexJ][2]) {\n          pos[2] = y0 + _dy;\n        }\n      }\n      // move the corner\n      cell[indexJ][1] = x0 + _dx;\n      cell[indexJ][2] = y0 + _dy;\n      if (!pointsOnRectangle(cell)) {\n        // reject result to rectangles with ensure areas\n        for (var j = 0; j < len; j++) {\n          for (var k = 0; k < cell[j].length; k++) {\n            cell[j][k] = copyPolygons[indexI][j][k];\n          }\n        }\n      }\n    } else {\n      // other polylines\n      cell[indexJ][1] = x0 + dx;\n      cell[indexJ][2] = y0 + dy;\n    }\n    redraw();\n  }\n  function endDragVertexController() {\n    update();\n  }\n  function removeVertex() {\n    if (!polygons.length) return;\n    if (!polygons[indexI]) return;\n    if (!polygons[indexI].length) return;\n    var newPolygon = [];\n    for (var j = 0; j < polygons[indexI].length; j++) {\n      if (j !== indexJ) {\n        newPolygon.push(polygons[indexI][j]);\n      }\n    }\n    if (newPolygon.length > 1 && !(newPolygon.length === 2 && newPolygon[1][0] === 'Z')) {\n      if (indexJ === 0) {\n        newPolygon[0][0] = 'M';\n      }\n      polygons[indexI] = newPolygon;\n      redraw();\n      update();\n    }\n  }\n  function clickVertexController(numClicks, evt) {\n    if (numClicks === 2) {\n      indexI = +evt.srcElement.getAttribute('data-i');\n      indexJ = +evt.srcElement.getAttribute('data-j');\n      var cell = polygons[indexI];\n      if (!pointsOnRectangle(cell) && !pointsOnEllipse(cell)) {\n        removeVertex();\n      }\n    }\n  }\n  function addVertexControllers(g) {\n    vertexDragOptions = [];\n    for (var i = 0; i < polygons.length; i++) {\n      var cell = polygons[i];\n      var onRect = pointsOnRectangle(cell);\n      var onEllipse = !onRect && pointsOnEllipse(cell);\n      vertexDragOptions[i] = [];\n      var len = cell.length;\n      for (var j = 0; j < len; j++) {\n        if (cell[j][0] === 'Z') continue;\n        if (onEllipse && j !== i000 && j !== i090 && j !== i180 && j !== i270) {\n          continue;\n        }\n        var rectSelection = onRect && dragOptions.isActiveSelection;\n        var nextPoint;\n        if (rectSelection) nextPoint = getNextPoint(cell, j);\n        var x = cell[j][1];\n        var y = cell[j][2];\n        var vertex = g.append(rectSelection ? 'rect' : 'circle').attr('data-i', i).attr('data-j', j).style({\n          fill: Color.background,\n          stroke: Color.defaultLine,\n          'stroke-width': 1,\n          'shape-rendering': 'crispEdges'\n        });\n        if (rectSelection) {\n          // convert a vertex controller to an edge controller for rect selections\n          var dx = nextPoint[1] - x;\n          var dy = nextPoint[2] - y;\n          var width = dy ? 5 : Math.max(Math.min(25, Math.abs(dx) - 5), 5);\n          var height = dx ? 5 : Math.max(Math.min(25, Math.abs(dy) - 5), 5);\n          vertex.classed(dy ? 'cursor-ew-resize' : 'cursor-ns-resize', true).attr('width', width).attr('height', height).attr('x', x - width / 2).attr('y', y - height / 2).attr('transform', strTranslate(dx / 2, dy / 2));\n        } else {\n          vertex.classed('cursor-grab', true).attr('r', 5).attr('cx', x).attr('cy', y);\n        }\n        vertexDragOptions[i][j] = {\n          element: vertex.node(),\n          gd: gd,\n          prepFn: startDragVertex,\n          doneFn: endDragVertexController,\n          clickFn: clickVertexController\n        };\n        dragElement.init(vertexDragOptions[i][j]);\n      }\n    }\n  }\n  function moveGroup(dx, dy) {\n    if (!polygons.length) return;\n    for (var i = 0; i < polygons.length; i++) {\n      for (var j = 0; j < polygons[i].length; j++) {\n        for (var k = 0; k + 2 < polygons[i][j].length; k += 2) {\n          polygons[i][j][k + 1] = copyPolygons[i][j][k + 1] + dx;\n          polygons[i][j][k + 2] = copyPolygons[i][j][k + 2] + dy;\n        }\n      }\n    }\n  }\n  function moveGroupController(dx, dy) {\n    moveGroup(dx, dy);\n    redraw();\n  }\n  function startDragGroupController(evt) {\n    indexI = +evt.srcElement.getAttribute('data-i');\n    if (!indexI) indexI = 0; // ensure non-existing move button get zero index\n\n    groupDragOptions[indexI].moveFn = moveGroupController;\n  }\n  function endDragGroupController() {\n    update();\n  }\n  function clickGroupController(numClicks) {\n    if (numClicks === 2) {\n      eraseActiveSelection(gd);\n    }\n  }\n  function addGroupControllers() {\n    groupDragOptions = [];\n    if (!polygons.length) return;\n    var i = 0;\n    groupDragOptions[i] = {\n      element: outlines[0][0],\n      gd: gd,\n      prepFn: startDragGroupController,\n      doneFn: endDragGroupController,\n      clickFn: clickGroupController\n    };\n    dragElement.init(groupDragOptions[i]);\n  }\n};\nfunction recordPositions(polygonsOut, polygonsIn) {\n  for (var i = 0; i < polygonsIn.length; i++) {\n    var cell = polygonsIn[i];\n    polygonsOut[i] = [];\n    for (var j = 0; j < cell.length; j++) {\n      polygonsOut[i][j] = [];\n      for (var k = 0; k < cell[j].length; k++) {\n        polygonsOut[i][j][k] = cell[j][k];\n      }\n    }\n  }\n  return polygonsOut;\n}\nfunction getNextPoint(cell, j) {\n  var x = cell[j][1];\n  var y = cell[j][2];\n  var len = cell.length;\n  var nextJ, nextX, nextY;\n  nextJ = (j + 1) % len;\n  nextX = cell[nextJ][1];\n  nextY = cell[nextJ][2];\n\n  // avoid potential double points (closing points)\n  if (nextX === x && nextY === y) {\n    nextJ = (j + 2) % len;\n    nextX = cell[nextJ][1];\n    nextY = cell[nextJ][2];\n  }\n  return [nextJ, nextX, nextY];\n}\nfunction eraseActiveSelection(gd) {\n  // Do not allow removal of selections on other dragmodes.\n  // This ensures the user could still double click to\n  // deselect all trace.selectedpoints,\n  // if that's what they wanted.\n  // Also double click to zoom back won't result in\n  // any surprising selection removal.\n  if (!selectMode(gd._fullLayout.dragmode)) return;\n  clearOutlineControllers(gd);\n  var id = gd._fullLayout._activeSelectionIndex;\n  var selections = (gd.layout || {}).selections || [];\n  if (id < selections.length) {\n    var list = [];\n    for (var q = 0; q < selections.length; q++) {\n      if (q !== id) {\n        list.push(selections[q]);\n      }\n    }\n    delete gd._fullLayout._activeSelectionIndex;\n    var erasedSelection = gd._fullLayout.selections[id];\n    gd._fullLayout._deselect = {\n      xref: erasedSelection.xref,\n      yref: erasedSelection.yref\n    };\n    Registry.call('_guiRelayout', gd, {\n      selections: list\n    });\n  }\n}","map":{"version":3,"names":["Lib","require","strTranslate","dragElement","dragHelpers","drawMode","selectMode","Registry","Color","constants","i000","i090","i180","i270","handleOutline","clearOutlineControllers","helpers","pointsOnRectangle","pointsOnEllipse","writePaths","newShapes","newSelections","module","exports","displayOutlines","polygons","outlines","dragOptions","nCalls","gd","redraw","hasText","update","redrawing","opts","updateObject","isActiveShape","undefined","isActiveSelection","_fullLayout","_reselect","Object","keys","length","call","fullLayout","zoomLayer","_zoomlayer","dragmode","isDrawMode","isSelectMode","_outlining","attr","vertexDragOptions","groupDragOptions","indexI","indexJ","copyPolygons","recordPositions","g","append","addVertexControllers","addGroupControllers","startDragVertex","evt","srcElement","getAttribute","moveFn","moveVertexController","dx","dy","x0","y0","cell","len","_dx","_dy","nextPoint","getNextPoint","q","pos","j","k","endDragVertexController","removeVertex","newPolygon","push","clickVertexController","numClicks","i","onRect","onEllipse","rectSelection","x","y","vertex","style","fill","background","stroke","defaultLine","width","Math","max","min","abs","height","classed","element","node","prepFn","doneFn","clickFn","init","moveGroup","moveGroupController","startDragGroupController","endDragGroupController","clickGroupController","eraseActiveSelection","polygonsOut","polygonsIn","nextJ","nextX","nextY","id","_activeSelectionIndex","selections","layout","list","erasedSelection","_deselect","xref","yref"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/components/shapes/display_outlines.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\n\nvar dragElement = require('../dragelement');\nvar dragHelpers = require('../dragelement/helpers');\nvar drawMode = dragHelpers.drawMode;\nvar selectMode = dragHelpers.selectMode;\n\nvar Registry = require('../../registry');\nvar Color = require('../color');\n\nvar constants = require('./draw_newshape/constants');\nvar i000 = constants.i000;\nvar i090 = constants.i090;\nvar i180 = constants.i180;\nvar i270 = constants.i270;\n\nvar handleOutline = require('./handle_outline');\nvar clearOutlineControllers = handleOutline.clearOutlineControllers;\n\nvar helpers = require('./draw_newshape/helpers');\nvar pointsOnRectangle = helpers.pointsOnRectangle;\nvar pointsOnEllipse = helpers.pointsOnEllipse;\nvar writePaths = helpers.writePaths;\nvar newShapes = require('./draw_newshape/newshapes');\nvar newSelections = require('../selections/draw_newselection/newselections');\n\nmodule.exports = function displayOutlines(polygons, outlines, dragOptions, nCalls) {\n    if(!nCalls) nCalls = 0;\n\n    var gd = dragOptions.gd;\n\n    function redraw() {\n        // recursive call\n        displayOutlines(polygons, outlines, dragOptions, nCalls++);\n\n        if(pointsOnEllipse(polygons[0]) || dragOptions.hasText) {\n            update({redrawing: true});\n        }\n    }\n\n    function update(opts) {\n        var updateObject = {};\n\n        if(dragOptions.isActiveShape !== undefined) {\n            dragOptions.isActiveShape = false; // i.e. to disable shape controllers\n            updateObject = newShapes(outlines, dragOptions);\n        }\n\n        if(dragOptions.isActiveSelection !== undefined) {\n            dragOptions.isActiveSelection = false; // i.e. to disable selection controllers\n            updateObject = newSelections(outlines, dragOptions);\n\n            gd._fullLayout._reselect = true;\n        }\n\n        if(Object.keys(updateObject).length) {\n            Registry.call((opts || {}).redrawing ? 'relayout' : '_guiRelayout', gd, updateObject);\n        }\n    }\n\n    var fullLayout = gd._fullLayout;\n    var zoomLayer = fullLayout._zoomlayer;\n\n    var dragmode = dragOptions.dragmode;\n    var isDrawMode = drawMode(dragmode);\n    var isSelectMode = selectMode(dragmode);\n\n    if(isDrawMode || isSelectMode) {\n        gd._fullLayout._outlining = true;\n    }\n\n    clearOutlineControllers(gd);\n\n    // make outline\n    outlines.attr('d', writePaths(polygons));\n\n    // add controllers\n    var vertexDragOptions;\n    var groupDragOptions;\n    var indexI; // cell index\n    var indexJ; // vertex or cell-controller index\n    var copyPolygons;\n\n    if(!nCalls && (\n        dragOptions.isActiveShape ||\n        dragOptions.isActiveSelection\n    )) {\n        copyPolygons = recordPositions([], polygons);\n\n        var g = zoomLayer.append('g').attr('class', 'outline-controllers');\n        addVertexControllers(g);\n        addGroupControllers();\n    }\n\n    function startDragVertex(evt) {\n        indexI = +evt.srcElement.getAttribute('data-i');\n        indexJ = +evt.srcElement.getAttribute('data-j');\n\n        vertexDragOptions[indexI][indexJ].moveFn = moveVertexController;\n    }\n\n    function moveVertexController(dx, dy) {\n        if(!polygons.length) return;\n\n        var x0 = copyPolygons[indexI][indexJ][1];\n        var y0 = copyPolygons[indexI][indexJ][2];\n\n        var cell = polygons[indexI];\n        var len = cell.length;\n        if(pointsOnRectangle(cell)) {\n            var _dx = dx;\n            var _dy = dy;\n            if(dragOptions.isActiveSelection) {\n                // handle an edge contoller for rect selections\n                var nextPoint = getNextPoint(cell, indexJ);\n                if(nextPoint[1] === cell[indexJ][1]) { // a vertical edge\n                    _dy = 0;\n                } else { // a horizontal edge\n                    _dx = 0;\n                }\n            }\n\n            for(var q = 0; q < len; q++) {\n                if(q === indexJ) continue;\n\n                // move other corners of rectangle\n                var pos = cell[q];\n\n                if(pos[1] === cell[indexJ][1]) {\n                    pos[1] = x0 + _dx;\n                }\n\n                if(pos[2] === cell[indexJ][2]) {\n                    pos[2] = y0 + _dy;\n                }\n            }\n            // move the corner\n            cell[indexJ][1] = x0 + _dx;\n            cell[indexJ][2] = y0 + _dy;\n\n            if(!pointsOnRectangle(cell)) {\n                // reject result to rectangles with ensure areas\n                for(var j = 0; j < len; j++) {\n                    for(var k = 0; k < cell[j].length; k++) {\n                        cell[j][k] = copyPolygons[indexI][j][k];\n                    }\n                }\n            }\n        } else { // other polylines\n            cell[indexJ][1] = x0 + dx;\n            cell[indexJ][2] = y0 + dy;\n        }\n\n        redraw();\n    }\n\n    function endDragVertexController() {\n        update();\n    }\n\n    function removeVertex() {\n        if(!polygons.length) return;\n        if(!polygons[indexI]) return;\n        if(!polygons[indexI].length) return;\n\n        var newPolygon = [];\n        for(var j = 0; j < polygons[indexI].length; j++) {\n            if(j !== indexJ) {\n                newPolygon.push(\n                    polygons[indexI][j]\n                );\n            }\n        }\n\n        if(newPolygon.length > 1 && !(\n            newPolygon.length === 2 && newPolygon[1][0] === 'Z')\n        ) {\n            if(indexJ === 0) {\n                newPolygon[0][0] = 'M';\n            }\n\n            polygons[indexI] = newPolygon;\n\n            redraw();\n            update();\n        }\n    }\n\n    function clickVertexController(numClicks, evt) {\n        if(numClicks === 2) {\n            indexI = +evt.srcElement.getAttribute('data-i');\n            indexJ = +evt.srcElement.getAttribute('data-j');\n\n            var cell = polygons[indexI];\n            if(\n                !pointsOnRectangle(cell) &&\n                !pointsOnEllipse(cell)\n            ) {\n                removeVertex();\n            }\n        }\n    }\n\n    function addVertexControllers(g) {\n        vertexDragOptions = [];\n\n        for(var i = 0; i < polygons.length; i++) {\n            var cell = polygons[i];\n\n            var onRect = pointsOnRectangle(cell);\n            var onEllipse = !onRect && pointsOnEllipse(cell);\n\n            vertexDragOptions[i] = [];\n            var len = cell.length;\n            for(var j = 0; j < len; j++) {\n                if(cell[j][0] === 'Z') continue;\n\n                if(onEllipse &&\n                    j !== i000 &&\n                    j !== i090 &&\n                    j !== i180 &&\n                    j !== i270\n                ) {\n                    continue;\n                }\n\n                var rectSelection = onRect && dragOptions.isActiveSelection;\n                var nextPoint;\n                if(rectSelection) nextPoint = getNextPoint(cell, j);\n\n                var x = cell[j][1];\n                var y = cell[j][2];\n\n                var vertex = g.append(rectSelection ? 'rect' : 'circle')\n                    .attr('data-i', i)\n                    .attr('data-j', j)\n                    .style({\n                        fill: Color.background,\n                        stroke: Color.defaultLine,\n                        'stroke-width': 1,\n                        'shape-rendering': 'crispEdges',\n                    });\n\n                if(rectSelection) {\n                    // convert a vertex controller to an edge controller for rect selections\n                    var dx = nextPoint[1] - x;\n                    var dy = nextPoint[2] - y;\n\n                    var width = dy ? 5 : Math.max(Math.min(25, Math.abs(dx) - 5), 5);\n                    var height = dx ? 5 : Math.max(Math.min(25, Math.abs(dy) - 5), 5);\n\n                    vertex.classed(dy ? 'cursor-ew-resize' : 'cursor-ns-resize', true)\n                        .attr('width', width)\n                        .attr('height', height)\n                        .attr('x', x - width / 2)\n                        .attr('y', y - height / 2)\n                        .attr('transform', strTranslate(dx / 2, dy / 2));\n                } else {\n                    vertex.classed('cursor-grab', true)\n                        .attr('r', 5)\n                        .attr('cx', x)\n                        .attr('cy', y);\n                }\n\n                vertexDragOptions[i][j] = {\n                    element: vertex.node(),\n                    gd: gd,\n                    prepFn: startDragVertex,\n                    doneFn: endDragVertexController,\n                    clickFn: clickVertexController\n                };\n\n                dragElement.init(vertexDragOptions[i][j]);\n            }\n        }\n    }\n\n    function moveGroup(dx, dy) {\n        if(!polygons.length) return;\n\n        for(var i = 0; i < polygons.length; i++) {\n            for(var j = 0; j < polygons[i].length; j++) {\n                for(var k = 0; k + 2 < polygons[i][j].length; k += 2) {\n                    polygons[i][j][k + 1] = copyPolygons[i][j][k + 1] + dx;\n                    polygons[i][j][k + 2] = copyPolygons[i][j][k + 2] + dy;\n                }\n            }\n        }\n    }\n\n    function moveGroupController(dx, dy) {\n        moveGroup(dx, dy);\n\n        redraw();\n    }\n\n    function startDragGroupController(evt) {\n        indexI = +evt.srcElement.getAttribute('data-i');\n        if(!indexI) indexI = 0; // ensure non-existing move button get zero index\n\n        groupDragOptions[indexI].moveFn = moveGroupController;\n    }\n\n    function endDragGroupController() {\n        update();\n    }\n\n    function clickGroupController(numClicks) {\n        if(numClicks === 2) {\n            eraseActiveSelection(gd);\n        }\n    }\n\n    function addGroupControllers() {\n        groupDragOptions = [];\n\n        if(!polygons.length) return;\n\n        var i = 0;\n        groupDragOptions[i] = {\n            element: outlines[0][0],\n            gd: gd,\n            prepFn: startDragGroupController,\n            doneFn: endDragGroupController,\n            clickFn: clickGroupController\n        };\n\n        dragElement.init(groupDragOptions[i]);\n    }\n};\n\nfunction recordPositions(polygonsOut, polygonsIn) {\n    for(var i = 0; i < polygonsIn.length; i++) {\n        var cell = polygonsIn[i];\n        polygonsOut[i] = [];\n        for(var j = 0; j < cell.length; j++) {\n            polygonsOut[i][j] = [];\n            for(var k = 0; k < cell[j].length; k++) {\n                polygonsOut[i][j][k] = cell[j][k];\n            }\n        }\n    }\n    return polygonsOut;\n}\n\nfunction getNextPoint(cell, j) {\n    var x = cell[j][1];\n    var y = cell[j][2];\n    var len = cell.length;\n    var nextJ, nextX, nextY;\n    nextJ = (j + 1) % len;\n    nextX = cell[nextJ][1];\n    nextY = cell[nextJ][2];\n\n    // avoid potential double points (closing points)\n    if(nextX === x && nextY === y) {\n        nextJ = (j + 2) % len;\n        nextX = cell[nextJ][1];\n        nextY = cell[nextJ][2];\n    }\n\n    return [nextJ, nextX, nextY];\n}\n\nfunction eraseActiveSelection(gd) {\n    // Do not allow removal of selections on other dragmodes.\n    // This ensures the user could still double click to\n    // deselect all trace.selectedpoints,\n    // if that's what they wanted.\n    // Also double click to zoom back won't result in\n    // any surprising selection removal.\n    if(!selectMode(gd._fullLayout.dragmode)) return;\n\n    clearOutlineControllers(gd);\n\n    var id = gd._fullLayout._activeSelectionIndex;\n    var selections = (gd.layout || {}).selections || [];\n    if(id < selections.length) {\n        var list = [];\n        for(var q = 0; q < selections.length; q++) {\n            if(q !== id) {\n                list.push(selections[q]);\n            }\n        }\n\n        delete gd._fullLayout._activeSelectionIndex;\n\n        var erasedSelection = gd._fullLayout.selections[id];\n        gd._fullLayout._deselect = {\n            xref: erasedSelection.xref,\n            yref: erasedSelection.yref\n        };\n\n        Registry.call('_guiRelayout', gd, {\n            selections: list\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}