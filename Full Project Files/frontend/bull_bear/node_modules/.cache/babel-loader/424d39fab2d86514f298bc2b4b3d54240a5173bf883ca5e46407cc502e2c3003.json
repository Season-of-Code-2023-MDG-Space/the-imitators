{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar getTopojsonFeatures = require('../../lib/topojson_utils').getTopojsonFeatures;\nvar geoJsonUtils = require('../../lib/geojson_utils');\nvar geoUtils = require('../../lib/geo_location_utils');\nvar findExtremes = require('../../plots/cartesian/autorange').findExtremes;\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar subTypes = require('../scatter/subtypes');\nvar style = require('./style');\nfunction plot(gd, geo, calcData) {\n  var scatterLayer = geo.layers.frontplot.select('.scatterlayer');\n  var gTraces = Lib.makeTraceGroups(scatterLayer, calcData, 'trace scattergeo');\n  function removeBADNUM(d, node) {\n    if (d.lonlat[0] === BADNUM) {\n      d3.select(node).remove();\n    }\n  }\n\n  // TODO find a way to order the inner nodes on update\n  gTraces.selectAll('*').remove();\n  gTraces.each(function (calcTrace) {\n    var s = d3.select(this);\n    var trace = calcTrace[0].trace;\n    if (subTypes.hasLines(trace) || trace.fill !== 'none') {\n      var lineCoords = geoJsonUtils.calcTraceToLineCoords(calcTrace);\n      var lineData = trace.fill !== 'none' ? geoJsonUtils.makePolygon(lineCoords) : geoJsonUtils.makeLine(lineCoords);\n      s.selectAll('path.js-line').data([{\n        geojson: lineData,\n        trace: trace\n      }]).enter().append('path').classed('js-line', true).style('stroke-miterlimit', 2);\n    }\n    if (subTypes.hasMarkers(trace)) {\n      s.selectAll('path.point').data(Lib.identity).enter().append('path').classed('point', true).each(function (calcPt) {\n        removeBADNUM(calcPt, this);\n      });\n    }\n    if (subTypes.hasText(trace)) {\n      s.selectAll('g').data(Lib.identity).enter().append('g').append('text').each(function (calcPt) {\n        removeBADNUM(calcPt, this);\n      });\n    }\n\n    // call style here within topojson request callback\n    style(gd, calcTrace);\n  });\n}\nfunction calcGeoJSON(calcTrace, fullLayout) {\n  var trace = calcTrace[0].trace;\n  var geoLayout = fullLayout[trace.geo];\n  var geo = geoLayout._subplot;\n  var len = trace._length;\n  var i, calcPt;\n  if (Array.isArray(trace.locations)) {\n    var locationmode = trace.locationmode;\n    var features = locationmode === 'geojson-id' ? geoUtils.extractTraceFeature(calcTrace) : getTopojsonFeatures(trace, geo.topojson);\n    for (i = 0; i < len; i++) {\n      calcPt = calcTrace[i];\n      var feature = locationmode === 'geojson-id' ? calcPt.fOut : geoUtils.locationToFeature(locationmode, calcPt.loc, features);\n      calcPt.lonlat = feature ? feature.properties.ct : [BADNUM, BADNUM];\n    }\n  }\n  var opts = {\n    padded: true\n  };\n  var lonArray;\n  var latArray;\n  if (geoLayout.fitbounds === 'geojson' && trace.locationmode === 'geojson-id') {\n    var bboxGeojson = geoUtils.computeBbox(geoUtils.getTraceGeojson(trace));\n    lonArray = [bboxGeojson[0], bboxGeojson[2]];\n    latArray = [bboxGeojson[1], bboxGeojson[3]];\n  } else {\n    lonArray = new Array(len);\n    latArray = new Array(len);\n    for (i = 0; i < len; i++) {\n      calcPt = calcTrace[i];\n      lonArray[i] = calcPt.lonlat[0];\n      latArray[i] = calcPt.lonlat[1];\n    }\n    opts.ppad = calcMarkerSize(trace, len);\n  }\n  trace._extremes.lon = findExtremes(geoLayout.lonaxis._ax, lonArray, opts);\n  trace._extremes.lat = findExtremes(geoLayout.lataxis._ax, latArray, opts);\n}\nmodule.exports = {\n  calcGeoJSON: calcGeoJSON,\n  plot: plot\n};","map":{"version":3,"names":["d3","require","Lib","getTopojsonFeatures","geoJsonUtils","geoUtils","findExtremes","BADNUM","calcMarkerSize","subTypes","style","plot","gd","geo","calcData","scatterLayer","layers","frontplot","select","gTraces","makeTraceGroups","removeBADNUM","d","node","lonlat","remove","selectAll","each","calcTrace","s","trace","hasLines","fill","lineCoords","calcTraceToLineCoords","lineData","makePolygon","makeLine","data","geojson","enter","append","classed","hasMarkers","identity","calcPt","hasText","calcGeoJSON","fullLayout","geoLayout","_subplot","len","_length","i","Array","isArray","locations","locationmode","features","extractTraceFeature","topojson","feature","fOut","locationToFeature","loc","properties","ct","opts","padded","lonArray","latArray","fitbounds","bboxGeojson","computeBbox","getTraceGeojson","ppad","_extremes","lon","lonaxis","_ax","lat","lataxis","module","exports"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/scattergeo/plot.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\nvar getTopojsonFeatures = require('../../lib/topojson_utils').getTopojsonFeatures;\nvar geoJsonUtils = require('../../lib/geojson_utils');\nvar geoUtils = require('../../lib/geo_location_utils');\nvar findExtremes = require('../../plots/cartesian/autorange').findExtremes;\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar subTypes = require('../scatter/subtypes');\nvar style = require('./style');\n\nfunction plot(gd, geo, calcData) {\n    var scatterLayer = geo.layers.frontplot.select('.scatterlayer');\n    var gTraces = Lib.makeTraceGroups(scatterLayer, calcData, 'trace scattergeo');\n\n    function removeBADNUM(d, node) {\n        if(d.lonlat[0] === BADNUM) {\n            d3.select(node).remove();\n        }\n    }\n\n    // TODO find a way to order the inner nodes on update\n    gTraces.selectAll('*').remove();\n\n    gTraces.each(function(calcTrace) {\n        var s = d3.select(this);\n        var trace = calcTrace[0].trace;\n\n        if(subTypes.hasLines(trace) || trace.fill !== 'none') {\n            var lineCoords = geoJsonUtils.calcTraceToLineCoords(calcTrace);\n\n            var lineData = (trace.fill !== 'none') ?\n                geoJsonUtils.makePolygon(lineCoords) :\n                geoJsonUtils.makeLine(lineCoords);\n\n            s.selectAll('path.js-line')\n                .data([{geojson: lineData, trace: trace}])\n              .enter().append('path')\n                .classed('js-line', true)\n                .style('stroke-miterlimit', 2);\n        }\n\n        if(subTypes.hasMarkers(trace)) {\n            s.selectAll('path.point')\n                .data(Lib.identity)\n             .enter().append('path')\n                .classed('point', true)\n                .each(function(calcPt) { removeBADNUM(calcPt, this); });\n        }\n\n        if(subTypes.hasText(trace)) {\n            s.selectAll('g')\n                .data(Lib.identity)\n              .enter().append('g')\n                .append('text')\n                .each(function(calcPt) { removeBADNUM(calcPt, this); });\n        }\n\n        // call style here within topojson request callback\n        style(gd, calcTrace);\n    });\n}\n\nfunction calcGeoJSON(calcTrace, fullLayout) {\n    var trace = calcTrace[0].trace;\n    var geoLayout = fullLayout[trace.geo];\n    var geo = geoLayout._subplot;\n    var len = trace._length;\n    var i, calcPt;\n\n    if(Array.isArray(trace.locations)) {\n        var locationmode = trace.locationmode;\n        var features = locationmode === 'geojson-id' ?\n            geoUtils.extractTraceFeature(calcTrace) :\n            getTopojsonFeatures(trace, geo.topojson);\n\n        for(i = 0; i < len; i++) {\n            calcPt = calcTrace[i];\n\n            var feature = locationmode === 'geojson-id' ?\n                calcPt.fOut :\n                geoUtils.locationToFeature(locationmode, calcPt.loc, features);\n\n            calcPt.lonlat = feature ? feature.properties.ct : [BADNUM, BADNUM];\n        }\n    }\n\n    var opts = {padded: true};\n    var lonArray;\n    var latArray;\n\n    if(geoLayout.fitbounds === 'geojson' && trace.locationmode === 'geojson-id') {\n        var bboxGeojson = geoUtils.computeBbox(geoUtils.getTraceGeojson(trace));\n        lonArray = [bboxGeojson[0], bboxGeojson[2]];\n        latArray = [bboxGeojson[1], bboxGeojson[3]];\n    } else {\n        lonArray = new Array(len);\n        latArray = new Array(len);\n        for(i = 0; i < len; i++) {\n            calcPt = calcTrace[i];\n            lonArray[i] = calcPt.lonlat[0];\n            latArray[i] = calcPt.lonlat[1];\n        }\n\n        opts.ppad = calcMarkerSize(trace, len);\n    }\n\n    trace._extremes.lon = findExtremes(geoLayout.lonaxis._ax, lonArray, opts);\n    trace._extremes.lat = findExtremes(geoLayout.lataxis._ax, latArray, opts);\n}\n\nmodule.exports = {\n    calcGeoJSON: calcGeoJSON,\n    plot: plot\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,YAAY,CAAC;AAE9B,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,0BAA0B,CAAC,CAACE,mBAAmB;AACjF,IAAIC,YAAY,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AACrD,IAAII,QAAQ,GAAGJ,OAAO,CAAC,8BAA8B,CAAC;AACtD,IAAIK,YAAY,GAAGL,OAAO,CAAC,iCAAiC,CAAC,CAACK,YAAY;AAC1E,IAAIC,MAAM,GAAGN,OAAO,CAAC,2BAA2B,CAAC,CAACM,MAAM;AAExD,IAAIC,cAAc,GAAGP,OAAO,CAAC,iBAAiB,CAAC,CAACO,cAAc;AAC9D,IAAIC,QAAQ,GAAGR,OAAO,CAAC,qBAAqB,CAAC;AAC7C,IAAIS,KAAK,GAAGT,OAAO,CAAC,SAAS,CAAC;AAE9B,SAASU,IAAIA,CAACC,EAAE,EAAEC,GAAG,EAAEC,QAAQ,EAAE;EAC7B,IAAIC,YAAY,GAAGF,GAAG,CAACG,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,eAAe,CAAC;EAC/D,IAAIC,OAAO,GAAGjB,GAAG,CAACkB,eAAe,CAACL,YAAY,EAAED,QAAQ,EAAE,kBAAkB,CAAC;EAE7E,SAASO,YAAYA,CAACC,CAAC,EAAEC,IAAI,EAAE;IAC3B,IAAGD,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,KAAKjB,MAAM,EAAE;MACvBP,EAAE,CAACkB,MAAM,CAACK,IAAI,CAAC,CAACE,MAAM,EAAE;IAC5B;EACJ;;EAEA;EACAN,OAAO,CAACO,SAAS,CAAC,GAAG,CAAC,CAACD,MAAM,EAAE;EAE/BN,OAAO,CAACQ,IAAI,CAAC,UAASC,SAAS,EAAE;IAC7B,IAAIC,CAAC,GAAG7B,EAAE,CAACkB,MAAM,CAAC,IAAI,CAAC;IACvB,IAAIY,KAAK,GAAGF,SAAS,CAAC,CAAC,CAAC,CAACE,KAAK;IAE9B,IAAGrB,QAAQ,CAACsB,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,IAAI,KAAK,MAAM,EAAE;MAClD,IAAIC,UAAU,GAAG7B,YAAY,CAAC8B,qBAAqB,CAACN,SAAS,CAAC;MAE9D,IAAIO,QAAQ,GAAIL,KAAK,CAACE,IAAI,KAAK,MAAM,GACjC5B,YAAY,CAACgC,WAAW,CAACH,UAAU,CAAC,GACpC7B,YAAY,CAACiC,QAAQ,CAACJ,UAAU,CAAC;MAErCJ,CAAC,CAACH,SAAS,CAAC,cAAc,CAAC,CACtBY,IAAI,CAAC,CAAC;QAACC,OAAO,EAAEJ,QAAQ;QAAEL,KAAK,EAAEA;MAAK,CAAC,CAAC,CAAC,CAC3CU,KAAK,EAAE,CAACC,MAAM,CAAC,MAAM,CAAC,CACpBC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CACxBhC,KAAK,CAAC,mBAAmB,EAAE,CAAC,CAAC;IACtC;IAEA,IAAGD,QAAQ,CAACkC,UAAU,CAACb,KAAK,CAAC,EAAE;MAC3BD,CAAC,CAACH,SAAS,CAAC,YAAY,CAAC,CACpBY,IAAI,CAACpC,GAAG,CAAC0C,QAAQ,CAAC,CACrBJ,KAAK,EAAE,CAACC,MAAM,CAAC,MAAM,CAAC,CACnBC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CACtBf,IAAI,CAAC,UAASkB,MAAM,EAAE;QAAExB,YAAY,CAACwB,MAAM,EAAE,IAAI,CAAC;MAAE,CAAC,CAAC;IAC/D;IAEA,IAAGpC,QAAQ,CAACqC,OAAO,CAAChB,KAAK,CAAC,EAAE;MACxBD,CAAC,CAACH,SAAS,CAAC,GAAG,CAAC,CACXY,IAAI,CAACpC,GAAG,CAAC0C,QAAQ,CAAC,CACpBJ,KAAK,EAAE,CAACC,MAAM,CAAC,GAAG,CAAC,CACjBA,MAAM,CAAC,MAAM,CAAC,CACdd,IAAI,CAAC,UAASkB,MAAM,EAAE;QAAExB,YAAY,CAACwB,MAAM,EAAE,IAAI,CAAC;MAAE,CAAC,CAAC;IAC/D;;IAEA;IACAnC,KAAK,CAACE,EAAE,EAAEgB,SAAS,CAAC;EACxB,CAAC,CAAC;AACN;AAEA,SAASmB,WAAWA,CAACnB,SAAS,EAAEoB,UAAU,EAAE;EACxC,IAAIlB,KAAK,GAAGF,SAAS,CAAC,CAAC,CAAC,CAACE,KAAK;EAC9B,IAAImB,SAAS,GAAGD,UAAU,CAAClB,KAAK,CAACjB,GAAG,CAAC;EACrC,IAAIA,GAAG,GAAGoC,SAAS,CAACC,QAAQ;EAC5B,IAAIC,GAAG,GAAGrB,KAAK,CAACsB,OAAO;EACvB,IAAIC,CAAC,EAAER,MAAM;EAEb,IAAGS,KAAK,CAACC,OAAO,CAACzB,KAAK,CAAC0B,SAAS,CAAC,EAAE;IAC/B,IAAIC,YAAY,GAAG3B,KAAK,CAAC2B,YAAY;IACrC,IAAIC,QAAQ,GAAGD,YAAY,KAAK,YAAY,GACxCpD,QAAQ,CAACsD,mBAAmB,CAAC/B,SAAS,CAAC,GACvCzB,mBAAmB,CAAC2B,KAAK,EAAEjB,GAAG,CAAC+C,QAAQ,CAAC;IAE5C,KAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;MACrBR,MAAM,GAAGjB,SAAS,CAACyB,CAAC,CAAC;MAErB,IAAIQ,OAAO,GAAGJ,YAAY,KAAK,YAAY,GACvCZ,MAAM,CAACiB,IAAI,GACXzD,QAAQ,CAAC0D,iBAAiB,CAACN,YAAY,EAAEZ,MAAM,CAACmB,GAAG,EAAEN,QAAQ,CAAC;MAElEb,MAAM,CAACrB,MAAM,GAAGqC,OAAO,GAAGA,OAAO,CAACI,UAAU,CAACC,EAAE,GAAG,CAAC3D,MAAM,EAAEA,MAAM,CAAC;IACtE;EACJ;EAEA,IAAI4D,IAAI,GAAG;IAACC,MAAM,EAAE;EAAI,CAAC;EACzB,IAAIC,QAAQ;EACZ,IAAIC,QAAQ;EAEZ,IAAGrB,SAAS,CAACsB,SAAS,KAAK,SAAS,IAAIzC,KAAK,CAAC2B,YAAY,KAAK,YAAY,EAAE;IACzE,IAAIe,WAAW,GAAGnE,QAAQ,CAACoE,WAAW,CAACpE,QAAQ,CAACqE,eAAe,CAAC5C,KAAK,CAAC,CAAC;IACvEuC,QAAQ,GAAG,CAACG,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3CF,QAAQ,GAAG,CAACE,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,MAAM;IACHH,QAAQ,GAAG,IAAIf,KAAK,CAACH,GAAG,CAAC;IACzBmB,QAAQ,GAAG,IAAIhB,KAAK,CAACH,GAAG,CAAC;IACzB,KAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;MACrBR,MAAM,GAAGjB,SAAS,CAACyB,CAAC,CAAC;MACrBgB,QAAQ,CAAChB,CAAC,CAAC,GAAGR,MAAM,CAACrB,MAAM,CAAC,CAAC,CAAC;MAC9B8C,QAAQ,CAACjB,CAAC,CAAC,GAAGR,MAAM,CAACrB,MAAM,CAAC,CAAC,CAAC;IAClC;IAEA2C,IAAI,CAACQ,IAAI,GAAGnE,cAAc,CAACsB,KAAK,EAAEqB,GAAG,CAAC;EAC1C;EAEArB,KAAK,CAAC8C,SAAS,CAACC,GAAG,GAAGvE,YAAY,CAAC2C,SAAS,CAAC6B,OAAO,CAACC,GAAG,EAAEV,QAAQ,EAAEF,IAAI,CAAC;EACzErC,KAAK,CAAC8C,SAAS,CAACI,GAAG,GAAG1E,YAAY,CAAC2C,SAAS,CAACgC,OAAO,CAACF,GAAG,EAAET,QAAQ,EAAEH,IAAI,CAAC;AAC7E;AAEAe,MAAM,CAACC,OAAO,GAAG;EACbpC,WAAW,EAAEA,WAAW;EACxBpC,IAAI,EAAEA;AACV,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}