{"ast":null,"code":"'use strict';\n\n//https://developer.yahoo.com/yql/console/?q=show%20tables&env=store://datatables.org/alltableswithkeys\nvar http = require('http');\nvar YahooApi = function YahooApi() {\n  var self = this;\n  self.diagnostics = false;\n  var baseUrlStart = 'http://query.yahooapis.com/v1/public/yql?q=';\n  var baseUrlEnd = '&format=json&env=store://datatables.org/alltableswithkeys';\n  function getUrl(query) {\n    //env=http://datatables.org/alltables.env\n    //env=store://datatables.org/alltableswithkeys\n    var url = '' + baseUrlStart + encodeURIComponent(query) + baseUrlEnd;\n    if (self.diagnostics) {\n      url += '&diagnostics=true';\n    }\n    return url;\n  }\n  function convertResult(data) {\n    data = JSON.parse(data);\n    var results = data.query.results;\n    if (!results || !results.quote) {\n      return null;\n    }\n    if (!Array.isArray(results.quote)) {\n      return [results.quote];\n    }\n    return results.quote;\n  }\n  self._request = function (query, callback) {\n    var url = getUrl(query);\n    http.get(url, function (res) {\n      res.setEncoding('utf8');\n      var data = '';\n      res.on('data', function (chunk) {\n        data += chunk;\n      });\n      res.on('end', function () {\n        try {\n          var converted = convertResult(data);\n          callback(null, converted);\n        } catch (e) {\n          callback(e);\n        }\n      });\n      // consume response body\n      res.resume();\n    }).on('error', function (e) {\n      callback(e);\n    });\n  };\n  self.getQuotes = function (symbol, callback) {\n    var commaSymbols = symbol;\n    if (Array.isArray(symbol)) {\n      commaSymbols = symbol.join(',');\n    }\n    this._request('select * from yahoo.finance.quotes where symbol in (\\'' + commaSymbols + '\\')', callback);\n  };\n  self.getHistorical = function (symbol, startDate, endDate, callback) {\n    this._request('select * from yahoo.finance.historicaldata where symbol = \\'' + symbol + '\\' and startDate = \\'' + startDate + '\\' and endDate = \\'' + endDate + '\\'', callback);\n  };\n  self.getDividendHistory = function (symbol, startDate, endDate, callback) {\n    this._request('select * from yahoo.finance.dividendhistory where symbol = \\'' + symbol + '\\' and startDate = \\'' + startDate + '\\' and endDate = \\'' + endDate + '\\'', callback);\n  };\n};\nmodule.exports = new YahooApi();","map":{"version":3,"names":["http","require","YahooApi","self","diagnostics","baseUrlStart","baseUrlEnd","getUrl","query","url","encodeURIComponent","convertResult","data","JSON","parse","results","quote","Array","isArray","_request","callback","get","res","setEncoding","on","chunk","converted","e","resume","getQuotes","symbol","commaSymbols","join","getHistorical","startDate","endDate","getDividendHistory","module","exports"],"sources":["/Users/lordvoldemort/IdeaProjects/Webdevelopment/Bulls and Bears/bull_bear/node_modules/yfinance/dist/index.js"],"sourcesContent":["'use strict';\n\n//https://developer.yahoo.com/yql/console/?q=show%20tables&env=store://datatables.org/alltableswithkeys\nvar http = require('http');\n\nvar YahooApi = function YahooApi() {\n    var self = this;\n    self.diagnostics = false;\n    var baseUrlStart = 'http://query.yahooapis.com/v1/public/yql?q=';\n    var baseUrlEnd = '&format=json&env=store://datatables.org/alltableswithkeys';\n\n    function getUrl(query) {\n        //env=http://datatables.org/alltables.env\n        //env=store://datatables.org/alltableswithkeys\n        var url = '' + baseUrlStart + encodeURIComponent(query) + baseUrlEnd;\n        if (self.diagnostics) {\n            url += '&diagnostics=true';\n        }\n        return url;\n    }\n\n    function convertResult(data) {\n        data = JSON.parse(data);\n        var results = data.query.results;\n        if (!results || !results.quote) {\n            return null;\n        }\n        if (!Array.isArray(results.quote)) {\n            return [results.quote];\n        }\n\n        return results.quote;\n    }\n\n    self._request = function (query, callback) {\n        var url = getUrl(query);\n\n        http.get(url, function (res) {\n            res.setEncoding('utf8');\n            var data = '';\n            res.on('data', function (chunk) {\n                data += chunk;\n            });\n            res.on('end', function () {\n                try {\n                    var converted = convertResult(data);\n                    callback(null, converted);\n                } catch (e) {\n                    callback(e);\n                }\n            });\n            // consume response body\n            res.resume();\n        }).on('error', function (e) {\n            callback(e);\n        });\n    };\n\n    self.getQuotes = function (symbol, callback) {\n        var commaSymbols = symbol;\n        if (Array.isArray(symbol)) {\n            commaSymbols = symbol.join(',');\n        }\n        this._request('select * from yahoo.finance.quotes where symbol in (\\'' + commaSymbols + '\\')', callback);\n    };\n\n    self.getHistorical = function (symbol, startDate, endDate, callback) {\n        this._request('select * from yahoo.finance.historicaldata where symbol = \\'' + symbol + '\\' and startDate = \\'' + startDate + '\\' and endDate = \\'' + endDate + '\\'', callback);\n    };\n\n    self.getDividendHistory = function (symbol, startDate, endDate, callback) {\n        this._request('select * from yahoo.finance.dividendhistory where symbol = \\'' + symbol + '\\' and startDate = \\'' + startDate + '\\' and endDate = \\'' + endDate + '\\'', callback);\n    };\n};\n\nmodule.exports = new YahooApi();"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}