{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\nvar helpers = require('./helpers');\nmodule.exports = function getLegendData(calcdata, opts) {\n  var inHover = opts._inHover;\n  var grouped = helpers.isGrouped(opts);\n  var reversed = helpers.isReversed(opts);\n  var lgroupToTraces = {};\n  var lgroups = [];\n  var hasOneNonBlankGroup = false;\n  var slicesShown = {};\n  var lgroupi = 0;\n  var maxNameLength = 0;\n  var i, j;\n  function addOneItem(legendGroup, legendItem) {\n    // each '' legend group is treated as a separate group\n    if (legendGroup === '' || !helpers.isGrouped(opts)) {\n      // TODO: check this against fullData legendgroups?\n      var uniqueGroup = '~~i' + lgroupi;\n      lgroups.push(uniqueGroup);\n      lgroupToTraces[uniqueGroup] = [legendItem];\n      lgroupi++;\n    } else if (lgroups.indexOf(legendGroup) === -1) {\n      lgroups.push(legendGroup);\n      hasOneNonBlankGroup = true;\n      lgroupToTraces[legendGroup] = [legendItem];\n    } else {\n      lgroupToTraces[legendGroup].push(legendItem);\n    }\n  }\n\n  // build an { legendgroup: [cd0, cd0], ... } object\n  for (i = 0; i < calcdata.length; i++) {\n    var cd = calcdata[i];\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var lgroup = trace.legendgroup;\n    if (!inHover && (!trace.visible || !trace.showlegend)) continue;\n    if (Registry.traceIs(trace, 'pie-like')) {\n      if (!slicesShown[lgroup]) slicesShown[lgroup] = {};\n      for (j = 0; j < cd.length; j++) {\n        var labelj = cd[j].label;\n        if (!slicesShown[lgroup][labelj]) {\n          addOneItem(lgroup, {\n            label: labelj,\n            color: cd[j].color,\n            i: cd[j].i,\n            trace: trace,\n            pts: cd[j].pts\n          });\n          slicesShown[lgroup][labelj] = true;\n          maxNameLength = Math.max(maxNameLength, (labelj || '').length);\n        }\n      }\n    } else {\n      addOneItem(lgroup, cd0);\n      maxNameLength = Math.max(maxNameLength, (trace.name || '').length);\n    }\n  }\n\n  // won't draw a legend in this case\n  if (!lgroups.length) return [];\n\n  // collapse all groups into one if all groups are blank\n  var shouldCollapse = !hasOneNonBlankGroup || !grouped;\n  var legendData = [];\n  for (i = 0; i < lgroups.length; i++) {\n    var t = lgroupToTraces[lgroups[i]];\n    if (shouldCollapse) {\n      legendData.push(t[0]);\n    } else {\n      legendData.push(t);\n    }\n  }\n  if (shouldCollapse) legendData = [legendData];\n  for (i = 0; i < legendData.length; i++) {\n    // find minimum rank within group\n    var groupMinRank = Infinity;\n    for (j = 0; j < legendData[i].length; j++) {\n      var rank = legendData[i][j].trace.legendrank;\n      if (groupMinRank > rank) groupMinRank = rank;\n    }\n\n    // record on first group element\n    legendData[i][0]._groupMinRank = groupMinRank;\n    legendData[i][0]._preGroupSort = i;\n  }\n  var orderFn1 = function (a, b) {\n    return a[0]._groupMinRank - b[0]._groupMinRank || a[0]._preGroupSort - b[0]._preGroupSort // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n    ;\n  };\n\n  var orderFn2 = function (a, b) {\n    return a.trace.legendrank - b.trace.legendrank || a._preSort - b._preSort // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n    ;\n  };\n\n  // sort considering minimum group legendrank\n  legendData.forEach(function (a, k) {\n    a[0]._preGroupSort = k;\n  });\n  legendData.sort(orderFn1);\n  for (i = 0; i < legendData.length; i++) {\n    // sort considering trace.legendrank and legend.traceorder\n    legendData[i].forEach(function (a, k) {\n      a._preSort = k;\n    });\n    legendData[i].sort(orderFn2);\n    var firstItemTrace = legendData[i][0].trace;\n    var groupTitle = null;\n    // get group title text\n    for (j = 0; j < legendData[i].length; j++) {\n      var gt = legendData[i][j].trace.legendgrouptitle;\n      if (gt && gt.text) {\n        groupTitle = gt;\n        if (inHover) gt.font = opts._groupTitleFont;\n        break;\n      }\n    }\n\n    // reverse order\n    if (reversed) legendData[i].reverse();\n    if (groupTitle) {\n      var hasPieLike = false;\n      for (j = 0; j < legendData[i].length; j++) {\n        if (Registry.traceIs(legendData[i][j].trace, 'pie-like')) {\n          hasPieLike = true;\n          break;\n        }\n      }\n\n      // set group title text\n      legendData[i].unshift({\n        i: -1,\n        groupTitle: groupTitle,\n        noClick: hasPieLike,\n        trace: {\n          showlegend: firstItemTrace.showlegend,\n          legendgroup: firstItemTrace.legendgroup,\n          visible: opts.groupclick === 'toggleitem' ? true : firstItemTrace.visible\n        }\n      });\n    }\n\n    // rearrange lgroupToTraces into a d3-friendly array of arrays\n    for (j = 0; j < legendData[i].length; j++) {\n      legendData[i][j] = [legendData[i][j]];\n    }\n  }\n\n  // number of legend groups - needed in legend/draw.js\n  opts._lgroupsLength = legendData.length;\n  // maximum name/label length - needed in legend/draw.js\n  opts._maxNameLength = maxNameLength;\n  return legendData;\n};","map":{"version":3,"names":["Registry","require","helpers","module","exports","getLegendData","calcdata","opts","inHover","_inHover","grouped","isGrouped","reversed","isReversed","lgroupToTraces","lgroups","hasOneNonBlankGroup","slicesShown","lgroupi","maxNameLength","i","j","addOneItem","legendGroup","legendItem","uniqueGroup","push","indexOf","length","cd","cd0","trace","lgroup","legendgroup","visible","showlegend","traceIs","labelj","label","color","pts","Math","max","name","shouldCollapse","legendData","t","groupMinRank","Infinity","rank","legendrank","_groupMinRank","_preGroupSort","orderFn1","a","b","orderFn2","_preSort","forEach","k","sort","firstItemTrace","groupTitle","gt","legendgrouptitle","text","font","_groupTitleFont","reverse","hasPieLike","unshift","noClick","groupclick","_lgroupsLength","_maxNameLength"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/components/legend/get_legend_data.js"],"sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar helpers = require('./helpers');\n\nmodule.exports = function getLegendData(calcdata, opts) {\n    var inHover = opts._inHover;\n    var grouped = helpers.isGrouped(opts);\n    var reversed = helpers.isReversed(opts);\n\n    var lgroupToTraces = {};\n    var lgroups = [];\n    var hasOneNonBlankGroup = false;\n    var slicesShown = {};\n    var lgroupi = 0;\n    var maxNameLength = 0;\n    var i, j;\n\n    function addOneItem(legendGroup, legendItem) {\n        // each '' legend group is treated as a separate group\n        if(legendGroup === '' || !helpers.isGrouped(opts)) {\n            // TODO: check this against fullData legendgroups?\n            var uniqueGroup = '~~i' + lgroupi;\n            lgroups.push(uniqueGroup);\n            lgroupToTraces[uniqueGroup] = [legendItem];\n            lgroupi++;\n        } else if(lgroups.indexOf(legendGroup) === -1) {\n            lgroups.push(legendGroup);\n            hasOneNonBlankGroup = true;\n            lgroupToTraces[legendGroup] = [legendItem];\n        } else {\n            lgroupToTraces[legendGroup].push(legendItem);\n        }\n    }\n\n    // build an { legendgroup: [cd0, cd0], ... } object\n    for(i = 0; i < calcdata.length; i++) {\n        var cd = calcdata[i];\n        var cd0 = cd[0];\n        var trace = cd0.trace;\n        var lgroup = trace.legendgroup;\n\n        if(!inHover && (!trace.visible || !trace.showlegend)) continue;\n\n        if(Registry.traceIs(trace, 'pie-like')) {\n            if(!slicesShown[lgroup]) slicesShown[lgroup] = {};\n\n            for(j = 0; j < cd.length; j++) {\n                var labelj = cd[j].label;\n\n                if(!slicesShown[lgroup][labelj]) {\n                    addOneItem(lgroup, {\n                        label: labelj,\n                        color: cd[j].color,\n                        i: cd[j].i,\n                        trace: trace,\n                        pts: cd[j].pts\n                    });\n\n                    slicesShown[lgroup][labelj] = true;\n                    maxNameLength = Math.max(maxNameLength, (labelj || '').length);\n                }\n            }\n        } else {\n            addOneItem(lgroup, cd0);\n            maxNameLength = Math.max(maxNameLength, (trace.name || '').length);\n        }\n    }\n\n    // won't draw a legend in this case\n    if(!lgroups.length) return [];\n\n    // collapse all groups into one if all groups are blank\n    var shouldCollapse = !hasOneNonBlankGroup || !grouped;\n\n    var legendData = [];\n    for(i = 0; i < lgroups.length; i++) {\n        var t = lgroupToTraces[lgroups[i]];\n        if(shouldCollapse) {\n            legendData.push(t[0]);\n        } else {\n            legendData.push(t);\n        }\n    }\n    if(shouldCollapse) legendData = [legendData];\n\n    for(i = 0; i < legendData.length; i++) {\n        // find minimum rank within group\n        var groupMinRank = Infinity;\n        for(j = 0; j < legendData[i].length; j++) {\n            var rank = legendData[i][j].trace.legendrank;\n            if(groupMinRank > rank) groupMinRank = rank;\n        }\n\n        // record on first group element\n        legendData[i][0]._groupMinRank = groupMinRank;\n        legendData[i][0]._preGroupSort = i;\n    }\n\n    var orderFn1 = function(a, b) {\n        return (\n            (a[0]._groupMinRank - b[0]._groupMinRank) ||\n            (a[0]._preGroupSort - b[0]._preGroupSort) // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n        );\n    };\n\n    var orderFn2 = function(a, b) {\n        return (\n            (a.trace.legendrank - b.trace.legendrank) ||\n            (a._preSort - b._preSort) // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n        );\n    };\n\n    // sort considering minimum group legendrank\n    legendData.forEach(function(a, k) { a[0]._preGroupSort = k; });\n    legendData.sort(orderFn1);\n    for(i = 0; i < legendData.length; i++) {\n        // sort considering trace.legendrank and legend.traceorder\n        legendData[i].forEach(function(a, k) { a._preSort = k; });\n        legendData[i].sort(orderFn2);\n\n        var firstItemTrace = legendData[i][0].trace;\n\n        var groupTitle = null;\n        // get group title text\n        for(j = 0; j < legendData[i].length; j++) {\n            var gt = legendData[i][j].trace.legendgrouptitle;\n            if(gt && gt.text) {\n                groupTitle = gt;\n                if(inHover) gt.font = opts._groupTitleFont;\n                break;\n            }\n        }\n\n        // reverse order\n        if(reversed) legendData[i].reverse();\n\n        if(groupTitle) {\n            var hasPieLike = false;\n            for(j = 0; j < legendData[i].length; j++) {\n                if(Registry.traceIs(legendData[i][j].trace, 'pie-like')) {\n                    hasPieLike = true;\n                    break;\n                }\n            }\n\n            // set group title text\n            legendData[i].unshift({\n                i: -1,\n                groupTitle: groupTitle,\n                noClick: hasPieLike,\n                trace: {\n                    showlegend: firstItemTrace.showlegend,\n                    legendgroup: firstItemTrace.legendgroup,\n                    visible: opts.groupclick === 'toggleitem' ? true : firstItemTrace.visible\n                }\n            });\n        }\n\n        // rearrange lgroupToTraces into a d3-friendly array of arrays\n        for(j = 0; j < legendData[i].length; j++) {\n            legendData[i][j] = [\n                legendData[i][j]\n            ];\n        }\n    }\n\n    // number of legend groups - needed in legend/draw.js\n    opts._lgroupsLength = legendData.length;\n    // maximum name/label length - needed in legend/draw.js\n    opts._maxNameLength = maxNameLength;\n\n    return legendData;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}