{"ast":null,"code":"'use strict';\n\nvar createMesh = require('../../../stackgl_modules').gl_mesh3d;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\nvar findNearestOnAxis = require('../isosurface/convert').findNearestOnAxis;\nvar generateIsoMeshes = require('../isosurface/convert').generateIsoMeshes;\nfunction VolumeTrace(scene, mesh, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.mesh = mesh;\n  this.name = '';\n  this.data = null;\n  this.showContour = false;\n}\nvar proto = VolumeTrace.prototype;\nproto.handlePick = function (selection) {\n  if (selection.object === this.mesh) {\n    var rawId = selection.data.index;\n    var x = this.data._meshX[rawId];\n    var y = this.data._meshY[rawId];\n    var z = this.data._meshZ[rawId];\n    var height = this.data._Ys.length;\n    var depth = this.data._Zs.length;\n    var i = findNearestOnAxis(x, this.data._Xs).id;\n    var j = findNearestOnAxis(y, this.data._Ys).id;\n    var k = findNearestOnAxis(z, this.data._Zs).id;\n    var selectIndex = selection.index = k + depth * j + depth * height * i;\n    selection.traceCoordinate = [this.data._meshX[selectIndex], this.data._meshY[selectIndex], this.data._meshZ[selectIndex], this.data._value[selectIndex]];\n    var text = this.data.hovertext || this.data.text;\n    if (Array.isArray(text) && text[selectIndex] !== undefined) {\n      selection.textLabel = text[selectIndex];\n    } else if (text) {\n      selection.textLabel = text;\n    }\n    return true;\n  }\n};\nproto.update = function (data) {\n  var scene = this.scene;\n  var layout = scene.fullSceneLayout;\n  this.data = generateIsoMeshes(data);\n\n  // Unpack position data\n  function toDataCoords(axis, coord, scale, calendar) {\n    return coord.map(function (x) {\n      return axis.d2l(x, 0, calendar) * scale;\n    });\n  }\n  var positions = zip3(toDataCoords(layout.xaxis, data._meshX, scene.dataScale[0], data.xcalendar), toDataCoords(layout.yaxis, data._meshY, scene.dataScale[1], data.ycalendar), toDataCoords(layout.zaxis, data._meshZ, scene.dataScale[2], data.zcalendar));\n  var cells = zip3(data._meshI, data._meshJ, data._meshK);\n  var config = {\n    positions: positions,\n    cells: cells,\n    lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n    ambient: data.lighting.ambient,\n    diffuse: data.lighting.diffuse,\n    specular: data.lighting.specular,\n    roughness: data.lighting.roughness,\n    fresnel: data.lighting.fresnel,\n    vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n    faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n    opacity: data.opacity,\n    opacityscale: data.opacityscale,\n    contourEnable: data.contour.show,\n    contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n    contourWidth: data.contour.width,\n    useFacetNormals: data.flatshading\n  };\n  var cOpts = extractOpts(data);\n  config.vertexIntensity = data._meshIntensity;\n  config.vertexIntensityBounds = [cOpts.min, cOpts.max];\n  config.colormap = parseColorScale(data);\n\n  // Update mesh\n  this.mesh.update(config);\n};\nproto.dispose = function () {\n  this.scene.glplot.remove(this.mesh);\n  this.mesh.dispose();\n};\nfunction createVolumeTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var mesh = createMesh({\n    gl: gl\n  });\n  var result = new VolumeTrace(scene, mesh, data.uid);\n  mesh._trace = result;\n  result.update(data);\n  scene.glplot.add(mesh);\n  return result;\n}\nmodule.exports = createVolumeTrace;","map":{"version":3,"names":["createMesh","require","gl_mesh3d","parseColorScale","str2RgbaArray","extractOpts","zip3","findNearestOnAxis","generateIsoMeshes","VolumeTrace","scene","mesh","uid","name","data","showContour","proto","prototype","handlePick","selection","object","rawId","index","x","_meshX","y","_meshY","z","_meshZ","height","_Ys","length","depth","_Zs","i","_Xs","id","j","k","selectIndex","traceCoordinate","_value","text","hovertext","Array","isArray","undefined","textLabel","update","layout","fullSceneLayout","toDataCoords","axis","coord","scale","calendar","map","d2l","positions","xaxis","dataScale","xcalendar","yaxis","ycalendar","zaxis","zcalendar","cells","_meshI","_meshJ","_meshK","config","lightPosition","lightposition","ambient","lighting","diffuse","specular","roughness","fresnel","vertexNormalsEpsilon","vertexnormalsepsilon","faceNormalsEpsilon","facenormalsepsilon","opacity","opacityscale","contourEnable","contour","show","contourColor","color","slice","contourWidth","width","useFacetNormals","flatshading","cOpts","vertexIntensity","_meshIntensity","vertexIntensityBounds","min","max","colormap","dispose","glplot","remove","createVolumeTrace","gl","result","_trace","add","module","exports"],"sources":["/Users/lordvoldemort/django_react/second_attempt/frontend/bull_bear/node_modules/plotly.js/src/traces/volume/convert.js"],"sourcesContent":["'use strict';\n\nvar createMesh = require('../../../stackgl_modules').gl_mesh3d;\n\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\n\nvar findNearestOnAxis = require('../isosurface/convert').findNearestOnAxis;\nvar generateIsoMeshes = require('../isosurface/convert').generateIsoMeshes;\n\nfunction VolumeTrace(scene, mesh, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.mesh = mesh;\n    this.name = '';\n    this.data = null;\n    this.showContour = false;\n}\n\nvar proto = VolumeTrace.prototype;\n\nproto.handlePick = function(selection) {\n    if(selection.object === this.mesh) {\n        var rawId = selection.data.index;\n\n        var x = this.data._meshX[rawId];\n        var y = this.data._meshY[rawId];\n        var z = this.data._meshZ[rawId];\n\n        var height = this.data._Ys.length;\n        var depth = this.data._Zs.length;\n\n        var i = findNearestOnAxis(x, this.data._Xs).id;\n        var j = findNearestOnAxis(y, this.data._Ys).id;\n        var k = findNearestOnAxis(z, this.data._Zs).id;\n\n        var selectIndex = selection.index = k + depth * j + depth * height * i;\n\n        selection.traceCoordinate = [\n            this.data._meshX[selectIndex],\n            this.data._meshY[selectIndex],\n            this.data._meshZ[selectIndex],\n            this.data._value[selectIndex]\n        ];\n\n        var text = this.data.hovertext || this.data.text;\n        if(Array.isArray(text) && text[selectIndex] !== undefined) {\n            selection.textLabel = text[selectIndex];\n        } else if(text) {\n            selection.textLabel = text;\n        }\n\n        return true;\n    }\n};\n\nproto.update = function(data) {\n    var scene = this.scene;\n    var layout = scene.fullSceneLayout;\n\n    this.data = generateIsoMeshes(data);\n\n    // Unpack position data\n    function toDataCoords(axis, coord, scale, calendar) {\n        return coord.map(function(x) {\n            return axis.d2l(x, 0, calendar) * scale;\n        });\n    }\n\n    var positions = zip3(\n        toDataCoords(layout.xaxis, data._meshX, scene.dataScale[0], data.xcalendar),\n        toDataCoords(layout.yaxis, data._meshY, scene.dataScale[1], data.ycalendar),\n        toDataCoords(layout.zaxis, data._meshZ, scene.dataScale[2], data.zcalendar));\n\n    var cells = zip3(data._meshI, data._meshJ, data._meshK);\n\n    var config = {\n        positions: positions,\n        cells: cells,\n        lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n        ambient: data.lighting.ambient,\n        diffuse: data.lighting.diffuse,\n        specular: data.lighting.specular,\n        roughness: data.lighting.roughness,\n        fresnel: data.lighting.fresnel,\n        vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n        faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n        opacity: data.opacity,\n        opacityscale: data.opacityscale,\n        contourEnable: data.contour.show,\n        contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n        contourWidth: data.contour.width,\n        useFacetNormals: data.flatshading\n    };\n\n    var cOpts = extractOpts(data);\n    config.vertexIntensity = data._meshIntensity;\n    config.vertexIntensityBounds = [cOpts.min, cOpts.max];\n    config.colormap = parseColorScale(data);\n\n    // Update mesh\n    this.mesh.update(config);\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.mesh);\n    this.mesh.dispose();\n};\n\nfunction createVolumeTrace(scene, data) {\n    var gl = scene.glplot.gl;\n    var mesh = createMesh({gl: gl});\n    var result = new VolumeTrace(scene, mesh, data.uid);\n\n    mesh._trace = result;\n    result.update(data);\n    scene.glplot.add(mesh);\n    return result;\n}\n\nmodule.exports = createVolumeTrace;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}