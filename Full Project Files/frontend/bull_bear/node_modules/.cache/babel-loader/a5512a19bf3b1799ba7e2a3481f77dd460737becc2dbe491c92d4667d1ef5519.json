{"ast":null,"code":"var _jsxFileName = \"/Users/lordvoldemort/IdeaProjects/Webdevelopment/Bulls and Bears/bull_bear/src/components/Searchbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Plot from 'react-plotly.js';\nimport yfinance from 'yfinance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Searchbar() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await yfinance.download('AAPL', '2020-01-01', '2021-01-01', {\n          interval: '1d'\n        });\n        const candlestickData = {\n          x: response.index,\n          open: response.Open,\n          high: response.High,\n          low: response.Low,\n          close: response.Close,\n          type: 'candlestick',\n          name: 'AAPL'\n        };\n        setData([candlestickData]);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60000); // update data every minute\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: data,\n      layout: {\n        title: 'AAPL Candlestick Chart',\n        xaxis: {\n          title: 'Date'\n        },\n        yaxis: {\n          title: 'Price'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Searchbar, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = Searchbar;\nexport default Searchbar;\nvar _c;\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"names":["React","useState","useEffect","Plot","yfinance","jsxDEV","_jsxDEV","Searchbar","_s","data","setData","error","setError","fetchData","response","download","interval","candlestickData","x","index","open","Open","high","High","low","Low","close","Close","type","name","message","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","layout","title","xaxis","yaxis","_c","$RefreshReg$"],"sources":["/Users/lordvoldemort/IdeaProjects/Webdevelopment/Bulls and Bears/bull_bear/src/components/Searchbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Plot from 'react-plotly.js';\nimport yfinance from 'yfinance';\n\nfunction Searchbar() {\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await yfinance.download('AAPL', '2020-01-01', '2021-01-01', { interval: '1d' });\n                const candlestickData = {\n                    x: response.index,\n                    open: response.Open,\n                    high: response.High,\n                    low: response.Low,\n                    close: response.Close,\n                    type: 'candlestick',\n                    name: 'AAPL',\n                };\n                setData([candlestickData]);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 60000); // update data every minute\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <Plot\n                data={data}\n                layout={{\n                    title: 'AAPL Candlestick Chart',\n                    xaxis: {\n                        title: 'Date',\n                    },\n                    yaxis: {\n                        title: 'Price',\n                    },\n                }}\n            />\n        </div>\n    );\n}\n\nexport default Searchbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,QAAQ,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;QAChG,MAAMC,eAAe,GAAG;UACpBC,CAAC,EAAEJ,QAAQ,CAACK,KAAK;UACjBC,IAAI,EAAEN,QAAQ,CAACO,IAAI;UACnBC,IAAI,EAAER,QAAQ,CAACS,IAAI;UACnBC,GAAG,EAAEV,QAAQ,CAACW,GAAG;UACjBC,KAAK,EAAEZ,QAAQ,CAACa,KAAK;UACrBC,IAAI,EAAE,aAAa;UACnBC,IAAI,EAAE;QACV,CAAC;QACDnB,OAAO,CAAC,CAACO,eAAe,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACmB,OAAO,CAAC;MAC3B;IACJ,CAAC;IAEDjB,SAAS,EAAE;IACX,MAAMG,QAAQ,GAAGe,WAAW,CAAClB,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEhD,OAAO,MAAM;MACTmB,aAAa,CAAChB,QAAQ,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIL,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAA2B,QAAA,GAAK,SAAO,EAACtB,KAAK;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACpC;EAEA,oBACI/B,OAAA;IAAA2B,QAAA,eACI3B,OAAA,CAACH,IAAI;MACDM,IAAI,EAAEA,IAAK;MACX6B,MAAM,EAAE;QACJC,KAAK,EAAE,wBAAwB;QAC/BC,KAAK,EAAE;UACHD,KAAK,EAAE;QACX,CAAC;QACDE,KAAK,EAAE;UACHF,KAAK,EAAE;QACX;MACJ;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAAC7B,EAAA,CAnDQD,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAqDlB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}